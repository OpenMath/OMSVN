#     This is the Mathematical Markup Language (MathML) 3.0, an XML
#     application for describing mathematical notation and capturing
#     both its structure and content.
#
#     Copyright 1998-2007 World Wide Web Consortium
#        (Massachusetts Institute of Technology, Institut National de
#         Recherche en Informatique et en Automatique, Keio University).
#         All Rights Reserved.
#
#     Permission to use, copy, modify and distribute the RelaxNG schema for MathML3
#     and its accompanying documentation for any purpose and without fee is
#     hereby granted in perpetuity, provided that the above copyright notice
#     and this paragraph appear in all copies.  The copyright holders make
#     no representation about the suitability of the Schema for any purpose.
#
#     This file contains the arity checking rules for the symbols
#     from the STS types for the content dictionary logic1
#     It is provided "as is" without expressed or implied warranty.
#
#     Revision:   $Id$

namespace om = "http://www.openmath.org/OpenMath"
namespace m  ="http://www.w3.org/1998/Math/MathML"
equivalent_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"equivalent"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"equivalent"}}
not_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"not"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"not"}}
and_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"and"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"and"}}
xor_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"xor"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"xor"}}
or_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"or"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"or"}}
implies_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"implies"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"implies"}}
true_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"true"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"true"}}
false_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"false"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"false"}}
Boolean_setname2_type |= element om:OMA {equivalent_logic1_elt,Boolean_setname2_type,Boolean_setname2_type}
Boolean_setname2_type |= element om:OMA {not_logic1_elt,Boolean_setname2_type}
Boolean_setname2_type |= element om:OMA {and_logic1_elt,Boolean_setname2_type*}
Boolean_setname2_type |= element om:OMA {xor_logic1_elt,Boolean_setname2_type*}
Boolean_setname2_type |= element om:OMA {or_logic1_elt,Boolean_setname2_type*}
Boolean_setname2_type |= element om:OMA {implies_logic1_elt,Boolean_setname2_type,Boolean_setname2_type}
Boolean_setname2_type |= true_logic1_elt
Boolean_setname2_type |= false_logic1_elt
