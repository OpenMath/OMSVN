#     This is the Mathematical Markup Language (MathML) 3.0, an XML
#     application for describing mathematical notation and capturing
#     both its structure and content.
#
#     Copyright 1998-2007 World Wide Web Consortium
#        (Massachusetts Institute of Technology, Institut National de
#         Recherche en Informatique et en Automatique, Keio University).
#         All Rights Reserved.
#
#     Permission to use, copy, modify and distribute the RelaxNG schema for MathML3
#     and its accompanying documentation for any purpose and without fee is
#     hereby granted in perpetuity, provided that the above copyright notice
#     and this paragraph appear in all copies.  The copyright holders make
#     no representation about the suitability of the Schema for any purpose.
#
#     This file contains the arity checking rules for the symbols
#     from the STS types for the content dictionary arith1
#     It is provided "as is" without expressed or implied warranty.
#
#     Revision:   $Id$

namespace om = "http://www.openmath.org/OpenMath"
namespace m  ="http://www.w3.org/1998/Math/MathML"
lcm_arith1_elt = element om:OMS {
        attribute cd {"arith1"},
        attribute name {"lcm"}}
 |    element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"lcm"}}
gcd_arith1_elt = element om:OMS {
        attribute cd {"arith1"},
        attribute name {"gcd"}}
 |    element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"gcd"}}
plus_arith1_elt = element om:OMS {
        attribute cd {"arith1"},
        attribute name {"plus"}}
 |    element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"plus"}}
unary_minus_arith1_elt = element om:OMS {
        attribute cd {"arith1"},
        attribute name {"unary_minus"}}
 |    element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"unary_minus"}}
minus_arith1_elt = element om:OMS {
        attribute cd {"arith1"},
        attribute name {"minus"}}
 |    element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"minus"}}
times_arith1_elt = element om:OMS {
        attribute cd {"arith1"},
        attribute name {"times"}}
 |    element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"times"}}
divide_arith1_elt = element om:OMS {
        attribute cd {"arith1"},
        attribute name {"divide"}}
 |    element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"divide"}}
power_arith1_elt = element om:OMS {
        attribute cd {"arith1"},
        attribute name {"power"}}
 |    element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"power"}}
abs_arith1_elt = element om:OMS {
        attribute cd {"arith1"},
        attribute name {"abs"}}
 |    element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"abs"}}
root_arith1_elt = element om:OMS {
        attribute cd {"arith1"},
        attribute name {"root"}}
 |    element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"root"}}
sum_arith1_elt = element om:OMS {
        attribute cd {"arith1"},
        attribute name {"sum"}}
 |    element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"sum"}}
product_arith1_elt = element om:OMS {
        attribute cd {"arith1"},
        attribute name {"product"}}
 |    element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"product"}}
SemiGroup_type |= element om:OMA {lcm_arith1_elt,SemiGroup_type*}
SemiGroup_type |= element om:OMA {gcd_arith1_elt,SemiGroup_type*}
AbelianGroup_type |= element om:OMA {gcd_arith1_elt,AbelianGroup_type*}
AbelianSemiGroup_type |= element om:OMA {plus_arith1_elt,AbelianSemiGroup_type*}
AbelianGroup_type |= element om:OMA {unary_minus_arith1_elt,AbelianGroup_type}
AbelianGroup_type |= element om:OMA {minus_arith1_elt,AbelianGroup_type,AbelianGroup_type}
SemiGroup_type |= element om:OMA {times_arith1_elt,SemiGroup_type*}
AbelianGroup_type |= element om:OMA {times_arith1_elt,AbelianGroup_type*}
AbelianGroup_type |= element om:OMA {divide_arith1_elt,AbelianGroup_type,AbelianGroup_type}
NumericalValue_sts_type |= element om:OMA {power_arith1_elt,NumericalValue_sts_type,NumericalValue_sts_type}
R_setname1_type |= element om:OMA {abs_arith1_elt,C_setname1_type}
NumericalValue_sts_type |= element om:OMA {root_arith1_elt,NumericalValue_sts_type,NumericalValue_sts_type}
AbelianMonoid_type |= element om:OMA {sum_arith1_elt,IntegerRange_type,function_type}
AbelianMonoid_type |= element om:OMA {product_arith1_elt,IntegerRange_type,function_type}
