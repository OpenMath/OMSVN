#     This file contains the type checking rules for the symbols
#     from the STS types for the content dictionary 
#     It is provided "as is" without expressed or implied warranty.
#
#     Revision:   $Id$
#    $HeadURL$ 


namespace m  ="http://www.w3.org/1998/Math/MathML"




     This document is distributed in the hope that it will be useful, 
     but WITHOUT ANY WARRANTY; without even the implied warranty of 
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

     The copyright holder grants you permission to redistribute this 
     document freely as a verbatim copy. Furthermore, the copyright
     holder permits you to develop any derived work from this document
     provided that the following conditions are met.
       a) The derived work acknowledges the fact that it is derived from
          this document, and maintains a prominent reference in the 
          work to the original source.
       b) The fact that the derived work is not the original OpenMath 
          document is stated prominently in the derived work.  Moreover if
          both this document and the derived work are Content Dictionaries
          then the derived work must include a different CDName element,
          chosen so that it cannot be confused with any works adopted by
          the OpenMath Society.  In particular, if there is a Content 
          Dictionary Group whose name is, for example, `math' containing
          Content Dictionaries named `math1', `math2' etc., then you should 
          not name a derived Content Dictionary `mathN' where N is an integer.
          However you are free to name it `private_mathN' or some such.  This
          is because the names `mathN' may be used by the OpenMath Society
          for future extensions.
       c) The derived work is distributed under terms that allow the
          compilation of derived works, but keep paragraphs a) and b)
          intact.  The simplest way to do this is to distribute the derived
          work under the OpenMath license, but this is not a requirement.
     If you have questions about this license please contact the OpenMath
     society at http://www.openmath.org.


sts
http://www.openmath.org/cd
http://www.openmath.org/cd/sts.ocd 
2006-03-30
2004-03-30
4
0
official

 
Definitions of the symbols used by the OpenMath Small Type System.




type
  
    type
  
semantic-attribution
 
A symbol to be used within an OpenMath attribute to specify the type of
the object.



The variable z is attributed with a type for complex numbers.

  
    
       
       
    
    
  






mapsto
  
    mapsto
  
application

This symbol represents the construction of a function type.

The first n-1 children denote the types of the arguments,
the last denotes the return type.


The signature of the power function: (Real , Integer) -> Real

  
    
    
    
    
  





nary
  
    nary
  
application

Constructs a child of mapsto which denotes an arbitrary number of
copies of the argument of nary.


The signature for list, an n-ary function:

 
  
   
     
     
   
  
 






nassoc
  
    nassoc
  
application
 
Constructs a child of mapsto which denotes an arbitrary number of
copies of the argument of nassoc. The operator is associative on these
arguments which means that repeated uses may be flattened/unflattened.


The signature for plus, an associative n-ary function:

  
    
    
       
      
    
    
  





error
  
    error
  
constant

The error symbol is the 'return type' of error symbols in the error
signature file.



  
    
    
    
  





  
    structure
  
structure
application
 
The structure element is used to represent a structure of a particular
(algebraic) type.


The signature of a function which given a set will return an element
of that set:

  
    
    
      
      
    
    
  






binder
  
    binder
  
constant

An `OMBIND' object has three parts: a "binder" such as "lambda" or
"for all", a (list of) bound variables, and an expression.  The use of
`binder' in a signature indicates that we are describing something
which can only be used as the first child of an OMBIND construct.


The signature of forall is:

 





attribution
  
    attribution
  
constant

An `attribution' object consists of pairs of keys and values.  The use
of the symbol `attribution' in a signature indicates that the symbol
is to be used as a key.



 






Object
  
    Object
  
constant

Denotes any OpenMath object.


The signature for list, to show that list has the signature:
 Object* -> Object

 
  
   
     
     
   
  
 





NumericalValue
constant

Denotes an OpenMath object that is to be thought of as something that
represents a numerical value, or a numerical value.


The generic signature for the function power:

 
  
   
   
   
 





SetNumericalValue
constant

Denotes an OpenMath object that is to be thought of as something that
represents a set of numerical values, or a set of numerical values.


The generic signature for the function arctan from transc3:

 
  
   
   
 





