#     This file contains the arity checking rules for the symbols
#     from the STS types for the content dictionary arith1
#     It is provided "as is" without expressed or implied warranty.
#
#     Revision:   $Id$


namespace m  ="http://www.w3.org/1998/Math/MathML"
lcm_arith1_elt = element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"lcm"}}
gcd_arith1_elt = element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"gcd"}}
plus_arith1_elt = element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"plus"}}
unary_minus_arith1_elt = element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"unary_minus"}}
minus_arith1_elt = element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"minus"}}
times_arith1_elt = element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"times"}}
divide_arith1_elt = element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"divide"}}
power_arith1_elt = element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"power"}}
abs_arith1_elt = element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"abs"}}
root_arith1_elt = element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"root"}}
sum_arith1_elt = element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"sum"}}
product_arith1_elt = element m:csymbol {
        attribute cd {"arith1"},
        attribute name {"product"}}
SemiGroup_type |= element m:apply {lcm_arith1_elt,SemiGroup_type*}
SemiGroup_type |= element m:apply {gcd_arith1_elt,SemiGroup_type*}
AbelianGroup_type |= element m:apply {gcd_arith1_elt,AbelianGroup_type*}
AbelianSemiGroup_type |= element m:apply {plus_arith1_elt,AbelianSemiGroup_type*}
AbelianGroup_type |= element m:apply {unary_minus_arith1_elt,AbelianGroup_type}
AbelianGroup_type |= element m:apply {minus_arith1_elt,AbelianGroup_type,AbelianGroup_type}
SemiGroup_type |= element m:apply {times_arith1_elt,SemiGroup_type*}
AbelianGroup_type |= element m:apply {times_arith1_elt,AbelianGroup_type*}
AbelianGroup_type |= element m:apply {divide_arith1_elt,AbelianGroup_type,AbelianGroup_type}
NumericalValue_sts_type |= element m:apply {power_arith1_elt,NumericalValue_sts_type,NumericalValue_sts_type}
R_setname1_type |= element m:apply {abs_arith1_elt,C_setname1_type}
NumericalValue_sts_type |= element m:apply {root_arith1_elt,NumericalValue_sts_type,NumericalValue_sts_type}
AbelianMonoid_type |= element m:apply {sum_arith1_elt,IntegerRange_type,function_type}
AbelianMonoid_type |= element m:apply {product_arith1_elt,IntegerRange_type,function_type}
