#     This file contains the arity checking rules for the symbols
#     from the STS types for the content dictionary logic1
#     It is provided "as is" without expressed or implied warranty.
#
#     Revision:   $Id: sts2rnc.xsl 524 2008-01-10 05:05:35Z kohlhase $


namespace m  ="http://www.w3.org/1998/Math/MathML"
equivalent_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"equivalent"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"equivalent"}}
not_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"not"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"not"}}
and_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"and"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"and"}}
xor_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"xor"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"xor"}}
or_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"or"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"or"}}
implies_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"implies"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"implies"}}
true_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"true"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"true"}}
false_logic1_elt = element om:OMS {
        attribute cd {"logic1"},
        attribute name {"false"}}
 |    element m:csymbol {
        attribute cd {"logic1"},
        attribute name {"false"}}
Boolean_setname2_type |= element m:apply {equivalent_logic1_elt,Boolean_setname2_type,Boolean_setname2_type}
Boolean_setname2_type |= element m:apply {not_logic1_elt,Boolean_setname2_type}
Boolean_setname2_type |= element m:apply {and_logic1_elt,Boolean_setname2_type*}
Boolean_setname2_type |= element m:apply {xor_logic1_elt,Boolean_setname2_type*}
Boolean_setname2_type |= element m:apply {or_logic1_elt,Boolean_setname2_type*}
Boolean_setname2_type |= element m:apply {implies_logic1_elt,Boolean_setname2_type,Boolean_setname2_type}
Boolean_setname2_type |= true_logic1_elt
Boolean_setname2_type |= false_logic1_elt
