#     This file contains the type checking rules for the symbols
#     from the STS types for the content dictionary 
#     It is provided "as is" without expressed or implied warranty.
#
#     Revision:   $Id$
#    $HeadURL$ 


namespace om = "http://www.openmath.org/OpenMath"





     This document is distributed in the hope that it will be useful, 
     but WITHOUT ANY WARRANTY; without even the implied warranty of 
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

     The copyright holder grants you permission to redistribute this 
     document freely as a verbatim copy. Furthermore, the copyright
     holder permits you to develop any derived work from this document
     provided that the following conditions are met.
       a) The derived work acknowledges the fact that it is derived from
          this document, and maintains a prominent reference in the 
          work to the original source.
       b) The fact that the derived work is not the original OpenMath 
          document is stated prominently in the derived work.  Moreover if
          both this document and the derived work are Content Dictionaries
          then the derived work must include a different CDName element,
          chosen so that it cannot be confused with any works adopted by
          the OpenMath Society.  In particular, if there is a Content 
          Dictionary Group whose name is, for example, `math' containing
          Content Dictionaries named `math1', `math2' etc., then you should 
          not name a derived Content Dictionary `mathN' where N is an integer.
          However you are free to name it `private_mathN' or some such.  This
          is because the names `mathN' may be used by the OpenMath Society
          for future extensions.
       c) The derived work is distributed under terms that allow the
          compilation of derived works, but keep paragraphs a) and b)
          intact.  The simplest way to do this is to distribute the derived
          work under the OpenMath license, but this is not a requirement.
     If you have questions about this license please contact the OpenMath
     society at http://www.openmath.org.


veccalc1
http://www.openmath.org/cd
http://www.openmath.org/cd/veccalc1.ocd 
2006-03-30
2004-03-30
3
0
official

This CD contains symbols to represent functions which are concerned
with vector calculus.



divergence
  
    divergence
  
application

This symbol is used to represent the divergence function. It takes one
argument which should be a vector of scalar valued functions,
intended to represent a vector valued function and returns a
scalar value. It should satisfy the defining relation:
 divergence(F) = \partial(F_(x_1))/\partial(x_1) + ...
 + \partial(F_(x_n))/\partial(x_n)




          This symbol is used to represent the divergence function.
	  Given, one argument which is a vector of scalar valued functions defined on
	  the coordinates x_1, x_2, ... x_n.  It returns a scalar value function.  That
	  function satisfies the defining relation:
	  
	  divergence(F) = \partial(F_(x_1))/\partial(x_1) + ... + \partial(F_(x_n))/\partial(x_n) 
	  
	  The functions defining the coordinates may be defined implicitly as
	  expressions defined in terms of the coordinate names, in which case the
	  coordinate names must be provided as bound variables.
	
	
	  The divergence element is the vector calculus divergence operator,
	  often called div.
	
        


  
  a




	 E
        
	
	  Ff1f2f3
F
	

        
	xyz
  
    xy
    xz
    zy
  


	
	  
	    If a is a vector field defined inside a closed surface
	    S enclosing a volume V, then the divergence of
	    a is given by
	    
	  

  
  a
  
    
    V
    
      
        
        V
        0
      
    
    
      
      
        
        S
        a
      
      V
    
  

	




divergence(F) = \partial(F_(x_1))/\partial(x_1) + ...
 + \partial(F_(x_n))/\partial(x_n)





grad
  
    grad
  
application

This symbol is used to represent the grad function. It takes one
argument which should be a scalar valued function and returns a
vector of functions. It should satisfy the defining relation:
grad(F) = (\partial(F)/\partial(x_1), ... ,\partial(F)/partial(x_n))




          The gradient element is the vector calculus gradient operator, often called
          grad.  It represents the operation that constructs a vector of partial
          derivatives vector( df/dx_1 , df/dx_2, ... df/dx_n )
	  
	
	
	  The grad element is the vector calculus gradient operator, often
	  called grad.
	
       
	   Where for example f is a scalar function of three real variables. 
	   f	
	
	
xyz
  xyz





 
grad(F) = (\partial(F)/\partial(x_1), ... ,\partial(F)/partial(x_n))






curl
  
    curl
  
application

This symbol is used to represent the curl function. It takes one
argument which should be a vector of scalar valued functions, intended
to represent a vector valued function and returns a vector of
functions. It should satisfy the defining relation:
curl(F) = i X \partial(F)/\partial(x) + j X \partial(F)/\partial(y) +
j X \partial(F)/\partial(Z) where i,j,k are the unit vectors
corresponding to the x,y,z axes respectively and the multiplication X
is cross multiplication.




          This symbol is used to represent the curl operator. It requires both a
          coordinates and a vector of expressions defined over those coordinates. It
          returns a vector valued expression.
           In its functional form the coordinates are implicit in the definition of the
          function so it needs only one argument which is a vector valued function and
          returns a vector of functions.
	  

          Given F = F(x,y,z) = ( f1(x,y,z) , f2(x,y,z), f3(x,y,z) ) and coordinate
          names (x,y,z) the following relationship must hold:

          curl(F) = i X \partial(F)/\partial(x) + j X \partial(F)/\partial(y) + j X
          \partial(F)/\partial(Z) where i,j,k are the unit vectors corresponding to the
          x,y,z axes respectivly and the multiplication X is cross multiplication. 
	
	
	  The curl element is the vector calculus curl operator.
	

        
	  
	    
	    curl(F) = i X \partial(F)/\partial(x) + j X \partial(F)/\partial(y) + j X \partial(F)/\partial(Z) 
	  
	
	
	  Where for example a is a vector field.
	  a
	
	f




curl(F) = i X \partial(F)/\partial(x) + j X \partial(F)/\partial(y) +
j X \partial(F)/\partial(Z)




  
    
    
      
      
    
    
      
      
        
	
	  
	   1 
	   0 
	   0 
	
	
	  
	  
	    
	     1 
	  
	  
	
      
      
        
	
	  
	   0 
	   1 
	   0 
	
	
	  
	  
	    
	     2 
	  
	  
	
      
      
        
	
	  
	   0 
	   0 
	   1 
	
	
	  
	  
	    
	     3 
	  
	  
	
      
    
  





Laplacian
  
    laplacian
  
application

This symbol is used to represent the laplacian function. It takes one
argument which should be a vector of scalar valued functions, intended
to represent a vector valued function and returns a vector of
functions. It should satisfy the defining relation:
laplacian(F) = \partial^2(F)/\partial(x_1)^2 + ... +
\partial^2(F)/\partial(x_n)^2




  This is the element used to indicate an application of the laplacian
  operator.  It may be applied directly to expressions, in which case the
  coordinate names are provided in order by use of bvar.  It may also be applied
  directly to a function F in which case, the definition below is for F = F(x_1,
  x_2, ... x_n) where x_1, x_2, ...  x_n are the coordinate names.
  
  laplacian(F) = \partial^2(F)/\partial(x_1)^2 + ... + \partial^2(F)/\partial(x_n)^2


  The laplacian element is the vector calculus
  laplacian operator.

 E
Ff1f2f3
F
        
  xyz
  f
    xy
  

	
	Where for examplef is a scalar function of three real variables.
	
  
  
    f
  
  
    
    
      f
    
  





laplacian(F) = \partial^2(F)/\partial(x_1)^2 + ... +
\partial^2(F)/\partial(x_n)^2



