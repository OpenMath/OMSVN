#     This file contains the type checking rules for the symbols
#     from the STS types for the content dictionary 
#     It is provided "as is" without expressed or implied warranty.
#
#     Revision:   $Id: sts2rnc-sts.xsl 537 2008-01-18 08:00:43Z kohlhase $
#    $HeadURL: http://svn.openmath.org/OpenMath3/rnc/xsl/sts2rnc-sts.xsl $ 


namespace om = "http://www.openmath.org/OpenMath"





     This document is distributed in the hope that it will be useful, 
     but WITHOUT ANY WARRANTY; without even the implied warranty of 
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

     The copyright holder grants you permission to redistribute this 
     document freely as a verbatim copy. Furthermore, the copyright
     holder permits you to develop any derived work from this document
     provided that the following conditions are met.
       a) The derived work acknowledges the fact that it is derived from
          this document, and maintains a prominent reference in the 
          work to the original source.
       b) The fact that the derived work is not the original OpenMath 
          document is stated prominently in the derived work.  Moreover if
          both this document and the derived work are Content Dictionaries
          then the derived work must include a different CDName element,
          chosen so that it cannot be confused with any works adopted by
          the OpenMath Society.  In particular, if there is a Content 
          Dictionary Group whose name is, for example, `math' containing
          Content Dictionaries named `math1', `math2' etc., then you should 
          not name a derived Content Dictionary `mathN' where N is an integer.
          However you are free to name it `private_mathN' or some such.  This
          is because the names `mathN' may be used by the OpenMath Society
          for future extensions.
       c) The derived work is distributed under terms that allow the
          compilation of derived works, but keep paragraphs a) and b)
          intact.  The simplest way to do this is to distribute the derived
          work under the OpenMath license, but this is not a requirement.
     If you have questions about this license please contact the OpenMath
     society at http://www.openmath.org.


mathmltypes
http://www.openmath.org/cd
http://www.openmath.org/cd/mathmltypes.ocd
2006-03-30
2004-03-30
3
0
official

    This CD holds symbols denoting various types of numbers, vectors
    and similar constructs. Principally these are required for
    compatibility with MathML.



type
  
    type
  
semantic-attribution
 
A symbol to be used within an OpenMath attribute to specify the type of
the object.



The variable z is attributed with a type for complex numbers, to be
represented in polar notation.

  
    
       
       
    
    
  





integer_type
  
    integer_type
  
constant
 
A symbol to be used as the argument of the type symbol to convey the
type of an integer.



The variable z is attributed with a type for integers.

  
    
       
       
    
    
  





real_type
  
    real_type
  
constant
 
A symbol to be used as the argument of the type symbol to convey the
type of a real number.



The variable z is attributed with a type for real numbers.

  
    
       
       
    
    
  





rational_type
  
    rational_type
  
constant
 
A symbol to be used as the argument of the type symbol to convey the
type of a rational number.



The variable z is attributed with a type for rational numbers.

  
    
       
       
    
    
  





complex_cartesian_type
  
    complex_cartesian_type
  
constant
 
A symbol to be used as the argument of the type symbol to convey the
type of a complex number specified in terms of its real and imaginary
parts.



The variable z is attributed with a type for complex numbers represented in 
their Cartesian form.

  
    
       
       
    
    
  





complex_polar_type
  
    complex_polar_type
  
constant
 
A symbol to be used as the argument of the type symbol to convey the
type of a complex number specified in terms of its modulus and argument.



The variable z is attributed with a type for complex numbers represented in 
their polar form.

  
    
       
       
    
    
  





constant_type
  
    constant_type
  
constant
 
A symbol to be used as the argument of the type symbol to convey a
type for the common constants, pi ~= 3.1415, e ~= 2.718, i = square
root of -1, gamma ~= .5772, NaN, infinity (all in the nums cd), true
and false (in the logic cd). Also for MathML variables declared to
have type constant, as in <ci type="constant">x</ci>.



The variable z is attributed with a type for constants.

  
    
       
       
    
    
  





vector_type
  
    vector_type
  
constant
 
A symbol to be used as the argument of the type symbol to convey the
type of a (column) vector, an n-tuple of entries.



The variable z is attributed with a type for vectors.

  
    
       
       
    
    
  





list_type
  
    list_type
  
constant
 
A symbol to be used as the argument of the type symbol to convey the
type for a list.



The variable z is attributed with a type for lists.

  
    
       
       
    
    
  





set_type
  
    set_type
  
constant
 
A symbol to be used as the argument of the type symbol to convey the
type for a set.



The variable z is attributed with a type for sets.

  
    
       
       
    
    
  





matrix_type
  
    matrix_type
  
constant

A symbol to be used as the argument of the type symbol to convey the
type for a matrix (n tuple of rows, where each row is an m tuple for
some m, it should be noted that each row must be the same length).



The variable z is attributed with a type for matrices.

  
    
       
       
    
    
  





fn_type
  
    fn_type
  
constant
 
A symbol to be used as the argument of the type symbol to convey the
type for a function name.



The variable f is attributed to say it represents a function.

  
    
       
       
    
    
  




