#     This is the Mathematical Markup Language (MathML) 3.0, an XML
#     application for describing mathematical notation and capturing
#     both its structure and content.
#
#     Copyright 1998-2007 World Wide Web Consortium
#        (Massachusetts Institute of Technology, Institut National de
#         Recherche en Informatique et en Automatique, Keio University).
#         All Rights Reserved.
#
#     Permission to use, copy, modify and distribute the RelaxNG schema for MathML3
#     and its accompanying documentation for any purpose and without fee is
#     hereby granted in perpetuity, provided that the above copyright notice
#     and this paragraph appear in all copies.  The copyright holders make
#     no representation about the suitability of the Schema for any purpose.
#
#     This file contains the arity checking rules for the symbols
#     from the STS types for the content dictionary fns1
#     It is provided "as is" without expressed or implied warranty.
#
#     Revision:   $Id$

namespace om = "http://www.openmath.org/OpenMath"
namespace m  ="http://www.w3.org/1998/Math/MathML"
identity_fns1_elt = element om:OMS {
        attribute cd {"fns1"},
        attribute name {"identity"}}
 |    element m:csymbol {
        attribute cd {"fns1"},
        attribute name {"identity"}}
left_inverse_fns1_elt = element om:OMS {
        attribute cd {"fns1"},
        attribute name {"left_inverse"}}
 |    element m:csymbol {
        attribute cd {"fns1"},
        attribute name {"left_inverse"}}
right_inverse_fns1_elt = element om:OMS {
        attribute cd {"fns1"},
        attribute name {"right_inverse"}}
 |    element m:csymbol {
        attribute cd {"fns1"},
        attribute name {"right_inverse"}}
inverse_fns1_elt = element om:OMS {
        attribute cd {"fns1"},
        attribute name {"inverse"}}
 |    element m:csymbol {
        attribute cd {"fns1"},
        attribute name {"inverse"}}
domain_fns1_elt = element om:OMS {
        attribute cd {"fns1"},
        attribute name {"domain"}}
 |    element m:csymbol {
        attribute cd {"fns1"},
        attribute name {"domain"}}
domainofapplication_fns1_elt = element om:OMS {
        attribute cd {"fns1"},
        attribute name {"domainofapplication"}}
 |    element m:csymbol {
        attribute cd {"fns1"},
        attribute name {"domainofapplication"}}
range_fns1_elt = element om:OMS {
        attribute cd {"fns1"},
        attribute name {"range"}}
 |    element m:csymbol {
        attribute cd {"fns1"},
        attribute name {"range"}}
left_compose_fns1_elt = element om:OMS {
        attribute cd {"fns1"},
        attribute name {"left_compose"}}
 |    element m:csymbol {
        attribute cd {"fns1"},
        attribute name {"left_compose"}}
lambda_fns1_elt = element om:OMS {
        attribute cd {"fns1"},
        attribute name {"lambda"}}
 |    element m:csymbol {
        attribute cd {"fns1"},
        attribute name {"lambda"}}
Object_sts_type |= element om:OMA {identity_fns1_elt,Object_sts_type}
Object_sts_type |= element m:apply {identity_fns1_elt,Object_sts_type}
function_type |= element om:OMA {left_inverse_fns1_elt,function_type}
function_type |= element m:apply {left_inverse_fns1_elt,function_type}
function_type |= element om:OMA {right_inverse_fns1_elt,function_type}
function_type |= element m:apply {right_inverse_fns1_elt,function_type}
function_type |= element om:OMA {inverse_fns1_elt,function_type}
function_type |= element m:apply {inverse_fns1_elt,function_type}
Set_type |= element om:OMA {domain_fns1_elt,function_type}
Set_type |= element m:apply {domain_fns1_elt,function_type}
Set_type |= element om:OMA {domainofapplication_fns1_elt,function_type}
Set_type |= element m:apply {domainofapplication_fns1_elt,function_type}
Set_type |= element om:OMA {range_fns1_elt,function_type}
Set_type |= element m:apply {range_fns1_elt,function_type}
function_type |= element om:OMA {left_compose_fns1_elt,function_type,function_type}
function_type |= element m:apply {left_compose_fns1_elt,function_type,function_type}
binder_sts_type |= lambda_fns1_elt
