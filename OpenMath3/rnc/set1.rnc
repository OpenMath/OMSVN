#     This is the Mathematical Markup Language (MathML) 3.0, an XML
#     application for describing mathematical notation and capturing
#     both its structure and content.
#
#     Copyright 1998-2007 World Wide Web Consortium
#        (Massachusetts Institute of Technology, Institut National de
#         Recherche en Informatique et en Automatique, Keio University).
#         All Rights Reserved.
#
#     Permission to use, copy, modify and distribute the RelaxNG schema for MathML3
#     and its accompanying documentation for any purpose and without fee is
#     hereby granted in perpetuity, provided that the above copyright notice
#     and this paragraph appear in all copies.  The copyright holders make
#     no representation about the suitability of the Schema for any purpose.
#
#     This file contains the arity checking rules for the symbols
#     from the STS types for the content dictionary set1
#     It is provided "as is" without expressed or implied warranty.
#
#     Revision:   $Id$
cartesian_product@set1 = element om:OMS {
        attribute cd {"set1"},
        attribute name {"cartesian_product"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"cartesian_product"}}
map@set1 = element om:OMS {
        attribute cd {"set1"},
        attribute name {"map"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"map"}}
suchthat@set1 = element om:OMS {
        attribute cd {"set1"},
        attribute name {"suchthat"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"suchthat"}}
emptyset@set1 = element om:OMS {
        attribute cd {"set1"},
        attribute name {"emptyset"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"emptyset"}}
size@set1 = element om:OMS {
        attribute cd {"set1"},
        attribute name {"size"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"size"}}
set@set1 = element om:OMS {
        attribute cd {"set1"},
        attribute name {"set"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"set"}}
intersect@set1 = element om:OMS {
        attribute cd {"set1"},
        attribute name {"intersect"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"intersect"}}
union@set1 = element om:OMS {
        attribute cd {"set1"},
        attribute name {"union"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"union"}}
setdiff@set1 = element om:OMS {
        attribute cd {"set1"},
        attribute name {"setdiff"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"setdiff"}}
subset@set1 = element om:OMS {
        attribute cd {"set1"},
        attribute name {"subset"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"subset"}}
in@set1 = element om:OMS {
        attribute cd {"set1"},
        attribute name {"in"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"in"}}
notin@set1 = element om:OMS {
        attribute cd {"set1"},
        attribute name {"notin"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"notin"}}
prsubset@set1 = element om:OMS {
        attribute cd {"set1"},
        attribute name {"prsubset"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"prsubset"}}
notsubset@set1 = element om:OMS {
        attribute cd {"set1"},
        attribute name {"notsubset"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"notsubset"}}
notprsubset@set1 = element om:OMS {
        attribute cd {"set1"},
        attribute name {"notprsubset"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"notprsubset"}}
 | = element om:OMA {cartesian_product@set1,}
Set@omtypes | = element om:OMA {map@set1,,Set@omtypes}
 | = element om:OMA {suchthat@set1,,}
Set | = emptyset@set1
CardinalNumber@omtypes | = element om:OMA {size@set1,Set@omtypes}
Set@omtypes | = element om:OMA {set@set1,}
Set@omtypes | = element om:OMA {intersect@set1,Set@omtypes*}
Set@omtypes | = element om:OMA {union@set1,Set@omtypes*}
Set@omtypes | = element om:OMA {setdiff@set1,Set@omtypes,Set@omtypes}
Boolean@setname2 | = element om:OMA {subset@set1,Set@omtypes,Set@omtypes}
Boolean@setname2 | = element om:OMA {in@set1,Object@sts,Set@omtypes}
Boolean@setname2 | = element om:OMA {notin@set1,Object@sts,Set@omtypes}
Boolean@setname2 | = element om:OMA {prsubset@set1,Set@omtypes,Set@omtypes}
Boolean@setname2 | = element om:OMA {notsubset@set1,Set@omtypes,Set@omtypes}
Boolean@setname2 | = element om:OMA {notprsubset@set1,Set@omtypes,Set@omtypes}
