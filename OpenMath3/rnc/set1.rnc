#     This is the Mathematical Markup Language (MathML) 3.0, an XML
#     application for describing mathematical notation and capturing
#     both its structure and content.
#
#     Copyright 1998-2007 World Wide Web Consortium
#        (Massachusetts Institute of Technology, Institut National de
#         Recherche en Informatique et en Automatique, Keio University).
#         All Rights Reserved.
#
#     Permission to use, copy, modify and distribute the RelaxNG schema for MathML3
#     and its accompanying documentation for any purpose and without fee is
#     hereby granted in perpetuity, provided that the above copyright notice
#     and this paragraph appear in all copies.  The copyright holders make
#     no representation about the suitability of the Schema for any purpose.
#
#     This file contains the arity checking rules for the symbols
#     from the STS types for the content dictionary set1
#     It is provided "as is" without expressed or implied warranty.
#
#     Revision:   $Id$

namespace om = "http://www.openmath.org/OpenMath"
namespace m  ="http://www.w3.org/1998/Math/MathML"
cartesian_product_set1_elt = element om:OMS {
        attribute cd {"set1"},
        attribute name {"cartesian_product"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"cartesian_product"}}
map_set1_elt = element om:OMS {
        attribute cd {"set1"},
        attribute name {"map"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"map"}}
suchthat_set1_elt = element om:OMS {
        attribute cd {"set1"},
        attribute name {"suchthat"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"suchthat"}}
emptyset_set1_elt = element om:OMS {
        attribute cd {"set1"},
        attribute name {"emptyset"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"emptyset"}}
size_set1_elt = element om:OMS {
        attribute cd {"set1"},
        attribute name {"size"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"size"}}
set_set1_elt = element om:OMS {
        attribute cd {"set1"},
        attribute name {"set"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"set"}}
intersect_set1_elt = element om:OMS {
        attribute cd {"set1"},
        attribute name {"intersect"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"intersect"}}
union_set1_elt = element om:OMS {
        attribute cd {"set1"},
        attribute name {"union"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"union"}}
setdiff_set1_elt = element om:OMS {
        attribute cd {"set1"},
        attribute name {"setdiff"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"setdiff"}}
subset_set1_elt = element om:OMS {
        attribute cd {"set1"},
        attribute name {"subset"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"subset"}}
in_set1_elt = element om:OMS {
        attribute cd {"set1"},
        attribute name {"in"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"in"}}
notin_set1_elt = element om:OMS {
        attribute cd {"set1"},
        attribute name {"notin"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"notin"}}
prsubset_set1_elt = element om:OMS {
        attribute cd {"set1"},
        attribute name {"prsubset"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"prsubset"}}
notsubset_set1_elt = element om:OMS {
        attribute cd {"set1"},
        attribute name {"notsubset"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"notsubset"}}
notprsubset_set1_elt = element om:OMS {
        attribute cd {"set1"},
        attribute name {"notprsubset"}}
 |    element m:csymbol {
        attribute cd {"set1"},
        attribute name {"notprsubset"}}
Set1_type |= element om:OMA {cartesian_product_set1_elt,Set_type*}
Set1_type |= element m:apply {cartesian_product_set1_elt,Set_type*}
Set_type |= element om:OMA {map_set1_elt,function_type,Set_type}
Set_type |= element m:apply {map_set1_elt,function_type,Set_type}
Set_type |= element om:OMA {suchthat_set1_elt,Set_type,function_type}
Set_type |= element m:apply {suchthat_set1_elt,Set_type,function_type}
Set_type |= emptyset_set1_elt
CardinalNumber_type |= element om:OMA {size_set1_elt,Set_type}
CardinalNumber_type |= element m:apply {size_set1_elt,Set_type}
Set_type |= element om:OMA {set_set1_elt,Object_sts_type*}
Set_type |= element m:apply {set_set1_elt,Object_sts_type*}
Set_type |= element om:OMA {intersect_set1_elt,Set_type*}
Set_type |= element m:apply {intersect_set1_elt,Set_type*}
Set_type |= element om:OMA {union_set1_elt,Set_type*}
Set_type |= element m:apply {union_set1_elt,Set_type*}
Set_type |= element om:OMA {setdiff_set1_elt,Set_type,Set_type}
Set_type |= element m:apply {setdiff_set1_elt,Set_type,Set_type}
Boolean_setname2_type |= element om:OMA {subset_set1_elt,Set_type,Set_type}
Boolean_setname2_type |= element m:apply {subset_set1_elt,Set_type,Set_type}
Boolean_setname2_type |= element om:OMA {in_set1_elt,Object_sts_type,Set_type}
Boolean_setname2_type |= element m:apply {in_set1_elt,Object_sts_type,Set_type}
Boolean_setname2_type |= element om:OMA {notin_set1_elt,Object_sts_type,Set_type}
Boolean_setname2_type |= element m:apply {notin_set1_elt,Object_sts_type,Set_type}
Boolean_setname2_type |= element om:OMA {prsubset_set1_elt,Set_type,Set_type}
Boolean_setname2_type |= element m:apply {prsubset_set1_elt,Set_type,Set_type}
Boolean_setname2_type |= element om:OMA {notsubset_set1_elt,Set_type,Set_type}
Boolean_setname2_type |= element m:apply {notsubset_set1_elt,Set_type,Set_type}
Boolean_setname2_type |= element om:OMA {notprsubset_set1_elt,Set_type,Set_type}
Boolean_setname2_type |= element m:apply {notprsubset_set1_elt,Set_type,Set_type}
