#     This is the Mathematical Markup Language (MathML) 3.0, an XML
#     application for describing mathematical notation and capturing
#     both its structure and content.
#
#     Copyright 1998-2007 World Wide Web Consortium
#        (Massachusetts Institute of Technology, Institut National de
#         Recherche en Informatique et en Automatique, Keio University).
#         All Rights Reserved.
#
#     Permission to use, copy, modify and distribute the RelaxNG schema for MathML3
#     and its accompanying documentation for any purpose and without fee is
#     hereby granted in perpetuity, provided that the above copyright notice
#     and this paragraph appear in all copies.  The copyright holders make
#     no representation about the suitability of the Schema for any purpose.
#
#     This file contains the arity checking rules for the symbols
#     from the STS types for the content dictionary linalg1
#     It is provided "as is" without expressed or implied warranty.
#
#     Revision:   $Id$

namespace om = "http://www.openmath.org/OpenMath"
namespace m  ="http://www.w3.org/1998/Math/MathML"
determinant_linalg1_elt = element om:OMS {
        attribute cd {"linalg1"},
        attribute name {"determinant"}}
 |    element m:csymbol {
        attribute cd {"linalg1"},
        attribute name {"determinant"}}
transpose_linalg1_elt = element om:OMS {
        attribute cd {"linalg1"},
        attribute name {"transpose"}}
 |    element m:csymbol {
        attribute cd {"linalg1"},
        attribute name {"transpose"}}
vector_selector_linalg1_elt = element om:OMS {
        attribute cd {"linalg1"},
        attribute name {"vector_selector"}}
 |    element m:csymbol {
        attribute cd {"linalg1"},
        attribute name {"vector_selector"}}
matrix_selector_linalg1_elt = element om:OMS {
        attribute cd {"linalg1"},
        attribute name {"matrix_selector"}}
 |    element m:csymbol {
        attribute cd {"linalg1"},
        attribute name {"matrix_selector"}}
vectorproduct_linalg1_elt = element om:OMS {
        attribute cd {"linalg1"},
        attribute name {"vectorproduct"}}
 |    element m:csymbol {
        attribute cd {"linalg1"},
        attribute name {"vectorproduct"}}
scalarproduct_linalg1_elt = element om:OMS {
        attribute cd {"linalg1"},
        attribute name {"scalarproduct"}}
 |    element m:csymbol {
        attribute cd {"linalg1"},
        attribute name {"scalarproduct"}}
outerproduct_linalg1_elt = element om:OMS {
        attribute cd {"linalg1"},
        attribute name {"outerproduct"}}
 |    element m:csymbol {
        attribute cd {"linalg1"},
        attribute name {"outerproduct"}}
CommutativeRing_sts_type |= element om:OMA {determinant_linalg1_elt,SquareMatrix_type}
CommutativeRing_sts_type |= element m:apply {determinant_linalg1_elt,SquareMatrix_type}
Matrix_type |= element om:OMA {transpose_linalg1_elt,Matrix_type}
Matrix_type |= element m:apply {transpose_linalg1_elt,Matrix_type}
Object_sts_type |= element om:OMA {vector_selector_linalg1_elt,PositiveInteger_type,Object_sts_type}
Object_sts_type |= element m:apply {vector_selector_linalg1_elt,PositiveInteger_type,Object_sts_type}
Object_sts_type |= element om:OMA {matrix_selector_linalg1_elt,PositiveInteger_type,PositiveInteger_type,Matrix_type}
Object_sts_type |= element m:apply {matrix_selector_linalg1_elt,PositiveInteger_type,PositiveInteger_type,Matrix_type}
ThreeVector_type |= element om:OMA {vectorproduct_linalg1_elt,ThreeVector_type,ThreeVector_type}
ThreeVector_type |= element m:apply {vectorproduct_linalg1_elt,ThreeVector_type,ThreeVector_type}
Scalar_type |= element om:OMA {scalarproduct_linalg1_elt,Vector_type,Vector_type}
Scalar_type |= element m:apply {scalarproduct_linalg1_elt,Vector_type,Vector_type}
Matrix_type |= element om:OMA {outerproduct_linalg1_elt,Vector_type,Vector_type}
Matrix_type |= element m:apply {outerproduct_linalg1_elt,Vector_type,Vector_type}
