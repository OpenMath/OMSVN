<?xml version="1.0"?>
<notations xmlns="http://www.w3.org/ns/mathml-cd" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:om="http://www.openmath.org/OpenMath" xmlns:mcd="http://www.w3.org/ns/mathml-cd">
  <notation cdbase="FIXME" cd="linalg1" name="vectorproduct">
    <prototype>
      <om:OMS cd="linalg1" name="vectorproduct"/>
    </prototype>
    <prototype>
      <m:csymbol cd="linalg1">vectorproduct</m:csymbol>
    </prototype>
    <rendering>
      <!--IMPROVEME: the following is just a fallback-->
      <m:mo>vectorproduct</m:mo>
    </rendering>
  </notation>
  <notation cdbase="FIXME" cd="linalg1" name="scalarproduct">
    <prototype>
      <om:OMS cd="linalg1" name="scalarproduct"/>
    </prototype>
    <prototype>
      <m:csymbol cd="linalg1">scalarproduct</m:csymbol>
    </prototype>
    <rendering>
      <!--IMPROVEME: the following is just a fallback-->
      <m:mo>scalarproduct</m:mo>
    </rendering>
  </notation>
  <notation cdbase="FIXME" cd="linalg1" name="outerproduct">
    <prototype>
      <om:OMS cd="linalg1" name="outerproduct"/>
    </prototype>
    <prototype>
      <m:csymbol cd="linalg1">outerproduct</m:csymbol>
    </prototype>
    <rendering>
      <!--IMPROVEME: the following is just a fallback-->
      <m:mo>outerproduct</m:mo>
    </rendering>
  </notation>
  <notation cdbase="FIXME" cd="linalg1" name="transpose">
    <prototype>
      <om:OMA>
        <om:OMS cd="linalg1" name="transpose" mcd:cr="fun"/>
        <expr name="arg"/>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="linalg1" mcd:cr="fun">transpose</m:csymbol>
        <expr name="arg"/>
      </m:apply>
    </prototype>
    <rendering precedence="250">
      <m:msup>
        <render name="args" precedence="250"/>
        <m:mo mcd:cr="fun">T</m:mo>
      </m:msup>
    </rendering>
    <prototype>
      <om:OMS cd="linalg1" name="transpose"/>
    </prototype>
    <prototype>
      <m:csymbol cd="linalg1">transpose</m:csymbol>
    </prototype>
    <rendering>
      <!--IMPROVEME: the following is just a fallback-->
      <m:mo>transpose</m:mo>
    </rendering>
  </notation>
  <notation cdbase="FIXME" cd="linalg1" name="determinant">
    <prototype>
      <om:OMA>
        <om:OMS cd="linalg1" name="determinant" mcd:cr="fun"/>
        <expr name="arg"/>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="linalg1" mcd:cr="fun">determinant</m:csymbol>
        <expr name="arg"/>
      </m:apply>
    </prototype>
    <rendering>
      <m:mrow>
        <m:mo mcd:cr="fun">det</m:mo>
        <m:mo mcd:egroup="fence" fence="true">(</m:mo>
	<render name="arg"/>
        <m:mo mcd:egroup="fence" fence="true">)</m:mo>
      </m:mrow>
    </rendering>
    <prototype>
      <om:OMS cd="linalg1" name="determinant"/>
    </prototype>
    <prototype>
      <m:csymbol cd="linalg1">determinant</m:csymbol>
    </prototype>
    <rendering>
       <m:mo>det</m:mo>
    </rendering>
  </notation>

  <notation cdbase="FIXME" cd="linalg1" name="vector_selector">
    <prototype>
      <om:OMS cd="linalg1" name="vector_selector"/>
    </prototype>
    <prototype>
      <m:csymbol cd="linalg1">vector_selector</m:csymbol>
    </prototype>
    <rendering>
      <m:mo>select</m:mo>
    </rendering>
    <prototype>
      <om:OMA>
        <om:OMS cd="linalg1" name="vector_selector" mcd:cr="fun"/>
        <expr name="num"/>
        <expr name="arg"/>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="linalg1" mcd:cr="fun">vector_selector</m:csymbol>
        <expr name="num"/>
        <expr name="arg"/>
      </m:apply>
    </prototype>
    <rendering>
      <m:mrow>
	<m:mo mcd:cr="fun">select</m:mo>
	<m:mo mcd:egroup="fence" fence="true">(</m:mo>
	<render name="num"/>
	<m:mo mcd:egroup="separator" separator="true">,</m:mo>
	<render name="arg"/>
	<m:mo mcd:egroup="fence" fence="true">)</m:mo>
      </m:mrow>
    </rendering>
  </notation>
</notations>
