<?xml version="1.0"?>
<notations xmlns="http://www.w3.org/ns/mathml-cd" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:om="http://www.openmath.org/OpenMath" xmlns:mcd="http://www.w3.org/ns/mathml-cd">
  <notation cdbase="FIXME" cd="logic1" name="equivalent">
    <prototype>
      <om:OMA>
        <om:OMS cd="logic1" name="equivalent" mcd:cr="fun"/>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="logic1" name="equivalent" mcd:cr="fun"/>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </m:apply>
    </prototype>
    <rendering precedence="700">
      <m:mrow>
        <m:mo mcd:egroup="fence" fence="true">(</m:mo>
        <iterate name="args" precedence="700">
          <separator><m:mo mcd:cr="fun">≡</m:mo></separator>
          <render name="arg"/>
        </iterate>
        <m:mo mcd:egroup="fence" fence="true">(</m:mo>
      </m:mrow>
    </rendering>
    <prototype>
      <om:OMS cd="logic1" name="equivalent"/>
    </prototype>
    <prototype>
      <m:csymbol cd="logic1" name="equivalent"/>
    </prototype>
    <rendering>
      <!--IMPROVEME: the following is just a fallback-->
      <m:mo>equivalent</m:mo>
    </rendering>
  </notation>
  <notation cdbase="FIXME" cd="logic1" name="not">
    <prototype>
      <om:OMA>
        <om:OMS cd="logic1" name="not" mcd:cr="fun"/>
        <expr name="arg"/>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="logic1" name="not" mcd:cr="fun"/>
        <expr name="arg"/>
      </m:apply>
    </prototype>
    <rendering precedence="200">
      <m:mrow>
        <m:mo mcd:cr="fun">¬</m:mo>
        <m:mo mcd:egroup="fence" fence="true">(</m:mo>
        <render name="arg" precedence="200"/>
        <m:mo mcd:egroup="fence" fence="true">)</m:mo>
      </m:mrow>
    </rendering>
    <prototype>
      <om:OMS cd="logic1" name="not"/>
    </prototype>
    <prototype>
      <m:csymbol cd="logic1" name="not"/>
    </prototype>
    <rendering>
      <!--IMPROVEME: the following is just a fallback-->
      <m:mo>not</m:mo>
    </rendering>
  </notation>
  <notation cdbase="FIXME" cd="logic1" name="and">
    <prototype>
      <om:OMA>
        <om:OMS cd="logic1" name="and" mcd:cr="fun"/>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="logic1" name="and" mcd:cr="fun"/>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </m:apply>
    </prototype>
    <rendering precedence="500">
      <m:mrow>
        <m:mo mcd:egroup="fence" fence="true">(</m:mo>
        <iterate name="args" precedence="500">
          <separator><m:mo mcd:cr="fun">∧</m:mo></separator>
          <render name="arg"/>
        </iterate>
        <m:mo mcd:egroup="fence" fence="true">(</m:mo>
      </m:mrow>
    </rendering>
    <prototype>
      <om:OMS cd="logic1" name="and"/>
    </prototype>
    <prototype>
      <m:csymbol cd="logic1" name="and"/>
    </prototype>
    <rendering>
      <!--IMPROVEME: the following is just a fallback-->
      <m:mo>and</m:mo>
    </rendering>
  </notation>
  <notation cdbase="FIXME" cd="logic1" name="xor">
    <prototype>
      <om:OMA>
        <om:OMS cd="logic1" name="xor" mcd:cr="fun"/>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="logic1" name="xor" mcd:cr="fun"/>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </m:apply>
    </prototype>
    <rendering precedence="500">
      <m:mrow>
        <m:mo mcd:egroup="fence" fence="true">(</m:mo>
        <iterate name="args" precedence="500">
          <separator><m:mo mcd:cr="fun">!</m:mo></separator>
          <render name="arg"/>
        </iterate>
        <m:mo mcd:egroup="fence" fence="true">(</m:mo>
      </m:mrow>
    </rendering>
    <prototype>
      <om:OMS cd="logic1" name="xor"/>
    </prototype>
    <prototype>
      <m:csymbol cd="logic1" name="xor"/>
    </prototype>
    <rendering>
      <!--IMPROVEME: the following is just a fallback-->
      <m:mo>xor</m:mo>
    </rendering>
  </notation>
  <notation cdbase="FIXME" cd="logic1" name="or">
    <prototype>
      <om:OMA>
        <om:OMS cd="logic1" name="or" mcd:cr="fun"/>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="logic1" name="or" mcd:cr="fun"/>
        <exprlist name="args"><expr name="arg"/></exprlist>
      </m:apply>
    </prototype>
    <rendering precedence="500">
      <m:mrow>
        <m:mo mcd:egroup="fence" fence="true">(</m:mo>
        <iterate name="args" precedence="500">
          <separator><m:mo mcd:cr="fun">∨</m:mo></separator>
          <render name="arg"/>
        </iterate>
        <m:mo mcd:egroup="fence" fence="true">(</m:mo>
      </m:mrow>
    </rendering>
    <prototype>
      <om:OMS cd="logic1" name="or"/>
    </prototype>
    <prototype>
      <m:csymbol cd="logic1" name="or"/>
    </prototype>
    <rendering>
      <!--IMPROVEME: the following is just a fallback-->
      <m:mo>or</m:mo>
    </rendering>
  </notation>
  <notation cdbase="FIXME" cd="logic1" name="implies">
    <prototype>
      <om:OMA>
        <om:OMS cd="logic1" name="implies" mcd:cr="fun"/>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </om:OMA>
    </prototype>
    <prototype>
      <m:apply>
        <m:csymbol cd="logic1" name="implies" mcd:cr="fun"/>
        <expr name="arg1"/>
        <expr name="arg2"/>
      </m:apply>
    </prototype>
    <rendering>
      <m:mrow>
        <m:mo mcd:egroup="fence" fence="true">(</m:mo>
        <render name="arg1"/>
        <m:mo mcd:cr="fun">⇒</m:mo>
        <render name="arg2"/>
        <m:mo mcd:egroup="fence" fence="true">)</m:mo>
      </m:mrow>
    </rendering>
    <prototype>
      <om:OMS cd="logic1" name="implies"/>
    </prototype>
    <prototype>
      <m:csymbol cd="logic1" name="implies"/>
    </prototype>
    <rendering>
      <!--IMPROVEME: the following is just a fallback-->
      <m:mo>implies</m:mo>
    </rendering>
  </notation>
  <notation cdbase="FIXME" cd="logic1" name="true">
    <prototype>
      <om:OMS cd="logic1" name="true"/>
    </prototype>
    <prototype>
      <m:csymbol cd="logic1" name="true"/>
    </prototype>
    <rendering xml:lang="en">
      <m:mo>T</m:mo>
    </rendering>
  </notation>
  <notation cdbase="FIXME" cd="logic1" name="false">
    <prototype>
      <om:OMS cd="logic1" name="false"/>
    </prototype>
    <prototype>
      <m:csymbol cd="logic1" name="false"/>
    </prototype>
    <rendering xml:lang="en">
      <m:mo>F</m:mo>
    </rendering>
  </notation>
</notations>
