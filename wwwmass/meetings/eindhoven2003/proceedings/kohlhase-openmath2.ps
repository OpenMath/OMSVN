%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: eindhoven03.dvi
%%Pages: 13
%%PageOrder: Ascend
%%Orientation: Landscape
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica Times-Roman Courier CMSY8 Times-Bold CMSY10
%%+ CMMI10 CMR10 CMMI7
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips eindhoven03.dvi -o eindhoven03.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.05.22:1538
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 100 /d put
readonly def
/FontBBox{0 -250 1171 750}readonly def
/UniqueXX 5087382 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930f01bdaae649990604a33aa9eaffbe5b5489
e5c7c9ff9d9be01b08220832c41caac64816b53bbc087ae4b621d2b44b21ae5e
3f7fe4ddb05c675abfe30510eee4a7c874bb57b2ffe521a6875eddfdfd18c781
25bfca5a097aad361dd94df46f14026c25ea988194899b95001209cb7009cead
4b4ea03473ea120e7a7e341d4e3926796347fdb3a124c29660ac09f4648b313c
b58e824884382f24ce08d2edc686923acace1201c16a07a42803288cd0b946f7
546510e95b1fa1cc96f0bf72aa823d8e83d7c68c752c82a54c752eed2b1e699d
e9db1830272ffbf2f4996ccc2d6fe2ae272798989525ef3b67b0d09bffcef749
a805e5f76578222b9c4a8a09b13189a16ab746ddef7875f1ecf83e568f493d82
ff729baa1e0834dbec30a35d3c49c9b10c5e1d90c6e3c8fb737df5ceb3299d96
0fb79632f91f257753b4d2e34e3f54a26c7b950981fb7fe4dee3315db63e75b0
24b4d318baec8aac9cde186f6d65767df1dba35124287c2e805bc660a3a22772
0ae4fa097f1d75107441c0a0fbb9eec17d5516fa03b98756b7df7ac7eff9c7a2
364b9f691ed5cb692dfff9dd80c761e9c4d5d6061782b327302c053ce1cd09ba
0605ebf761cf9b730524e1994e7dfaa956799d522ec53d5acba27a35c4d28279
617771938ece58c5ab664aa00c1bc4efba2d15504247a68e3af0f9bd59a387b3
80db88cca083b06f5af70d768d1699826fb12ce12efc2b4c70923e052dbb964f
5fa957c3ce225c0fda64d9b5321ee1ade207c1cc93105096cc73118f4082594c
8ecddeb0d7bfde6f70bc62f10407c26a476ed88be7999d64a15912493829a9de
62c71f5a34fbf5a843e311873cd98817dc9f8a4aeb7e0738b5de10043f5cfea7
147f31c39019afacba581f8351d51c8da6e4e299427196fff797102de366c406
2368bc53da2f5fad26430c2ff34d09f62aa62620186b746a37ece3d6d8f603b3
2bfe4a49747c87ca2494cba325daa1473ec61025b6f42a9ce52adce1725a7725
bb1e8ac39f739b785021d6e9a8c513161a2957b752952eabf4722769dfdc0854
9195055d418dffdf73114e752e05261d85b89cea1a5d1f10c766d5d7d4ea4875
f9095ebde203cc9495fa53d2cf4e940b87a4b6aab5df8c76d1ca854518e0d414
4a8d3ce0b137da82c5ba225eeec0085608d3264c4d4e94992682b83af31fa4d9
50e35cb0adbb72556d04c4d3cf882bc983327efaabbc90f95571832dd1ee50aa
13a3a628d367048d292efc3dc96819b4af643cbc58d40566e3ee0b6e6ff5d753
19f12ed0689bd85160475d6774617e0290279ec36beeeb4dc19b2f893be8fb0c
f10e58898477a664bd85fae4fa4a0fc64b9af8a24d969279dae9512329dd4fb0
28b102f77d672b355c2feb8e5146ae666553465f158590
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueXX 5000793 def
currentdict end
currentfile eexec
8053514d28ec28da1630165fab262882d3fca78881823c5537fe6c3dda8ee5b8
97e17cb027f5c73fdbb56b0a7c25fc3512b55fe8f3acfbffcc7f4a382d8299cc
8fd37d3cea49dabdca92847af0560b404ef71134b0f3d99934fc9d0b4e602011
b9cfb856c23f958f3c5a2fbe0ef8587d1f5774879c324e51fcb22888b74f2415
50d7401eb990d4f3a7af635198422283cac1b6cd446ddbcbd915db9bff88844e
784c6bf7389803d9450b0c21756a017306457c7e62c1d269f306bd3402e266de
fc3b5e7d8a8d2f5bf0fe6ddd40d07391df4fad4a6018dce29a2b8f692b29f202
3a7c0e66de8ed85c14f1f8492167357f51a7e84cc5d92e0fee4d81cf7fbc8de5
2d2e7bb57142033993f9c08c315abade8dbc4a732e84e142d3bee51557910e12
cd8aa37c459a5e6b7f5269f59078aba3be4641a11ac48d0b625c8325b38ec08e
4c9e5e7fed976a5650d99d82114f449b9ca14c4ec957702295a39a93ef93f618
99b8ea06b092c3c1e503e6e436e0a9fa22576c8930ab3dc8c20f5d82b69cddf8
ff4dacfa9c54bed5a3aa3ea5b129fe96be632843b9b6bc91b615581a985db56b
1e01ca60ee69ca92cf5c0882ece62edad3e106d835348822400f0b66af658f2a
e56ed08f8b0010571807009b73ab12a8cf14ca6c71f03c2a48c500f9d62266af
154a6375ff600d9bac3f05ce34142d6867a79581c533176bb2f3117336671e2e
44638a97167e2ea9644e31ea16c2ad2990ea33c54001e0c8156e6de8ab6a4d40
a7137ba275f39589fea2e2db8256adc103d6f9cc038037a47e8fd469c5f98a5e
3c15bd4ace40d340018b1cff7d1ed8abb0ac57b5b5a2c20a51957b96c453edb7
dae5affd91a46d938fe0a13363001d844ded4323f1ee6d30012aea19b024a552
315505535c85dc26bad31e09c50e6512802976d298c4e90d0044c362e6bf3ab3
62a454ee93de25ce54411090c29e9d75c80ce26a84404bd9de3aee0e3f921ac5
87f907572b8354a5c3165eea7e8b2ba4e4f834663063e9a307d8ff6f8b61acd8
799bc105cddcf8f95f2160494fc01f7ec3effb95de571b8d7f27a2f9ad203c09
cd4cffd98a119a507460e7fef5c910405e877aa1f8da68d1272e59e3adccef8d
82e692b3229926fbe621080b7831a2ee248948dd3ae55082a939f02875a7a0eb
7ae7d50270a576fbdfde7109c670f51be75b80b6fe3045ea50e2121025dfefb3
ab99e4f56a608203a590a3fa689226e987ebb986e2075524ccb6537fd4153192
ee175dc48c3cddc2dc7643020166a3843fdf2561da92a9d9e9df5d2dfb52b016
de74abc5af4272d561a56b60a75783fb5b022603d9ab328af99335d1aa4e49ba
aaf9cdd1d71d1466e128819979d88c429b53dc5a229966fe559410c7eeb5d503
9827093d1b98e539ea0997681798b59d9428e7d411a8736f099113db0c43f34b
5c29bff8d0d4587549dbef4cbd5b0edbbab6c8a562d73e5896aecc148ce11173
6c9e6c30221e04013e84407bce2d495d4251e13ef63b7601ff4984ed05da9c4c
0b5091a976903490fb9579b1b88677abc96dd58952306e0ab575ac4544a3150a
d857e7bdc0498b6a14e39e765efa6272132fd2ec4bf3fa6cf1bac24fe742f5a9
f7e2a02e6d2f71c6f561ad9a52d7af1a99ea9343381ce3df1c4c0bd360939c7c
44aec2a2c1eee31d737f95e46717d06235a9f11b3a7a4379cbfa5094bb7a851f
075ab2a2a3eaf7d62ec2c7615dcf4ff5806a5aa455aa390c848f5391e0eaeaf7
379ef8bc8ae0db68934bbf45cdc5c2cf7b50f4b29b
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 100 /d put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueXX 5087385 def
currentdict end
currentfile eexec
80347982ab3942d930e069a70d0d48311d725e830d1c76fba12e12486e989c98
74c2b527f0925722787027f44470d484262c360cdfdddf3657533a57bb16f730
48bfbbfcb73a650484015441fdc837add94ac8fbd2022e3ec8f115d4b4bb7b7f
15388f22cc6198efe768bd9fceb3446ee4a8dc27d6cd152485384ef5f59381ff
da43f2d20c8fb08aa27ab2015b774db10dacfdcd33e60f178c461553146ab427
bdd7da12534ba078ad3d780414930da4f8d58abefd45db119b10eb409dd89792
3c6e705479464a4b310b58348c4b42393988fef4925cf984423aaf65fea9f0e6
4629953bcf50b919d968d99bd185f83112b2759cc411764e9bde677f57c5ee5a
c555448d5f81a16259ded1e11bf4119d53e8ab07a802df900d3a2d5ccc1c6876
d29c5e9effb7af3ef83400b0910c07873a8c56fa7b1eb1ba426043b00cc95dbe
dc6e136cbbbcb3f67509964f9f281ebf81fe5b018122eaf66c4a838487e82e18
6e006093042848a903efb3469ab6b4049767aadb95c30408dfd58d8a10f4cb22
168decd9f3ee100f07b49aa44c92139b669cc312ba20192454eb2375be6284b0
26659d964b96ae82d4942e758027fcf23c25ed01115af27ce7f20efe2a822bb6
84004f20243a49c9e93301fc21b80815c033c3e2ba58ef53da2157d524b395f2
b37abca13bc6a2f42e824ab7e47106176b0d6db267fbb795ac7425582df2e3dc
55863468a9200742bd7b552c48f8cf58bc21343bd3b95abfa140f33f37c6f3f7
8b0d8a5154eb7c1f62ec598267f13e841a3e64172663935ac8b665d86540d316
ddece329c008049c5e74b27d59022c5515059bc3b89370b1bc6a169c888bb325
e0b74282d6f053a50da4024ed1e433271a32ab8c17d41c632b41cf9f3ecd5fe1
24daf7aea7ce8a63047b245822930d517df7baaafa69d2d17f7d93cebd45416d
f3459365434123a76ccf883a4973bab19807e1f0c4bab03a45f7ed69ff2660ff
3963e4def11001eec4238c368a39d874fd30b3c14f4186ec7700fbce22abe468
eb32baf7b0164f8f21a9b5e706b91411faaa44467cb2180ab03de375c1ab93e9
76e11ab92fdd4a7280a6d1a8dc65c4c89d04c8ed6988045a2a3de9a4c7b1efd3
75b79ee3d49569213fcb818f6f1cf250f5e595c4b2c46805a8ef10a2a8a50315
93ed435910831958f3ca1000df2d2bd7ff641f70cfad207d57d2a7324937da8a
25b678a46e0cb92011cdad4d1a1922cf3e1806af55731a8b52978806346cc3d2
2eec7cf5945441b5b1f9600961488d19ed1035e491ef50cfb7cfb05005f81e96
cbac4795f67acc9caaa1c133573b467265d3d34f5ef6cb2e333149259c511d6c
68977163783ebf347d5bbe98e4ab467bf5385eae6e0e613cda87bd809da21bfd
3b343508b0061c48e1f54a88b0608ac234d7985e085d1e5591b3d208728fa143
c21b248f407a447a9e40f51d27a6c3152a8dd6cc11528d5735b8f7cc176a52bf
c36dea385932ca44192086e66b77d3a01d3fa15b4d6b65c29237620e1d6d0839
416524562a524a514c7f707b6f5e170157bfe8cc3e176bb76fc40398474d8824
b41c40bba0b0c913ea9224cf81e23ae6a682cda46194fe5b11a6c3cc3bc55d75
d61194661d48e19c11f0bffc
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 15 /bullet put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueXX 5000820 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f67052788e6703bb5ee49533870bca1f113ad8
3750d597b842d8d96c423ba1273ddd32f3a54a912a443fcd44f7c3a6fe3956b0
aa1e784aaec6fce08dae0c76da9d0a3eba57b98a6233d9e9f0c3f00fcc6b2c6a
9ba23af389e6dfff4efec3de05d6276c6be417703ce508377f25960ef4ed83b4
9b01b873f3a639ce00f356229b6477a081933fef3bb80e2b9dffa7f75567b1fa
4d739b772f8d674e567534c6c5bbf1cf615372be20b18472f7aa58be8c216dbd
df81cc0a86b6d8318ca68fe22c8af13b54d7576fe4ca5a7af9005ea5cc4edb79
c0ab668e4fec4b7f5a9eb5f0e4c088cd818ecc4feb4b40ec8bd2981bf2336074
b64c43079a611075699b4d5902c9a10bde669900444dd85bb50c1e6578957747
b8084982a5828fd7a9e3b9924a6ac5c404fc795f3fccdc98d530eacff0f28288
a34abdbb317d637d067dd07dd4168a3503519bc9093290a1e4bf69953a6bb026
04a1bd5a38ba6526908ed181e932602da295af30eabbdc89e2ae28eb9f80c4a9
437a2761662d3a53fb963efe6dc5087b44daadaf9fd94c9f88dd2f1971acf033
2c363b06577987d9be49735997473bf0c1b8fb409b2bf3e2c85524bc311d181b
246e5a9e53023ae94f3eb7d54b149ab02461ebccbf4f0d00ce352252cec7c913
b6e382b6c8bd297c0c8a1c0c3c343a1d1df51a51847ceb9fd865bb2dccc510b6
17f5fddf9294e5eacaf0f1bff6f324c8326f3076145273cd540f8dc6a71b2c35
83bbab805d067900dc464f33e569d8a1cbc9a56f4ed9d6d97c2bfae1854bf517
3a3692560ca1bd4ed6616a33338e1fdfaa47f06026b95fc370170ce5edfa2fc4
b32f
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10

% Copyright (C) 1997 American Mathematical Society.  All Rights Reserved.

11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /circlecopyrt put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
/UniqueXX 5000818 def
currentdict end
currentfile eexec
9b9c1569015f2c1d2bf560f4c0d52257bac8ced9b09a275ab231194ecf829352
05826f4e975dcecec72b2cf3a18899ccde1fd935d09d813b096cc6b83cdf4f23
b9a60db41f9976ac333263c908dcefcdbd4c8402ed00a36e7487634d089fd45a
f4a38a56a4412c3b0baffaeb717bf0de9ffb7a8460bf475a6718b0c73c571145
d026957276530530a2fbefc6c8f059084178f5ab59e11b66566ca5ba42b1911a
5d7f1bf343015eece988b7a93bce0c7aa61344d48aed9c92c8698d4b7c9951c8
7d103f2414b39e1437f9d2e50c4ee5f218f2e6716926a79ea978f13b1f855345
191dd7d31d8f82c2e3343c7a5894d95bdc492c28226834efcb5c12fea36ac5cc
430e0aa604961e34888adf6c1f3954cbc2498e225d953cf5685852162346f474
5a2a7087d5d7ad486de16d2ca8e15cee26e012671ba3bdc7d95cc8c98bb774f5
08625e968aee27ff7d1a06e63bcfb5aa4876c3f8f13b30ccccee73c3caf4e70d
98e6ed2f422dbb4950bf789680e064150995941a9f4dd68a575949847a7d012b
b910bf03a7a227d51386469ec9ef415f3bb849d30411890d929c04ea794a165e
233775b893250d2d73287cca8d0a926f20cbaecc39c0d8417cbefc1c9bccab8a
e2685611031937fd9875c22962592ae01cafded154872aa5d593640c835886c9
aacf19da57ca1ebedbc14c1346236586f38eff6133b3c0f844bfa366abdff307
50f6e196943b6ae333e02c5a4f3769e0ecf7a7f637da85c46985505511fc561a
31a054edf42a20ecd5cadd42975bc8e5486878c7f722c8946c9ee30793e6038a
d7ead198c7bb260884c6dd08aabbdda0326e0ad61d98b8d9fc57d51225c9196a
7b3d341ab86b008d5f8dd790775fc3618c2dbbd0f462825deb93d5c13a758bda
2230993bd05dcd06e12031318cbe20a6a8142c2c6dc8ee2d742267e0799d
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark

%%EndFont 
TeXDict begin 52099146 40258431 2074 600 600 (eindhoven03.dvi)
@start /Fa 192[77 63[{TeXBase1Encoding ReEncodeFont}1
137.75 /Helvetica rf /Fb 134[83 83 2[83 83 83 83 1[83
83 83 83 83 2[83 83 83 83 83 83 83 83 83 11[83 1[83 83
2[83 1[83 83 13[83 83 83 1[83 10[83 83 10[83 83 34[{
TeXBase1Encoding ReEncodeFont}34 137.75 /Courier rf /Fc
138[149 149 11[149 4[149 1[149 12[149 149 3[149 1[149
8[149 2[149 65[{TeXBase1Encoding ReEncodeFont}11 247.95
/Courier rf /Fd 134[72 72 2[72 72 72 72 72 72 72 72 72
72 72 1[72 72 1[72 72 72 72 72 72 7[72 72 1[72 1[72 72
72 1[72 72 72 72 72 1[72 72 1[72 1[72 72 1[72 72 1[72
72 72 72 1[72 5[72 1[72 72 1[72 72 11[72 34[{
TeXBase1Encoding ReEncodeFont}50 120.531 /Courier rf
/Fe 155[72 100[{}1 120.531 /CMMI7 rf /Ff 205[86 86 49[{}2
172.188 /CMR10 rf /Fg 155[90 100[{}1 172.188 /CMMI10
rf /Fh 105[86 33[57 3[96 86 96 1[48 2[48 5[76 1[86 97[{
TeXBase1Encoding ReEncodeFont}9 172.188 /Times-Bold rf
/Fi 240[86 13[48 134{}3 172.188 /CMSY10 rf /Fj 134[124
124 2[138 69 124 83 1[138 138 138 207 55 1[55 55 138
138 69 138 138 124 138 138 8[165 1[165 179 151 165 179
1[165 193 179 207 138 2[69 3[165 179 179 165 2[138 4[69
7[138 2[69 1[83 69 41[124 2[{TeXBase1Encoding ReEncodeFont}44
247.95 /Helvetica rf /Fk 167[179 8[179 1[220 77[{
TeXBase1Encoding ReEncodeFont}3 247.95 /Times-Roman rf
/Fl 171[121 3[110 1[143 176 121 3[143 2[121 3[143 65[{
TeXBase1Encoding ReEncodeFont}8 198.36 /Times-Roman rf
/Fm 242[146 13[{}1 137.75 /CMSY8 rf /Fn 140[54 3[69 2[38
2[38 69 2[61 1[61 1[61 12[84 3[77 1[99 122 84 99 2[99
2[84 3[99 6[38 58[{TeXBase1Encoding ReEncodeFont}18 137.75
/Times-Roman rf /Fo 167[124 8[124 1[153 105 18[86 86
86 86 86 86 86 86 86 86 48[{TeXBase1Encoding ReEncodeFont}14
172.188 /Times-Roman rf /Fp 105[96 27[86 86 86 124 86
96 48 86 57 1[96 96 96 143 38 86 38 38 96 96 48 96 96
86 96 96 3[48 1[48 2[115 163 1[124 105 115 124 1[115
134 124 143 96 115 1[48 124 134 105 115 124 124 115 115
1[96 4[48 5[96 96 96 96 96 48 48 57 48 101 1[57 57 38
5[48 29[86 86 2[{TeXBase1Encoding ReEncodeFont}67 172.188
/Helvetica rf /Fq 103[103 31[103 103 1[103 103 103 103
1[103 103 103 103 103 103 1[103 103 103 103 103 103 103
1[103 12[103 103 103 1[103 103 103 103 3[103 4[103 1[103
103 6[103 7[103 1[103 103 103 46[{TeXBase1Encoding ReEncodeFont}37
172.188 /Courier rf /Fr 87[52 46[77 2[77 86 43 77 52
1[86 86 86 129 34 77 1[34 86 86 43 86 86 77 86 86 11[112
1[103 2[103 2[129 3[43 1[121 95 2[112 1[103 20[43 44[{
TeXBase1Encoding ReEncodeFont}32 154.969 /Helvetica rf
/Fs 178[184 1[149 75[{TeXBase1Encoding ReEncodeFont}2
206.625 /Times-Roman rf /Ft 172[92 3[119 2[101 2[55 119
2[101 1[110 1[119 65[{TeXBase1Encoding ReEncodeFont}8
165.3 /Times-Roman rf /Fu 176[215 1[265 77[{
TeXBase1Encoding ReEncodeFont}2 297.54 /Times-Roman rf
/Fv 171[145 3[132 1[172 5[172 2[145 3[172 65[{
TeXBase1Encoding ReEncodeFont}6 238.032 /Times-Roman
rf /Fw 136[215 3[149 99 2[165 165 4[66 3[165 165 2[165
10[198 1[182 33[165 50[{TeXBase1Encoding ReEncodeFont}12
297.54 /Helvetica rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: Letter
 @landscape
%%EndSetup
%%Page: 1 1
1 0 bop 20 -474 6164 9 v 20 4280 9 4754 v 903 -287 4328
7 v 903 352 7 640 v 1065 140 a
 1. 0. 0. setrgbcolor
 1065 140 a Fw(T)-36 b(o)l(w)l(ards)90
b Fu(O)14 b Fv(P)g(E)g(N)g Fu(M)g Fv(A)-12 b(T)14 b(H)95
b Fw(V)-24 b(ersion)85 b(2)5069 140 y
 0 setgray
 5069 140 a 5224
352 7 640 v 903 359 4328 7 v 5227 428 73 654 v 972 428
4328 73 v 208 1271 a
 0. 0. 1. setrgbcolor
 208 1271 a 2152 1605 a Fs(M)10 b
Ft(I)g(C)g(H)g(A)g(E)g(L)64 b Fs(K)t Ft(O)10 b(H)g(L)g(H)g(A)g(S)g(E)
1040 1913 y Fr(School)44 b(of)g(Computer)f(Science)454
b(F)-8 b(achbereich)45 b(Inf)-5 b(or)t(matik)1096 2181
y(Car)t(negie)43 b(Mellon)i(Univ)l(ersity)368 b(Univ)l(ersit)3927
2178 y(\250)3910 2181 y(at)45 b(des)f(Saar)r(landes)1472
2449 y(Pittsb)m(urgh,)h(USA)869 b(Saarbr)17 b(\250)-69
b(uc)m(k)m(en,)44 b(Ger)t(man)n(y)1500 2667 y
 0. setgray
 1500 2667
a Fq(http://www.cs.cmu.edu)q(/\230k)q(ohl)q(has)q(e)4697
2667 y
 0. 0. 1. setrgbcolor
 4697 2667 a 362 2910 a Fp(\()419 2910 y
 0. 0.7 0. setrgbcolor
 419 2910
a Fp(suppor)7 b(ted)47 b(b)m(y)g(the)h(Ger)t(man)g(Research)f(Council)h
(under)f(a)h(Heisenberg)f(g)n(r)n(ant)5783 2910 y
 0. 0. 1. setrgbcolor
 5783
2910 a Fp(\))208 2949 y
 0 setgray
 208 2949 a 603 4073 a Fo(1)2368
4069 y Fn(c)2325 4073 y Fm(\015)q Fn(:)19 b(Michael)35
b(K)-5 b(ohlhase)1636 b @beginspecial 0 @llx 0 @lly 100
@urx 79 @ury 198 @rhi @setspecial
%%BeginDocument: cmulogo.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: CMULogo.PS
%%Creator: Dale Moore CMU-CS/RI 
%%CreationDate: 14-APR-1987
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: (atend)
%%EndComments

%++
% CMULOGO.PS
%
% Description:
%
%	This is the PostScript version of the CMU Logo.  It
%	attempts to follow as closely as possible the standard
%	for the logo as set forth in the "Carnegie Mellon
%	Logo and Graphics Standard".  It is available from
%	campus printing.
%
%	The execeptions to the logo standard as published 
%	are that the font Time-Bold (ITC) is used in place of the
%	standard of Bauer Bodini Bold (Compugraphic).  Both
%	the Bauer Bodini Bold font and Times-Bold font are
%	Serif fonts and very similar in design.  The Bauer font
%	is slightly more condensed than the Times font.  The
%	same text set in the same pt size will use approx 10% less
%	horizontal space in a Bauer font that the same text set in Times.
%
%	This implementation does not enforce the standard that
%	minimum point size of the Carnegie Mellon name is
%	12 points.
%
%	The logo is printed at the origin (0,0), on the current page.
%	Many printers can not print near the border of the page.
%	This will cause the output to be clipped.  .i.e the entire
%	logo will not appear when this document is printed by itself.
%
%	We print the logo at the origin for backward compatability.
%	Scribe files that do not use BoundingBox=File, (.i.e those
%	that use "Height=x, Width=y" expect the lower left x and
%	lower left y to be at the origin.  By printing at the origin
%	we can satisfy both styles of use of @Graphic, at the expense
%	of having the diagram clipped.
%
%	This PostScript program also executes the showpage operator.
%	V5(1500) of Scribe does not disable the showpage operator
%	by temporarily binding it to a noop.  Using this PostScript
%	program inside of V5 of scribe will not produce the expected
%	results.  This problem was fixed in V6(1600) of scribe.
%
%	Also be aware of psrev and included documents.  Many printers
%	produce pages in the "wrong" order.  Due to the way these
%	printers stack paper on output, the first page printed ends
%	up on the bottom, face up.  The last page printed ends up on top,
%	face up.  Because of this, many spoolers pipe their PostScript
%	through the psrev utility.  The psrev utility uses the %%Page:
%	comments to reverse the order of the pages in a PostScript
%	document.  When a PostScript file is included in a another
%	there will be two page ones.  Some versions of the psrev utility
%	do not correctly handle the included PostScript file and fail to
%	reverse the pages.  Causing included PostScript files that
%	include other PostScript files to fail.
%
% Modifications:
%
%	20-OCT-1988	Dale Moore	CMU-CS
%	Removed /inch def.  No Longer needed.  
%	Added %%EndProlog, part of Document Structuring Convention.
%	Changed dict size to 1, no longer need dict of size 2.
%--

1 dict begin

/cmulogo
{
    % do the cmu logo at the currentpoint.
    % The text of the logo will be in a 1 point font.
    % the lower left of the logo will be at the currentpoint
    gsave
	% move the coordinate system to current x y
	currentpoint translate
	
	% First the tilted square
        gsave
	    0.8700 0.0544 moveto
	    14.0 rotate
	    0.0272 setlinewidth
	    0.0 3.4286 rlineto
	    3.4286 0.0 rlineto
	    0.0 -3.4286 rlineto
	    closepath stroke
	grestore

	% now the Carnegie-Mellon
	/Times-Bold findfont setfont
	1.638 2.5573 moveto (Carnegie) show
	1.638 1.5973 moveto (Mellon) show
    grestore
} bind def

%%EndProlog
%%Page: 1 1
%%PageBoundingBox: (atend)
gsave
    18 18 scale
    0 0 moveto
    cmulogo
grestore

showpage
%%PageBoundingBox: 0 0 100 79
%%Trailer
end
%%BoundingBox: 0 0 100 79

%%EndDocument
 @endspecial 6175 4280 9 4754 v 20 4288 6164 9 v eop
%%Page: 2 2
2 1 bop 20 -474 6164 9 v 20 4280 9 4754 v 208 -294 a
 0. 0. 1. setrgbcolor

208 -294 a 214 -115 a Fk(O)12 b Fl(P)g(E)g(N)g Fk(M)g
Fl(A)-10 b(T)12 b(H)79 b Fj(V)-20 b(ersion)68 b(2?)2700
-115 y
 0 setgray
 2700 -115 a 346 161 a Fi(\017)86 b Fp(The)47 b(Pisa)52
b Fo(O)8 b Fn(P)g(E)g(N)g Fo(M)g Fn(A)-7 b(T)8 b(H)57
b Fp(meeting)48 b(\(Sept..)58 b(2002\))47 b(decided)g(to)h(prepare)f(a)
h(ne)m(w)518 405 y(v)l(ersion)f(of)h(the)j Fo(O)8 b Fn(P)g(E)g(N)g
Fo(M)g Fn(A)-7 b(T)8 b(H)57 b Fp(standard)47 b(to)587
707 y Fh(\226)86 b Fp(tr)n(ac)m(k)52 b Fo(X)8 b Fn(M)g(L)54
b Fp(de)-5 b(v)l(elopments)46 b(since)i(2000)587 1009
y Fh(\226)86 b Fp(tak)m(e)47 b(adv)l(antage)e(of)j(the)f(pr)n(actical)h
(e)-5 b(xper)s(iences)47 b(with)52 b Fo(O)8 b Fn(P)g(E)g(N)g
Fo(M)g Fn(A)-7 b(T)8 b(H)208 1120 y
 0. 0. 1. setrgbcolor
 208 1120 a 346 1370
a Fi(\017)86 b Fp(Committee)1350 1370 y
 0 setgray
 1350 1370 a Fp(:)59
b(Stephen)47 b(Bus)-5 b(w)n(ell,)48 b(Olga)f(Caprotti,)h(Da)m(vid)f
(Car)s(lisle)m(,)i(Mik)m(e)518 1614 y(De)m(w)m(ar)-9
b(,)48 b(Marc)h(Gaetano)-7 b(,)46 b(Michael)i(K)-7 b(ohlhase)m(.)208
1675 y
 0. 0. 1. setrgbcolor
 208 1675 a 587 1916 a Fh(\226)86 b Fp(Char)7 b(ter)1340
1916 y
 0 setgray
 1340 1916 a Fp(:)59 b(prepare)47 b(a)h(ne)m(w)f(standard)g
(proposal)763 b(\()4791 1916 y
 0. 0.7 0. setrgbcolor
 4791 1916 a Fp(f)-5 b(or)48
b(Eindho)m(v)l(en?)5939 1916 y
 0 setgray
 5939 1916 a Fp(\))208
2024 y
 0. 0. 1. setrgbcolor
 208 2024 a 346 2277 a Fi(\017)86 b Fp(Status)1007
2277 y
 0 setgray
 1007 2277 a Fp(:)58 b(Discussions)m(,)49 b(b)m(ut)d(no)i
(coordinated)e(proposal)603 4073 y Fo(2)2368 4069 y Fn(c)2325
4073 y Fm(\015)q Fn(:)19 b(Michael)35 b(K)-5 b(ohlhase)1636
b @beginspecial 0 @llx 0 @lly 100 @urx 79 @ury 198 @rhi
@setspecial
%%BeginDocument: cmulogo.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: CMULogo.PS
%%Creator: Dale Moore CMU-CS/RI 
%%CreationDate: 14-APR-1987
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: (atend)
%%EndComments

%++
% CMULOGO.PS
%
% Description:
%
%	This is the PostScript version of the CMU Logo.  It
%	attempts to follow as closely as possible the standard
%	for the logo as set forth in the "Carnegie Mellon
%	Logo and Graphics Standard".  It is available from
%	campus printing.
%
%	The execeptions to the logo standard as published 
%	are that the font Time-Bold (ITC) is used in place of the
%	standard of Bauer Bodini Bold (Compugraphic).  Both
%	the Bauer Bodini Bold font and Times-Bold font are
%	Serif fonts and very similar in design.  The Bauer font
%	is slightly more condensed than the Times font.  The
%	same text set in the same pt size will use approx 10% less
%	horizontal space in a Bauer font that the same text set in Times.
%
%	This implementation does not enforce the standard that
%	minimum point size of the Carnegie Mellon name is
%	12 points.
%
%	The logo is printed at the origin (0,0), on the current page.
%	Many printers can not print near the border of the page.
%	This will cause the output to be clipped.  .i.e the entire
%	logo will not appear when this document is printed by itself.
%
%	We print the logo at the origin for backward compatability.
%	Scribe files that do not use BoundingBox=File, (.i.e those
%	that use "Height=x, Width=y" expect the lower left x and
%	lower left y to be at the origin.  By printing at the origin
%	we can satisfy both styles of use of @Graphic, at the expense
%	of having the diagram clipped.
%
%	This PostScript program also executes the showpage operator.
%	V5(1500) of Scribe does not disable the showpage operator
%	by temporarily binding it to a noop.  Using this PostScript
%	program inside of V5 of scribe will not produce the expected
%	results.  This problem was fixed in V6(1600) of scribe.
%
%	Also be aware of psrev and included documents.  Many printers
%	produce pages in the "wrong" order.  Due to the way these
%	printers stack paper on output, the first page printed ends
%	up on the bottom, face up.  The last page printed ends up on top,
%	face up.  Because of this, many spoolers pipe their PostScript
%	through the psrev utility.  The psrev utility uses the %%Page:
%	comments to reverse the order of the pages in a PostScript
%	document.  When a PostScript file is included in a another
%	there will be two page ones.  Some versions of the psrev utility
%	do not correctly handle the included PostScript file and fail to
%	reverse the pages.  Causing included PostScript files that
%	include other PostScript files to fail.
%
% Modifications:
%
%	20-OCT-1988	Dale Moore	CMU-CS
%	Removed /inch def.  No Longer needed.  
%	Added %%EndProlog, part of Document Structuring Convention.
%	Changed dict size to 1, no longer need dict of size 2.
%--

1 dict begin

/cmulogo
{
    % do the cmu logo at the currentpoint.
    % The text of the logo will be in a 1 point font.
    % the lower left of the logo will be at the currentpoint
    gsave
	% move the coordinate system to current x y
	currentpoint translate
	
	% First the tilted square
        gsave
	    0.8700 0.0544 moveto
	    14.0 rotate
	    0.0272 setlinewidth
	    0.0 3.4286 rlineto
	    3.4286 0.0 rlineto
	    0.0 -3.4286 rlineto
	    closepath stroke
	grestore

	% now the Carnegie-Mellon
	/Times-Bold findfont setfont
	1.638 2.5573 moveto (Carnegie) show
	1.638 1.5973 moveto (Mellon) show
    grestore
} bind def

%%EndProlog
%%Page: 1 1
%%PageBoundingBox: (atend)
gsave
    18 18 scale
    0 0 moveto
    cmulogo
grestore

showpage
%%PageBoundingBox: 0 0 100 79
%%Trailer
end
%%BoundingBox: 0 0 100 79

%%EndDocument
 @endspecial 6175 4280 9 4754 v 20 4288 6164 9 v eop
%%Page: 3 3
3 2 bop 20 -474 6164 9 v 20 4280 9 4754 v 208 -294 a
 0. 0. 1. setrgbcolor

208 -294 a 182 x Fj(Issues)68 b(under)g(Consider)n(ation)f(f)-7
b(or)74 b Fk(O)12 b Fl(P)g(E)g(N)g Fk(M)g Fl(A)-10 b(T)12
b(H)79 b Fj(2)5108 -112 y
 0 setgray
 5108 -112 a 288 164 a Fp(1.)86
b(Basing)51 b Fo(O)8 b Fn(P)g(E)g(N)g Fo(M)g Fn(A)-7
b(T)8 b(H)57 b Fp(fully)48 b(on)k Fo(X)8 b Fn(M)g(L)1812
b Fp(\()4826 164 y
 0. 0.7 0. setrgbcolor
 4826 164 a Fp(Status:)58 b(Will)48
b(do)5938 164 y
 0 setgray
 5938 164 a Fp(\))288 525 y(2.)86 b(Str)s(ucture)47
b(of)k Fo(O)8 b Fn(P)g(E)g(N)g Fo(M)g Fn(A)-7 b(T)8 b(H)58
b Fp(objects)462 828 y(\(a\))87 b(Str)s(ucture)45 b(Shar)s(ing)g(f)-5
b(or)50 b Fo(O)8 b Fn(P)g(E)g(N)g Fo(M)g Fn(A)-7 b(T)8
b(H)56 b Fp(objects)46 b(\()3959 828 y
 0. 0.7 0. setrgbcolor
 3959 828 a Fp(Status:)58
b(D)-7 b(A)i(G/T)-21 b(ree)48 b(solution)5938 828 y
 0 setgray
 5938
828 a Fp(\))462 1130 y(\(b\))87 b Fq(OMDATA)50 b Fp(f)-5
b(or)47 b(embedding)k Fo(X)8 b Fn(M)g(L)54 b Fp(data)1497
b(\()4864 1130 y
 0. 0.7 0. setrgbcolor
 4864 1130 a Fp(Status:)58 b(will)49
b(do)5938 1130 y
 0 setgray
 5938 1130 a Fp(\))472 1432 y(\(c\))87
b(Namespaces/URIs)48 b(f)-5 b(or)48 b Fq(OMS)2012 b Fp(\()4864
1432 y
 0. 0.7 0. setrgbcolor
 4864 1432 a Fp(Status:)58 b(?????)5939 1432 y
 0 setgray

5939 1432 a Fp(\))462 1735 y(\(d\))87 b(T)-21 b(ypes)m(,)48
b Fq(OMSuchThat)p Fp(,)j(\002rst-class)e(attr)s(ib)m(uitions)722
b(\()4864 1735 y
 0. 0.7 0. setrgbcolor
 4864 1735 a Fp(Status:)58 b(?????)5939
1735 y
 0 setgray
 5939 1735 a Fp(\))288 2096 y(3.)86 b(Extensions)47
b(to)g(the)h(Content)e(Dictionar)5 b(y)49 b(f)-5 b(or)t(mat)1059
b(\()4959 2096 y
 0. 0.7 0. setrgbcolor
 4959 2096 a Fp(Status:)59 b(????)5939
2096 y
 0 setgray
 5939 2096 a Fp(\))462 2398 y(\(a\))87 b(RDF)49
b(encoding)d(of)i(CDs)m(,)h(allo)m(wing)f(OMDoc)462 2700
y(\(b\))87 b(De\002ning)47 b(a)h(minimal)h(data/functionality)d(model)
472 3003 y(\(c\))87 b(Conf)-5 b(or)t(mance)47 b(issues)208
3111 y
 1. 0. 0. setrgbcolor
 208 3111 a 288 3364 a Fp(4.)86 b(Still)48 b(open)f(f)-5
b(or)48 b(suggestions)2438 3364 y
 0 setgray
 2438 3364 a 2102 w
Fp(\()4597 3364 y
 0. 0.7 0. setrgbcolor
 4597 3364 a Fp(please)g(contact)f(us)5938
3364 y
 0 setgray
 5938 3364 a Fp(\))603 4073 y Fo(3)2368 4069 y
Fn(c)2325 4073 y Fm(\015)q Fn(:)19 b(Michael)35 b(K)-5
b(ohlhase)1636 b @beginspecial 0 @llx 0 @lly 100 @urx
79 @ury 198 @rhi @setspecial
%%BeginDocument: cmulogo.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: CMULogo.PS
%%Creator: Dale Moore CMU-CS/RI 
%%CreationDate: 14-APR-1987
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: (atend)
%%EndComments

%++
% CMULOGO.PS
%
% Description:
%
%	This is the PostScript version of the CMU Logo.  It
%	attempts to follow as closely as possible the standard
%	for the logo as set forth in the "Carnegie Mellon
%	Logo and Graphics Standard".  It is available from
%	campus printing.
%
%	The execeptions to the logo standard as published 
%	are that the font Time-Bold (ITC) is used in place of the
%	standard of Bauer Bodini Bold (Compugraphic).  Both
%	the Bauer Bodini Bold font and Times-Bold font are
%	Serif fonts and very similar in design.  The Bauer font
%	is slightly more condensed than the Times font.  The
%	same text set in the same pt size will use approx 10% less
%	horizontal space in a Bauer font that the same text set in Times.
%
%	This implementation does not enforce the standard that
%	minimum point size of the Carnegie Mellon name is
%	12 points.
%
%	The logo is printed at the origin (0,0), on the current page.
%	Many printers can not print near the border of the page.
%	This will cause the output to be clipped.  .i.e the entire
%	logo will not appear when this document is printed by itself.
%
%	We print the logo at the origin for backward compatability.
%	Scribe files that do not use BoundingBox=File, (.i.e those
%	that use "Height=x, Width=y" expect the lower left x and
%	lower left y to be at the origin.  By printing at the origin
%	we can satisfy both styles of use of @Graphic, at the expense
%	of having the diagram clipped.
%
%	This PostScript program also executes the showpage operator.
%	V5(1500) of Scribe does not disable the showpage operator
%	by temporarily binding it to a noop.  Using this PostScript
%	program inside of V5 of scribe will not produce the expected
%	results.  This problem was fixed in V6(1600) of scribe.
%
%	Also be aware of psrev and included documents.  Many printers
%	produce pages in the "wrong" order.  Due to the way these
%	printers stack paper on output, the first page printed ends
%	up on the bottom, face up.  The last page printed ends up on top,
%	face up.  Because of this, many spoolers pipe their PostScript
%	through the psrev utility.  The psrev utility uses the %%Page:
%	comments to reverse the order of the pages in a PostScript
%	document.  When a PostScript file is included in a another
%	there will be two page ones.  Some versions of the psrev utility
%	do not correctly handle the included PostScript file and fail to
%	reverse the pages.  Causing included PostScript files that
%	include other PostScript files to fail.
%
% Modifications:
%
%	20-OCT-1988	Dale Moore	CMU-CS
%	Removed /inch def.  No Longer needed.  
%	Added %%EndProlog, part of Document Structuring Convention.
%	Changed dict size to 1, no longer need dict of size 2.
%--

1 dict begin

/cmulogo
{
    % do the cmu logo at the currentpoint.
    % The text of the logo will be in a 1 point font.
    % the lower left of the logo will be at the currentpoint
    gsave
	% move the coordinate system to current x y
	currentpoint translate
	
	% First the tilted square
        gsave
	    0.8700 0.0544 moveto
	    14.0 rotate
	    0.0272 setlinewidth
	    0.0 3.4286 rlineto
	    3.4286 0.0 rlineto
	    0.0 -3.4286 rlineto
	    closepath stroke
	grestore

	% now the Carnegie-Mellon
	/Times-Bold findfont setfont
	1.638 2.5573 moveto (Carnegie) show
	1.638 1.5973 moveto (Mellon) show
    grestore
} bind def

%%EndProlog
%%Page: 1 1
%%PageBoundingBox: (atend)
gsave
    18 18 scale
    0 0 moveto
    cmulogo
grestore

showpage
%%PageBoundingBox: 0 0 100 79
%%Trailer
end
%%BoundingBox: 0 0 100 79

%%EndDocument
 @endspecial 6175 4280 9 4754 v 20 4288 6164 9 v eop
%%Page: 4 4
4 3 bop 20 -474 6164 9 v 20 4280 9 4754 v 208 -294 a
 0. 0. 1. setrgbcolor

208 -294 a 181 x Fj(Issue:)85 b(Basing)69 b(the)74 b
Fk(X)12 b Fl(M)g(L)77 b Fj(encoding)68 b(fully)g(on)75
b Fk(X)12 b Fl(M)g(L)5219 -113 y
 0 setgray
 5219 -113 a 208 14 a
 0. 0. 1. setrgbcolor

208 14 a 346 214 a Fi(\017)86 b Fp(Bac)m(kg)n(round)1433
214 y
 0 setgray
 1433 214 a Fp(:)62 b Fo(O)8 b Fn(P)g(E)g(N)g Fo(M)g
Fn(A)-7 b(T)8 b(H)57 b Fp(1)47 b(de\002nes)g(data)g(model)h(\(trees\))g
(f)-5 b(or)48 b(OM)g(objects)587 516 y Fh(\226)90 b Fo(X)8
b Fn(M)g(L)54 b Fp(encoding:)k(restr)s(icted)48 b(subset)f(based)g(on)g
(b)m(yte-le)-5 b(v)l(el)47 b(g)n(r)n(ammar)587 819 y
Fh(\226)86 b Fp(binar)5 b(y)48 b(encoding:)58 b(b)m(yte-le)-5
b(v)l(el)46 b(ser)s(ialization)i(of)j Fo(O)8 b Fn(P)g(E)g(N)g
Fo(M)g Fn(A)-7 b(T)8 b(H)58 b Fp(object)47 b(trees)208
929 y
 0. 0. 1. setrgbcolor
 208 929 a 346 1179 a Fi(\017)86 b Fp(Decision)1178
1179 y
 0 setgray
 1178 1179 a Fp(:)59 b(Allo)m(w)49 b(arbitr)n(ar)5
b(y)52 b Fo(X)8 b Fn(M)g(L)55 b Fp(f)-5 b(or)48 b(the)j
Fo(X)8 b Fn(M)g(L)54 b Fp(encoding)587 1482 y Fh(\226)90
b Fo(O)8 b Fn(P)g(E)g(N)g Fo(M)g Fn(A)-7 b(T)8 b(H)57
b Fp(2)48 b(is)g(an)j Fo(X)8 b Fn(M)g(L)55 b Fp(application)587
1784 y Fh(\226)86 b Fp(get)47 b(r)s(id)h(of)f(b)m(yte-le)-5
b(v)l(el)47 b(g)n(r)n(ammar)738 b(\()3730 1784 y
 0. 0.7 0. setrgbcolor
 3730
1784 a Fp(w)m(as)49 b(getting)e(unwieldy)g(an)m(yw)m(a)-5
b(y)5937 1784 y
 0 setgray
 5937 1784 a Fp(\))587 2087 y Fh(\226)90
b Fo(O)8 b Fn(P)g(E)g(N)g Fo(M)g Fn(A)-7 b(T)8 b(H)57
b Fp(DTD)49 b(and)e(Schema)g(become)h(nor)t(mativ)l(e)587
2389 y Fh(\226)86 b Fp(could)47 b(allo)m(w)i(arbitr)n(ar)5
b(y)48 b(UniCode)g(in)g Fq(cd)g Fp(and)g Fq(name)h Fp(attr)s(ib)m(utes)
1808 2633 y(\()1865 2633 y
 0. 0.7 0. setrgbcolor
 1865 2633 a 24 x @beginspecial
0 @llx 0 @lly 248 @urx 190 @ury 113 @rwi @setspecial
%%BeginDocument: dangerous-bend.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: dangerous-bend.fig
%%Creator: fig2dev Version 3.1 Patchlevel 2
%%CreationDate: Wed Mar 24 14:02:16 1999
%%For: kohlhase@trinidad (Michael Kohlhase)
%Magnification: 1.00
%%Orientation: Portrait
%%BoundingBox: 0 0 248 190
%%Pages: 0
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-20.0 187.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.06000 0.06000 sc
1 slj
360.000 slw
% Polyline
n 2400 225 m 600 2850 l 4200 2850 l cp gs col4 s gr 
210.000 slw
% Interp Spline
gs n 2025 1350 m
	2492.9 1330.7 2661.6 1368.2 2700 1500 curveto
	2770.6 1742.6 1953.9 1934.4 2025 2175 curveto
	2085.0 2378.0 2347.5 2434.3 3075 2400 curveto
 gs col0 s gr
 gr

$F2psEnd
rs

%%EndDocument
 @endspecial 2109 2633 a Fp(also)f(aff)-5 b(ects)47 b(the)g(object)g
(model)h(and)f(binar)5 b(y)48 b(encoding!)5939 2633 y
 0 setgray

5939 2633 a Fp(\))587 2935 y Fh(\226)90 b Fo(X)8 b Fn(M)g(L)54
b Fp(goodies)47 b(lik)m(e)h(entity)f(ref)-5 b(erences)m(,)48
b(namespaces)m(,)f(PI,)g(e)-5 b(v)l(er)5 b(ywhere)603
4073 y Fo(4)2368 4069 y Fn(c)2325 4073 y Fm(\015)q Fn(:)19
b(Michael)35 b(K)-5 b(ohlhase)1636 b @beginspecial 0
@llx 0 @lly 100 @urx 79 @ury 198 @rhi @setspecial
%%BeginDocument: cmulogo.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: CMULogo.PS
%%Creator: Dale Moore CMU-CS/RI 
%%CreationDate: 14-APR-1987
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: (atend)
%%EndComments

%++
% CMULOGO.PS
%
% Description:
%
%	This is the PostScript version of the CMU Logo.  It
%	attempts to follow as closely as possible the standard
%	for the logo as set forth in the "Carnegie Mellon
%	Logo and Graphics Standard".  It is available from
%	campus printing.
%
%	The execeptions to the logo standard as published 
%	are that the font Time-Bold (ITC) is used in place of the
%	standard of Bauer Bodini Bold (Compugraphic).  Both
%	the Bauer Bodini Bold font and Times-Bold font are
%	Serif fonts and very similar in design.  The Bauer font
%	is slightly more condensed than the Times font.  The
%	same text set in the same pt size will use approx 10% less
%	horizontal space in a Bauer font that the same text set in Times.
%
%	This implementation does not enforce the standard that
%	minimum point size of the Carnegie Mellon name is
%	12 points.
%
%	The logo is printed at the origin (0,0), on the current page.
%	Many printers can not print near the border of the page.
%	This will cause the output to be clipped.  .i.e the entire
%	logo will not appear when this document is printed by itself.
%
%	We print the logo at the origin for backward compatability.
%	Scribe files that do not use BoundingBox=File, (.i.e those
%	that use "Height=x, Width=y" expect the lower left x and
%	lower left y to be at the origin.  By printing at the origin
%	we can satisfy both styles of use of @Graphic, at the expense
%	of having the diagram clipped.
%
%	This PostScript program also executes the showpage operator.
%	V5(1500) of Scribe does not disable the showpage operator
%	by temporarily binding it to a noop.  Using this PostScript
%	program inside of V5 of scribe will not produce the expected
%	results.  This problem was fixed in V6(1600) of scribe.
%
%	Also be aware of psrev and included documents.  Many printers
%	produce pages in the "wrong" order.  Due to the way these
%	printers stack paper on output, the first page printed ends
%	up on the bottom, face up.  The last page printed ends up on top,
%	face up.  Because of this, many spoolers pipe their PostScript
%	through the psrev utility.  The psrev utility uses the %%Page:
%	comments to reverse the order of the pages in a PostScript
%	document.  When a PostScript file is included in a another
%	there will be two page ones.  Some versions of the psrev utility
%	do not correctly handle the included PostScript file and fail to
%	reverse the pages.  Causing included PostScript files that
%	include other PostScript files to fail.
%
% Modifications:
%
%	20-OCT-1988	Dale Moore	CMU-CS
%	Removed /inch def.  No Longer needed.  
%	Added %%EndProlog, part of Document Structuring Convention.
%	Changed dict size to 1, no longer need dict of size 2.
%--

1 dict begin

/cmulogo
{
    % do the cmu logo at the currentpoint.
    % The text of the logo will be in a 1 point font.
    % the lower left of the logo will be at the currentpoint
    gsave
	% move the coordinate system to current x y
	currentpoint translate
	
	% First the tilted square
        gsave
	    0.8700 0.0544 moveto
	    14.0 rotate
	    0.0272 setlinewidth
	    0.0 3.4286 rlineto
	    3.4286 0.0 rlineto
	    0.0 -3.4286 rlineto
	    closepath stroke
	grestore

	% now the Carnegie-Mellon
	/Times-Bold findfont setfont
	1.638 2.5573 moveto (Carnegie) show
	1.638 1.5973 moveto (Mellon) show
    grestore
} bind def

%%EndProlog
%%Page: 1 1
%%PageBoundingBox: (atend)
gsave
    18 18 scale
    0 0 moveto
    cmulogo
grestore

showpage
%%PageBoundingBox: 0 0 100 79
%%Trailer
end
%%BoundingBox: 0 0 100 79

%%EndDocument
 @endspecial 6175 4280 9 4754 v 20 4288 6164 9 v eop
%%Page: 5 5
5 4 bop 20 -474 6164 9 v 20 4280 9 4754 v 208 -294 a
 0. 0. 1. setrgbcolor

208 -294 a 182 x Fj(Str)t(ucture)67 b(Shar)t(ing)i(f)-7
b(or)73 b Fk(O)12 b Fl(P)g(E)g(N)g Fk(M)g Fl(A)-10 b(T)12
b(H)79 b Fj(objects)4677 -112 y
 0 setgray
 4677 -112 a 383 2576
a
 tx@Dict begin tx@NodeDict begin {4.44444 0.0 2.77779 1.38889 2.22221
} false /N@u 16 {InitRnode } NewNode end end
 383 2576 a Fi(\001)362 1863 y
 tx@Dict begin tx@NodeDict begin {6.94444 0.0 5.20486 2.60243 3.47221
} false /N@m 16 {InitRnode } NewNode end end
 362 1863 a Fg(d)383 1107
y
 tx@Dict begin tx@NodeDict begin {4.44444 0.0 2.77779 1.38889 2.22221
} false /N@o 16 {InitRnode } NewNode end end
 383 1107 a Fi(\001)897 2538 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0
0 0 /N@m /N@u InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end
 897 2538 a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow
 EndArrow  } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0 2.0
0 0 /N@m /N@o InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray 0
setlinecap stroke  grestore  grestore end

897 2538 a 849 2583 a
 tx@Dict begin tx@NodeDict begin {5.4149 0.16492 5.55994 2.77997 2.62498
} false /N@a1 16 {InitRnode } NewNode end end
 849 2583 a 849 2583 a
 1. 0. 0. setrgbcolor
 849 2583
a Fp(a)945 2583 y
 0 setgray
 945 2583 a 1339 2583 a
 tx@Dict begin tx@NodeDict begin {5.4149 0.16492 5.55994 2.77997 2.62498
} false /N@a2 16 {InitRnode } NewNode end end
 1339 2583 a
1339 2583 a
 1. 0. 0. setrgbcolor
 1339 2583 a Fp(a)1435 2583 y
 0 setgray
 1435 2583 a
1829 2583 a
 tx@Dict begin tx@NodeDict begin {5.4149 0.16492 5.55994 2.77997 2.62498
} false /N@a3 16 {InitRnode } NewNode end end
 1829 2583 a 1829 2583 a
 1. 0. 0. setrgbcolor
 1829 2583 a Fp(a)1925
2583 y
 0 setgray
 1925 2583 a 2319 2583 a
 tx@Dict begin tx@NodeDict begin {5.4149 0.16492 5.55994 2.77997 2.62498
} false /N@a4 16 {InitRnode } NewNode end end
 2319 2583 a 2319 2583
a
 1. 0. 0. setrgbcolor
 2319 2583 a Fp(a)2415 2583 y
 0 setgray
 2415 2583 a 2809 2583
a
 tx@Dict begin tx@NodeDict begin {5.4149 0.16492 5.55994 2.77997 2.62498
} false /N@a5 16 {InitRnode } NewNode end end
 2809 2583 a 2809 2583 a
 1. 0. 0. setrgbcolor
 2809 2583 a Fp(a)2905 2583
y
 0 setgray
 2905 2583 a 3299 2583 a
 tx@Dict begin tx@NodeDict begin {5.4149 0.16492 5.55994 2.77997 2.62498
} false /N@a6 16 {InitRnode } NewNode end end
 3299 2583 a 3299 2583 a
 1. 0. 0. setrgbcolor
 3299
2583 a Fp(a)3395 2583 y
 0 setgray
 3395 2583 a 3789 2583 a
 tx@Dict begin tx@NodeDict begin {5.4149 0.16492 5.55994 2.77997 2.62498
} false /N@a7 16 {InitRnode } NewNode end end
 3789
2583 a 3789 2583 a
 1. 0. 0. setrgbcolor
 3789 2583 a Fp(a)3885 2583 y
 0 setgray
 3885
2583 a 4278 2583 a
 tx@Dict begin tx@NodeDict begin {5.4149 0.16492 5.55994 2.77997 2.62498
} false /N@a8 16 {InitRnode } NewNode end end
 4278 2583 a 4278 2583 a
 1. 0. 0. setrgbcolor
 4278 2583
a Fp(a)4374 2583 y
 0 setgray
 4374 2583 a 1118 2111 a
 tx@Dict begin tx@NodeDict begin {7.30492 0.0 2.77989 1.38994 3.65245
} false /N@f1 16 {InitRnode } NewNode end end
 1118 2111
a 1118 2111 a
 1. 0. 0. setrgbcolor
 1118 2111 a Fp(f)1166 2111 y
 0 setgray
 1166 2111
a 2098 2111 a
 tx@Dict begin tx@NodeDict begin {7.30492 0.0 2.77989 1.38994 3.65245
} false /N@f2 16 {InitRnode } NewNode end end
 2098 2111 a 2098 2111 a
 1. 0. 0. setrgbcolor
 2098 2111 a Fp(f)2146
2111 y
 0 setgray
 2146 2111 a 3078 2111 a
 tx@Dict begin tx@NodeDict begin {7.30492 0.0 2.77989 1.38994 3.65245
} false /N@f3 16 {InitRnode } NewNode end end
 3078 2111 a 3078 2111
a
 1. 0. 0. setrgbcolor
 3078 2111 a Fp(f)3126 2111 y
 0 setgray
 3126 2111 a 4057 2111
a
 tx@Dict begin tx@NodeDict begin {7.30492 0.0 2.77989 1.38994 3.65245
} false /N@f4 16 {InitRnode } NewNode end end
 4057 2111 a 4057 2111 a
 1. 0. 0. setrgbcolor
 4057 2111 a Fp(f)4105 2111
y
 0 setgray
 4105 2111 a 1853 1621 a
 tx@Dict begin tx@NodeDict begin {7.30492 0.0 2.77989 1.38994 3.65245
} false /N@f5 16 {InitRnode } NewNode end end
 1853 1621 a 1853 1621 a
 1. 0. 0. setrgbcolor
 1853
1621 a Fp(f)1901 1621 y
 0 setgray
 1901 1621 a 3323 1621 a
 tx@Dict begin tx@NodeDict begin {7.30492 0.0 2.77989 1.38994 3.65245
} false /N@f6 16 {InitRnode } NewNode end end
 3323
1621 a 3323 1621 a
 1. 0. 0. setrgbcolor
 3323 1621 a Fp(f)3371 1621 y
 0 setgray
 3371
1621 a 2588 1131 a
 tx@Dict begin tx@NodeDict begin {7.30492 0.0 2.77989 1.38994 3.65245
} false /N@f7 16 {InitRnode } NewNode end end
 2588 1131 a 2588 1131 a
 1. 0. 0. setrgbcolor
 2588 1131
a Fp(f)2636 1131 y
 0 setgray
 2636 1131 a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@f1 /N@a1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 897 2538 a
897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@f1 /N@a2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 897 2538 a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@f2 /N@a3 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 897 2538 a 897 2538
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@f2 /N@a4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 897 2538 a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@f3 /N@a5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 897 2538 a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@f3 /N@a6 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 897 2538
a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@f4 /N@a7 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 897 2538 a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@f4 /N@a8 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 897 2538 a 897 2538
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@f5 /N@f1 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 897 2538 a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@f5 /N@f2 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 897 2538 a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@f6 /N@f3 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 897 2538
a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@f6 /N@f4 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 897 2538 a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@f7 /N@f5 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 897 2538 a 897 2538
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@f7 /N@f6 InitNC { NCLine  } if end gsave 0.8 SLW 0. setgray
0 setlinecap stroke  grestore  grestore end
 897 2538 a 5258 2583 a
 tx@Dict begin tx@NodeDict begin {5.4149 0.16492 5.55994 2.77997 2.62498
} false /N@a 16 {InitRnode } NewNode end end
 5258 2583 a 5258 2583 a
 0. 0.7 0. setrgbcolor
 5258
2583 a Fp(a)5354 2583 y
 0 setgray
 5354 2583 a 5282 2111 a
 tx@Dict begin tx@NodeDict begin {7.30492 0.0 2.77989 1.38994 3.65245
} false /N@F1 16 {InitRnode } NewNode end end
 5282
2111 a 5282 2111 a
 0. 0.7 0. setrgbcolor
 5282 2111 a Fp(f)5330 2111 y
 0 setgray
 5330
2111 a 5282 1621 a
 tx@Dict begin tx@NodeDict begin {7.30492 0.0 2.77989 1.38994 3.65245
} false /N@F2 16 {InitRnode } NewNode end end
 5282 1621 a 5282 1621 a
 0. 0.7 0. setrgbcolor
 5282 1621
a Fp(f)5330 1621 y
 0 setgray
 5330 1621 a 5282 1131 a
 tx@Dict begin tx@NodeDict begin {7.30492 0.0 2.77989 1.38994 3.65245
} false /N@F3 16 {InitRnode } NewNode end end
 5282 1131
a 5282 1131 a
 0. 0.7 0. setrgbcolor
 5282 1131 a Fp(f)5330 1131 y
 0 setgray
 5330 1131
a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@F1 /N@a InitNC { yB yA sub xB xA sub Atan dup 30.  add /AngleA
ED 30.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 897 2538 a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@a /N@F1 InitNC { yB yA sub xB xA sub Atan dup 30.  add /AngleA
ED 30.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end gsave
0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 897 2538 a 897 2538
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@F2 /N@F1 InitNC { yB yA sub xB xA sub Atan dup 30.  add
/AngleA ED 30.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 897 2538 a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@F1 /N@F2 InitNC { yB yA sub xB xA sub Atan dup 30.  add
/AngleA ED 30.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 897 2538 a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@F3 /N@F2 InitNC { yB yA sub xB xA sub Atan dup 30.  add
/AngleA ED 30.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 897 2538
a 897 2538 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0. setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 2.0
2.0 0 0 /N@F2 /N@F3 InitNC { yB yA sub xB xA sub Atan dup 30.  add
/AngleA ED 30.  sub 180 add /AngleB ED 0.67  0.67  NCCurve  } if end
gsave 0.8 SLW 0. setgray 0 setlinecap stroke  grestore  grestore end
 897 2538 a 2445 639 a Fp(T)-21 b(ree)5126
641 y(D)-7 b(A)i(G)2122 3094 y
 1. 0. 0. setrgbcolor
 2122 3094 a Ff(2)2208
3032 y Fe(d)2326 3094 y Fi(\000)38 b Ff(1)48 b Fp(nodes)3102
3094 y
 0 setgray
 3102 3094 a 5003 3089 a
 0. 0.7 0. setrgbcolor
 5003 3089 a Fg(d)f Fp(nodes)5610
3089 y
 0 setgray
 5610 3089 a 603 4073 a Fo(5)2368 4069 y Fn(c)2325
4073 y Fm(\015)q Fn(:)19 b(Michael)35 b(K)-5 b(ohlhase)1636
b @beginspecial 0 @llx 0 @lly 100 @urx 79 @ury 198 @rhi
@setspecial
%%BeginDocument: cmulogo.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: CMULogo.PS
%%Creator: Dale Moore CMU-CS/RI 
%%CreationDate: 14-APR-1987
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: (atend)
%%EndComments

%++
% CMULOGO.PS
%
% Description:
%
%	This is the PostScript version of the CMU Logo.  It
%	attempts to follow as closely as possible the standard
%	for the logo as set forth in the "Carnegie Mellon
%	Logo and Graphics Standard".  It is available from
%	campus printing.
%
%	The execeptions to the logo standard as published 
%	are that the font Time-Bold (ITC) is used in place of the
%	standard of Bauer Bodini Bold (Compugraphic).  Both
%	the Bauer Bodini Bold font and Times-Bold font are
%	Serif fonts and very similar in design.  The Bauer font
%	is slightly more condensed than the Times font.  The
%	same text set in the same pt size will use approx 10% less
%	horizontal space in a Bauer font that the same text set in Times.
%
%	This implementation does not enforce the standard that
%	minimum point size of the Carnegie Mellon name is
%	12 points.
%
%	The logo is printed at the origin (0,0), on the current page.
%	Many printers can not print near the border of the page.
%	This will cause the output to be clipped.  .i.e the entire
%	logo will not appear when this document is printed by itself.
%
%	We print the logo at the origin for backward compatability.
%	Scribe files that do not use BoundingBox=File, (.i.e those
%	that use "Height=x, Width=y" expect the lower left x and
%	lower left y to be at the origin.  By printing at the origin
%	we can satisfy both styles of use of @Graphic, at the expense
%	of having the diagram clipped.
%
%	This PostScript program also executes the showpage operator.
%	V5(1500) of Scribe does not disable the showpage operator
%	by temporarily binding it to a noop.  Using this PostScript
%	program inside of V5 of scribe will not produce the expected
%	results.  This problem was fixed in V6(1600) of scribe.
%
%	Also be aware of psrev and included documents.  Many printers
%	produce pages in the "wrong" order.  Due to the way these
%	printers stack paper on output, the first page printed ends
%	up on the bottom, face up.  The last page printed ends up on top,
%	face up.  Because of this, many spoolers pipe their PostScript
%	through the psrev utility.  The psrev utility uses the %%Page:
%	comments to reverse the order of the pages in a PostScript
%	document.  When a PostScript file is included in a another
%	there will be two page ones.  Some versions of the psrev utility
%	do not correctly handle the included PostScript file and fail to
%	reverse the pages.  Causing included PostScript files that
%	include other PostScript files to fail.
%
% Modifications:
%
%	20-OCT-1988	Dale Moore	CMU-CS
%	Removed /inch def.  No Longer needed.  
%	Added %%EndProlog, part of Document Structuring Convention.
%	Changed dict size to 1, no longer need dict of size 2.
%--

1 dict begin

/cmulogo
{
    % do the cmu logo at the currentpoint.
    % The text of the logo will be in a 1 point font.
    % the lower left of the logo will be at the currentpoint
    gsave
	% move the coordinate system to current x y
	currentpoint translate
	
	% First the tilted square
        gsave
	    0.8700 0.0544 moveto
	    14.0 rotate
	    0.0272 setlinewidth
	    0.0 3.4286 rlineto
	    3.4286 0.0 rlineto
	    0.0 -3.4286 rlineto
	    closepath stroke
	grestore

	% now the Carnegie-Mellon
	/Times-Bold findfont setfont
	1.638 2.5573 moveto (Carnegie) show
	1.638 1.5973 moveto (Mellon) show
    grestore
} bind def

%%EndProlog
%%Page: 1 1
%%PageBoundingBox: (atend)
gsave
    18 18 scale
    0 0 moveto
    cmulogo
grestore

showpage
%%PageBoundingBox: 0 0 100 79
%%Trailer
end
%%BoundingBox: 0 0 100 79

%%EndDocument
 @endspecial 6175 4280 9 4754 v 20 4288 6164 9 v eop
%%Page: 6 6
6 5 bop 20 -435 6164 9 v 20 4240 9 4676 v 208 -255 a
 0. 0. 1. setrgbcolor

208 -255 a 183 x Fj(The)69 b(same)f(in)h(the)g(OpenMath)e(XML)i
(encoding)4867 -72 y
 0 setgray
 4867 -72 a 208 188 a Fd(<OMOBJ>)2750
b(<OMOBJ>)353 298 y(<OMA>)2894 b(<OMA>)497 408 y(<OMV)74
b(n="f"/>)2388 b(<OMV)74 b(n="f"/>)497 519 y(<OMA>)2894
b(<OMA)4113 519 y
 1. 0. 1. setrgbcolor
 4113 519 a Fd(id="t1")4617 519 y
 0 setgray
 4617
519 a Fd(>)642 629 y(<OMV)73 b(n="f"/>)2389 b(<OMV)74
b(n="f"/>)642 739 y
 1. 0. 0. setrgbcolor
 642 739 a Fd(<OMA>)2894 b(<OMA)4258
739 y
 1. 0. 1. setrgbcolor
 4258 739 a Fd(id="t11")4834 739 y
 1. 0. 0. setrgbcolor
 4834 739 a Fd(>)786
849 y(<OMV)74 b(n="f"/>)2389 b(<OMV)73 b(n="f"/>)786
959 y(<OMV)h(n="a"/><OMV)i(n="a"/>)1521 b(<OMV)73 b(n="a"/><OMV)j
(n="a"/>)642 1070 y(</OMA>)2822 b(</OMA>)4328 1070 y
 0 setgray

4328 1070 a 642 1180 a
 0. 0.7 0. setrgbcolor
 642 1180 a Fd(<OMA>)2894 b(<OMR)4258
1180 y
 1. 0. 1. setrgbcolor
 4258 1180 a Fd(xlink:href="t11")5410 1180 y
 0. 0.7 0. setrgbcolor
 5410
1180 a Fd(/>)786 1290 y(<OMV)74 b(n="f"/>)786 1400 y(<OMV)g
(n="a"/><OMV)i(n="a"/>)642 1510 y(</OMA>)1074 1510 y
 0 setgray

1074 1510 a 497 1621 a Fd(</OMA>)2822 b(</OMA>)497 1731
y
 0. 0. 1. setrgbcolor
 497 1731 a Fd(<OMA>)2894 b(<OMR)4113 1731 y
 1. 0. 1. setrgbcolor
 4113 1731
a Fd(xlink:href="t1")5193 1731 y
 0. 0. 1. setrgbcolor
 5193 1731 a Fd(/>)642
1841 y(<OMV)73 b(n="f"/>)642 1951 y(<OMA>)786 2061 y(<OMV)h(n="f"/>)786
2172 y(<OMV)g(n="a"/><OMV)i(n="a"/>)642 2282 y(</OMA>)642
2392 y(<OMA>)786 2502 y(<OMV)e(n="f"/>)786 2612 y(<OMV)g(n="a"/><OMV)i
(n="a"/>)642 2723 y(</OMA>)497 2833 y(</OMA>)929 2833
y
 0 setgray
 929 2833 a 2750 w Fd(</OMA>)353 2943 y(</OMA>)2822
b(</OMA>)208 3053 y(</OMOBJ>)2678 b(</OMOBJ>)603 4034
y Fo(6)2368 4030 y Fn(c)2325 4034 y Fm(\015)q Fn(:)19
b(Michael)35 b(K)-5 b(ohlhase)1636 b @beginspecial 0
@llx 0 @lly 100 @urx 79 @ury 198 @rhi @setspecial
%%BeginDocument: cmulogo.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: CMULogo.PS
%%Creator: Dale Moore CMU-CS/RI 
%%CreationDate: 14-APR-1987
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: (atend)
%%EndComments

%++
% CMULOGO.PS
%
% Description:
%
%	This is the PostScript version of the CMU Logo.  It
%	attempts to follow as closely as possible the standard
%	for the logo as set forth in the "Carnegie Mellon
%	Logo and Graphics Standard".  It is available from
%	campus printing.
%
%	The execeptions to the logo standard as published 
%	are that the font Time-Bold (ITC) is used in place of the
%	standard of Bauer Bodini Bold (Compugraphic).  Both
%	the Bauer Bodini Bold font and Times-Bold font are
%	Serif fonts and very similar in design.  The Bauer font
%	is slightly more condensed than the Times font.  The
%	same text set in the same pt size will use approx 10% less
%	horizontal space in a Bauer font that the same text set in Times.
%
%	This implementation does not enforce the standard that
%	minimum point size of the Carnegie Mellon name is
%	12 points.
%
%	The logo is printed at the origin (0,0), on the current page.
%	Many printers can not print near the border of the page.
%	This will cause the output to be clipped.  .i.e the entire
%	logo will not appear when this document is printed by itself.
%
%	We print the logo at the origin for backward compatability.
%	Scribe files that do not use BoundingBox=File, (.i.e those
%	that use "Height=x, Width=y" expect the lower left x and
%	lower left y to be at the origin.  By printing at the origin
%	we can satisfy both styles of use of @Graphic, at the expense
%	of having the diagram clipped.
%
%	This PostScript program also executes the showpage operator.
%	V5(1500) of Scribe does not disable the showpage operator
%	by temporarily binding it to a noop.  Using this PostScript
%	program inside of V5 of scribe will not produce the expected
%	results.  This problem was fixed in V6(1600) of scribe.
%
%	Also be aware of psrev and included documents.  Many printers
%	produce pages in the "wrong" order.  Due to the way these
%	printers stack paper on output, the first page printed ends
%	up on the bottom, face up.  The last page printed ends up on top,
%	face up.  Because of this, many spoolers pipe their PostScript
%	through the psrev utility.  The psrev utility uses the %%Page:
%	comments to reverse the order of the pages in a PostScript
%	document.  When a PostScript file is included in a another
%	there will be two page ones.  Some versions of the psrev utility
%	do not correctly handle the included PostScript file and fail to
%	reverse the pages.  Causing included PostScript files that
%	include other PostScript files to fail.
%
% Modifications:
%
%	20-OCT-1988	Dale Moore	CMU-CS
%	Removed /inch def.  No Longer needed.  
%	Added %%EndProlog, part of Document Structuring Convention.
%	Changed dict size to 1, no longer need dict of size 2.
%--

1 dict begin

/cmulogo
{
    % do the cmu logo at the currentpoint.
    % The text of the logo will be in a 1 point font.
    % the lower left of the logo will be at the currentpoint
    gsave
	% move the coordinate system to current x y
	currentpoint translate
	
	% First the tilted square
        gsave
	    0.8700 0.0544 moveto
	    14.0 rotate
	    0.0272 setlinewidth
	    0.0 3.4286 rlineto
	    3.4286 0.0 rlineto
	    0.0 -3.4286 rlineto
	    closepath stroke
	grestore

	% now the Carnegie-Mellon
	/Times-Bold findfont setfont
	1.638 2.5573 moveto (Carnegie) show
	1.638 1.5973 moveto (Mellon) show
    grestore
} bind def

%%EndProlog
%%Page: 1 1
%%PageBoundingBox: (atend)
gsave
    18 18 scale
    0 0 moveto
    cmulogo
grestore

showpage
%%PageBoundingBox: 0 0 100 79
%%Trailer
end
%%BoundingBox: 0 0 100 79

%%EndDocument
 @endspecial 6175 4240 9 4676 v 20 4248 6164 9 v eop
%%Page: 7 7
7 6 bop 20 -474 6164 9 v 20 4280 9 4754 v 208 -294 a
 0. 0. 1. setrgbcolor

208 -294 a 182 x Fj(Concrete)68 b(Proposal)2262 -112
y
 0 setgray
 2262 -112 a 208 12 a
 0. 0. 1. setrgbcolor
 208 12 a 346 210 a Fi(\017)86
b Fp(Idea)854 210 y
 0 setgray
 854 210 a Fp(:)58 b(Allo)m(w)49 b(str)s(ucture)e
(shar)s(ing)g(in)h(the)f(XML)h(encoding)e(b)m(y)587 512
y Fh(\226)86 b Fp(str)n(a)m(w-man)48 b(element)f Fq(OMR)63
b Fp(\()2694 512 y
 0. 0.7 0. setrgbcolor
 2694 512 a Fp(represents)48 b(target)f(of)h
Fq(xlink:href)j Fp(attr)s(ib)m(ute)5940 512 y
 0 setgray
 5940 512
a Fp(\))587 814 y Fh(\226)86 b Fp(b)m(y)47 b Fq(id)i
Fp(attr)s(ib)m(utes)d(on)51 b Fo(O)8 b Fn(P)g(E)g(N)g
Fo(M)g Fn(A)-7 b(T)8 b(H)58 b Fp(elements)823 b(\()4735
814 y
 0. 0.7 0. setrgbcolor
 4735 814 a Fp(possib)m(le)47 b(targets)5938 814
y
 0 setgray
 5938 814 a Fp(\))208 925 y
 0. 0. 1. setrgbcolor
 208 925 a 346 1175 a Fi(\017)86
b Fp(Pro)786 1175 y
 0 setgray
 786 1175 a Fp(:)893 1175 y
 0. 0.7 0. setrgbcolor
 893 1175
a 4 w Fo(O)8 b Fn(P)g(E)g(N)g Fo(M)g Fn(A)-7 b(T)8 b(H)57
b Fp(data)47 b(model)h(does)f(not)g(change)3988 1175
y
 0 setgray
 3988 1175 a 608 w Fp(\()4653 1175 y
 0. 0.7 0. setrgbcolor
 4653 1175 a Fp(sta)-5
b(ys)48 b(\002nite)g(trees)m(.)5938 1175 y
 0 setgray
 5938 1175
a Fp(\))518 1464 y(Both)f(encodings)g(encode)f(the)51
b Fo(O)8 b Fn(P)g(E)g(N)g Fo(M)g Fn(A)-7 b(T)8 b(H)58
b Fp(object)1620 1780 y Fh(application)p Fp(\()2500 1780
y
 1. 0. 0. setrgbcolor
 2500 1780 a Fp(f)2548 1780 y
 0 setgray
 2548 1780 a Fp(,)p Fh(application)p
Fp(\()3476 1780 y
 1. 0. 0. setrgbcolor
 3476 1780 a Fp(f)3524 1780 y
 0 setgray
 3524 1780
a Fp(,)p Fh(application)p Fp(\()4452 1780 y
 1. 0. 0. setrgbcolor
 4452 1780
a Fp(f)4500 1780 y
 0 setgray
 4500 1780 a Fp(,)4548 1780 y
 1. 0. 0. setrgbcolor
 4548
1780 a Fp(a)4644 1780 y
 0 setgray
 4644 1780 a Fp(,)4692 1780 y
 1. 0. 0. setrgbcolor

4692 1780 a Fp(a)4788 1780 y
 0 setgray
 4788 1780 a Fp(\),)3543
2024 y Fh(application)p Fp(\()4423 2024 y
 1. 0. 0. setrgbcolor
 4423 2024 a
Fp(f)4471 2024 y
 0 setgray
 4471 2024 a Fp(,)4519 2024 y
 1. 0. 0. setrgbcolor
 4519 2024
a Fp(a)4615 2024 y
 0 setgray
 4615 2024 a Fp(,)4663 2024 y
 1. 0. 0. setrgbcolor
 4663
2024 a Fp(a)4759 2024 y
 0 setgray
 4759 2024 a Fp(\)\),)2596 2267
y Fh(application)p Fp(\()3476 2267 y
 1. 0. 0. setrgbcolor
 3476 2267 a Fp(f)3524
2267 y
 0 setgray
 3524 2267 a Fp(,)p Fh(application)p Fp(\()4452
2267 y
 1. 0. 0. setrgbcolor
 4452 2267 a Fp(f)4500 2267 y
 0 setgray
 4500 2267 a Fp(,)4548
2267 y
 1. 0. 0. setrgbcolor
 4548 2267 a Fp(a)4644 2267 y
 0 setgray
 4644 2267 a Fp(,)4692
2267 y
 1. 0. 0. setrgbcolor
 4692 2267 a Fp(a)4788 2267 y
 0 setgray
 4788 2267 a Fp(\),)3539
2511 y Fh(application)p Fp(\()4419 2511 y
 1. 0. 0. setrgbcolor
 4419 2511 a
Fp(f)4467 2511 y
 0 setgray
 4467 2511 a Fp(,)4515 2511 y
 1. 0. 0. setrgbcolor
 4515 2511
a Fp(a)4611 2511 y
 0 setgray
 4611 2511 a Fp(,)4659 2511 y
 1. 0. 0. setrgbcolor
 4659
2511 a Fp(a)4755 2511 y
 0 setgray
 4755 2511 a Fp(\)\)\))208 2619
y
 0. 0. 1. setrgbcolor
 208 2619 a 346 2872 a Fi(\017)86 b Fp(Prob)m(lem)1156
2872 y
 0 setgray
 1156 2872 a Fp(:)1263 2872 y
 1. 0. 0. setrgbcolor
 1263 2872 a Fp(Acyclicity)48
b(Constr)n(aint)2801 2872 y
 0 setgray
 2801 2872 a 449 w Fp(\()3307
2872 y
 0. 0.7 0. setrgbcolor
 3307 2872 a Fp(gener)n(al)g(DG)g(represent)g(in\002nite)f(trees)
5938 2872 y
 0 setgray
 5938 2872 a Fp(\))208 2910 y
 1. 0. 0. setrgbcolor
 208 2910 a 518
3161 a Fp(non-local)g(condition)1954 3161 y
 0 setgray
 1954 3161
a 47 w Fp(to)h(be)f(v)l(er)s(i\002ed)g(f)-5 b(or)48 b(v)l(alidity)208
3270 y
 0. 0. 1. setrgbcolor
 208 3270 a 346 3522 a Fi(\017)86 b Fp(Decision)1178
3522 y
 0 setgray
 1178 3522 a Fp(:)59 b(Go)48 b(f)-5 b(or)47 b(it,)h(accompan)m(y)
g(with)g(corresponding)f(binar)5 b(y)48 b(encoding)603
4073 y Fo(7)2368 4069 y Fn(c)2325 4073 y Fm(\015)q Fn(:)19
b(Michael)35 b(K)-5 b(ohlhase)1636 b @beginspecial 0
@llx 0 @lly 100 @urx 79 @ury 198 @rhi @setspecial
%%BeginDocument: cmulogo.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: CMULogo.PS
%%Creator: Dale Moore CMU-CS/RI 
%%CreationDate: 14-APR-1987
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: (atend)
%%EndComments

%++
% CMULOGO.PS
%
% Description:
%
%	This is the PostScript version of the CMU Logo.  It
%	attempts to follow as closely as possible the standard
%	for the logo as set forth in the "Carnegie Mellon
%	Logo and Graphics Standard".  It is available from
%	campus printing.
%
%	The execeptions to the logo standard as published 
%	are that the font Time-Bold (ITC) is used in place of the
%	standard of Bauer Bodini Bold (Compugraphic).  Both
%	the Bauer Bodini Bold font and Times-Bold font are
%	Serif fonts and very similar in design.  The Bauer font
%	is slightly more condensed than the Times font.  The
%	same text set in the same pt size will use approx 10% less
%	horizontal space in a Bauer font that the same text set in Times.
%
%	This implementation does not enforce the standard that
%	minimum point size of the Carnegie Mellon name is
%	12 points.
%
%	The logo is printed at the origin (0,0), on the current page.
%	Many printers can not print near the border of the page.
%	This will cause the output to be clipped.  .i.e the entire
%	logo will not appear when this document is printed by itself.
%
%	We print the logo at the origin for backward compatability.
%	Scribe files that do not use BoundingBox=File, (.i.e those
%	that use "Height=x, Width=y" expect the lower left x and
%	lower left y to be at the origin.  By printing at the origin
%	we can satisfy both styles of use of @Graphic, at the expense
%	of having the diagram clipped.
%
%	This PostScript program also executes the showpage operator.
%	V5(1500) of Scribe does not disable the showpage operator
%	by temporarily binding it to a noop.  Using this PostScript
%	program inside of V5 of scribe will not produce the expected
%	results.  This problem was fixed in V6(1600) of scribe.
%
%	Also be aware of psrev and included documents.  Many printers
%	produce pages in the "wrong" order.  Due to the way these
%	printers stack paper on output, the first page printed ends
%	up on the bottom, face up.  The last page printed ends up on top,
%	face up.  Because of this, many spoolers pipe their PostScript
%	through the psrev utility.  The psrev utility uses the %%Page:
%	comments to reverse the order of the pages in a PostScript
%	document.  When a PostScript file is included in a another
%	there will be two page ones.  Some versions of the psrev utility
%	do not correctly handle the included PostScript file and fail to
%	reverse the pages.  Causing included PostScript files that
%	include other PostScript files to fail.
%
% Modifications:
%
%	20-OCT-1988	Dale Moore	CMU-CS
%	Removed /inch def.  No Longer needed.  
%	Added %%EndProlog, part of Document Structuring Convention.
%	Changed dict size to 1, no longer need dict of size 2.
%--

1 dict begin

/cmulogo
{
    % do the cmu logo at the currentpoint.
    % The text of the logo will be in a 1 point font.
    % the lower left of the logo will be at the currentpoint
    gsave
	% move the coordinate system to current x y
	currentpoint translate
	
	% First the tilted square
        gsave
	    0.8700 0.0544 moveto
	    14.0 rotate
	    0.0272 setlinewidth
	    0.0 3.4286 rlineto
	    3.4286 0.0 rlineto
	    0.0 -3.4286 rlineto
	    closepath stroke
	grestore

	% now the Carnegie-Mellon
	/Times-Bold findfont setfont
	1.638 2.5573 moveto (Carnegie) show
	1.638 1.5973 moveto (Mellon) show
    grestore
} bind def

%%EndProlog
%%Page: 1 1
%%PageBoundingBox: (atend)
gsave
    18 18 scale
    0 0 moveto
    cmulogo
grestore

showpage
%%PageBoundingBox: 0 0 100 79
%%Trailer
end
%%BoundingBox: 0 0 100 79

%%EndDocument
 @endspecial 6175 4280 9 4754 v 20 4288 6164 9 v eop
%%Page: 8 8
8 7 bop 20 -474 6164 9 v 20 4280 9 4754 v 208 -294 a
 0. 0. 1. setrgbcolor

208 -294 a 181 x Fj(Issue:)85 b Fc(OMDATA)67 b Fj(f)-7
b(or)68 b(arbitr)n(ar)7 b(y)73 b Fk(X)12 b Fl(M)g(L)77
b Fj(data)4316 -113 y
 0 setgray
 4316 -113 a 208 12 a
 0. 0. 1. setrgbcolor
 208 12 a 346
200 a Fi(\017)86 b Fp(Prob)m(lem)1156 200 y
 0 setgray
 1156 200
a Fp(:)59 b(W)-7 b(ant)46 b(to)i(allo)m(w)k Fo(X)8 b
Fn(M)g(L)55 b Fp(data)47 b(in)h(attr)s(ib)m(uitions)m(,)e(e)m(.g.)518
435 y Fd(<OMBVAR>)662 597 y(<OMATTR>)807 760 y(<OMATP>)952
922 y(<OMS)73 b(cd="presentation")78 b(name="MathML"/>)952
1085 y
 0. 0. 1. setrgbcolor
 952 1085 a Fd(<OM???>)1456 1085 y
 0 setgray
 1456 1085 a
1456 1085 a
 1. 0. 0. setrgbcolor
 1456 1085 a Fd(<msub><mi>X</mi)q(><m)q(n>4)q(</m)q(n><)q
(/ms)q(ub>)3838 1085 y
 0 setgray
 3838 1085 a 3838 1085 a
 0. 0. 1. setrgbcolor
 3838 1085
a Fd(<)q(/OM)q(???)q(>)4417 1085 y
 0 setgray
 4417 1085 a 807 1247
a Fd(</OMATTR>)807 1410 y(<OMV)c(name="X4"/>)662 1572
y(</OMATTR>)518 1735 y(</OMBVAR>)518 2051 y Fq(OMSTR)49
b Fp(and)e Fq(OMB)i Fp(are)f(a)m(wkw)m(ard)g(f)-5 b(or)48
b(v)l(ar)s(ious)f(reasons)208 2126 y
 0. 0. 1. setrgbcolor
 208 2126 a 346 2412
a Fi(\017)86 b Fp(Decision)1178 2412 y
 0 setgray
 1178 2412 a Fp(:)59
b(allo)m(w)49 b(e)-5 b(xplicit)47 b Fq(OMDATA)j Fp(element)e(in)f
Fq(OMATP)666 b Fp(\()5039 2412 y
 0. 0.7 0. setrgbcolor
 5039 2412 a Fp(attr)s(ib)m(utes??)5940
2412 y
 0 setgray
 5940 2412 a Fp(\))603 4073 y Fo(8)2368 4069 y
Fn(c)2325 4073 y Fm(\015)q Fn(:)19 b(Michael)35 b(K)-5
b(ohlhase)1636 b @beginspecial 0 @llx 0 @lly 100 @urx
79 @ury 198 @rhi @setspecial
%%BeginDocument: cmulogo.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: CMULogo.PS
%%Creator: Dale Moore CMU-CS/RI 
%%CreationDate: 14-APR-1987
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: (atend)
%%EndComments

%++
% CMULOGO.PS
%
% Description:
%
%	This is the PostScript version of the CMU Logo.  It
%	attempts to follow as closely as possible the standard
%	for the logo as set forth in the "Carnegie Mellon
%	Logo and Graphics Standard".  It is available from
%	campus printing.
%
%	The execeptions to the logo standard as published 
%	are that the font Time-Bold (ITC) is used in place of the
%	standard of Bauer Bodini Bold (Compugraphic).  Both
%	the Bauer Bodini Bold font and Times-Bold font are
%	Serif fonts and very similar in design.  The Bauer font
%	is slightly more condensed than the Times font.  The
%	same text set in the same pt size will use approx 10% less
%	horizontal space in a Bauer font that the same text set in Times.
%
%	This implementation does not enforce the standard that
%	minimum point size of the Carnegie Mellon name is
%	12 points.
%
%	The logo is printed at the origin (0,0), on the current page.
%	Many printers can not print near the border of the page.
%	This will cause the output to be clipped.  .i.e the entire
%	logo will not appear when this document is printed by itself.
%
%	We print the logo at the origin for backward compatability.
%	Scribe files that do not use BoundingBox=File, (.i.e those
%	that use "Height=x, Width=y" expect the lower left x and
%	lower left y to be at the origin.  By printing at the origin
%	we can satisfy both styles of use of @Graphic, at the expense
%	of having the diagram clipped.
%
%	This PostScript program also executes the showpage operator.
%	V5(1500) of Scribe does not disable the showpage operator
%	by temporarily binding it to a noop.  Using this PostScript
%	program inside of V5 of scribe will not produce the expected
%	results.  This problem was fixed in V6(1600) of scribe.
%
%	Also be aware of psrev and included documents.  Many printers
%	produce pages in the "wrong" order.  Due to the way these
%	printers stack paper on output, the first page printed ends
%	up on the bottom, face up.  The last page printed ends up on top,
%	face up.  Because of this, many spoolers pipe their PostScript
%	through the psrev utility.  The psrev utility uses the %%Page:
%	comments to reverse the order of the pages in a PostScript
%	document.  When a PostScript file is included in a another
%	there will be two page ones.  Some versions of the psrev utility
%	do not correctly handle the included PostScript file and fail to
%	reverse the pages.  Causing included PostScript files that
%	include other PostScript files to fail.
%
% Modifications:
%
%	20-OCT-1988	Dale Moore	CMU-CS
%	Removed /inch def.  No Longer needed.  
%	Added %%EndProlog, part of Document Structuring Convention.
%	Changed dict size to 1, no longer need dict of size 2.
%--

1 dict begin

/cmulogo
{
    % do the cmu logo at the currentpoint.
    % The text of the logo will be in a 1 point font.
    % the lower left of the logo will be at the currentpoint
    gsave
	% move the coordinate system to current x y
	currentpoint translate
	
	% First the tilted square
        gsave
	    0.8700 0.0544 moveto
	    14.0 rotate
	    0.0272 setlinewidth
	    0.0 3.4286 rlineto
	    3.4286 0.0 rlineto
	    0.0 -3.4286 rlineto
	    closepath stroke
	grestore

	% now the Carnegie-Mellon
	/Times-Bold findfont setfont
	1.638 2.5573 moveto (Carnegie) show
	1.638 1.5973 moveto (Mellon) show
    grestore
} bind def

%%EndProlog
%%Page: 1 1
%%PageBoundingBox: (atend)
gsave
    18 18 scale
    0 0 moveto
    cmulogo
grestore

showpage
%%PageBoundingBox: 0 0 100 79
%%Trailer
end
%%BoundingBox: 0 0 100 79

%%EndDocument
 @endspecial 6175 4280 9 4754 v 20 4288 6164 9 v eop
%%Page: 9 9
9 8 bop 20 -474 6164 9 v 20 4280 9 4754 v 208 -294 a
 0. 0. 1. setrgbcolor

208 -294 a 182 x Fj(Issue:)85 b(Namespaces/URIs)67 b(f)-7
b(or)68 b Fc(OMS)p Fj(????)4440 -112 y
 0 setgray
 4440 -112 a 208
12 a
 0. 0. 1. setrgbcolor
 208 12 a 346 211 a Fi(\017)86 b Fp(Prob)m(lem)1156
211 y
 0 setgray
 1156 211 a Fp(:)59 b(Where)46 b(to)i(\002nd)f(the)h(content)e
(dictionar)5 b(y)-17 b(,)48 b(when)f(w)n(e)h(see)2144
476 y Fb(<OMS)81 b(cd="foo")f(name="bar"/>)p Fa(?)208
559 y
 0. 0. 1. setrgbcolor
 208 559 a 346 837 a Fi(\017)90 b Fo(M)8 b Fn(A)-7
b(T)8 b(H)g Fo(M)g(L)56 b Fp(solution)1890 837 y
 0 setgray
 1890
837 a Fp(:)1840 b(\()3835 837 y
 0. 0.7 0. setrgbcolor
 3835 837 a Fp(use)47
b(outr)s(ight)g(URI)i(ref)-5 b(erences)5939 837 y
 0 setgray
 5939
837 a Fp(\))736 1102 y Fb(<csymbol)79 b(definitionURL="http:)o(//c)o
(ds.)o(foo)o(bag)o(.or)o(g/f)o(oo)o(.ht)o(ml#)o(bar)o("/>)518
1418 y Fp([+])47 b(w)n(eb-conf)-5 b(or)t(mance)48 b([\226])f
(location-independence/mirror)s(ing)208 1528 y
 0. 0. 1. setrgbcolor
 208 1528
a 346 1779 a Fi(\017)86 b Fp(Namespaces)47 b(solution)2164
1779 y
 0 setgray
 2164 1779 a Fp(:)2338 b(\()4607 1779 y
 0. 0.7 0. setrgbcolor
 4607 1779
a Fp(use)48 b(Namespaces)5938 1779 y
 0 setgray
 5938 1779 a Fp(\))1232
2044 y Fb(<bar)81 b(xmlns="http://cds.)o(foo)o(bag)o(.or)o(g/f)o(oo.)o
(htm)o(l#)o(bar)o("/>)518 2360 y Fp([+])47 b(w)n(eb-conf)-5
b(or)t(mance)48 b([\226])f(lose)h(DTD)g(v)l(alidation)f([???])58
b(STS)48 b(as)g(schemas?)208 2466 y
 0. 0. 1. setrgbcolor
 208 2466 a 346 2720
a Fi(\017)86 b Fp(URN)49 b(solution)1533 2720 y
 0 setgray
 1533
2720 a Fp(:)58 b(e)-5 b(xtend)47 b(syntax,)g(use)g(Unif)-5
b(or)t(m)49 b(resource)f(names)1314 2986 y Fb(<OMS)81
b(cd="urn://cds.foobag)o(.or)o(g/f)o(oo")76 b(name="bar"/>)518
3301 y Fp([+])47 b(w)n(eb)h(conf)-5 b(or)t(mance)47 b([\226])g(need)g
(URN)i(ser)5 b(vice)603 4073 y Fo(9)2368 4069 y Fn(c)2325
4073 y Fm(\015)q Fn(:)19 b(Michael)35 b(K)-5 b(ohlhase)1636
b @beginspecial 0 @llx 0 @lly 100 @urx 79 @ury 198 @rhi
@setspecial
%%BeginDocument: cmulogo.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: CMULogo.PS
%%Creator: Dale Moore CMU-CS/RI 
%%CreationDate: 14-APR-1987
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: (atend)
%%EndComments

%++
% CMULOGO.PS
%
% Description:
%
%	This is the PostScript version of the CMU Logo.  It
%	attempts to follow as closely as possible the standard
%	for the logo as set forth in the "Carnegie Mellon
%	Logo and Graphics Standard".  It is available from
%	campus printing.
%
%	The execeptions to the logo standard as published 
%	are that the font Time-Bold (ITC) is used in place of the
%	standard of Bauer Bodini Bold (Compugraphic).  Both
%	the Bauer Bodini Bold font and Times-Bold font are
%	Serif fonts and very similar in design.  The Bauer font
%	is slightly more condensed than the Times font.  The
%	same text set in the same pt size will use approx 10% less
%	horizontal space in a Bauer font that the same text set in Times.
%
%	This implementation does not enforce the standard that
%	minimum point size of the Carnegie Mellon name is
%	12 points.
%
%	The logo is printed at the origin (0,0), on the current page.
%	Many printers can not print near the border of the page.
%	This will cause the output to be clipped.  .i.e the entire
%	logo will not appear when this document is printed by itself.
%
%	We print the logo at the origin for backward compatability.
%	Scribe files that do not use BoundingBox=File, (.i.e those
%	that use "Height=x, Width=y" expect the lower left x and
%	lower left y to be at the origin.  By printing at the origin
%	we can satisfy both styles of use of @Graphic, at the expense
%	of having the diagram clipped.
%
%	This PostScript program also executes the showpage operator.
%	V5(1500) of Scribe does not disable the showpage operator
%	by temporarily binding it to a noop.  Using this PostScript
%	program inside of V5 of scribe will not produce the expected
%	results.  This problem was fixed in V6(1600) of scribe.
%
%	Also be aware of psrev and included documents.  Many printers
%	produce pages in the "wrong" order.  Due to the way these
%	printers stack paper on output, the first page printed ends
%	up on the bottom, face up.  The last page printed ends up on top,
%	face up.  Because of this, many spoolers pipe their PostScript
%	through the psrev utility.  The psrev utility uses the %%Page:
%	comments to reverse the order of the pages in a PostScript
%	document.  When a PostScript file is included in a another
%	there will be two page ones.  Some versions of the psrev utility
%	do not correctly handle the included PostScript file and fail to
%	reverse the pages.  Causing included PostScript files that
%	include other PostScript files to fail.
%
% Modifications:
%
%	20-OCT-1988	Dale Moore	CMU-CS
%	Removed /inch def.  No Longer needed.  
%	Added %%EndProlog, part of Document Structuring Convention.
%	Changed dict size to 1, no longer need dict of size 2.
%--

1 dict begin

/cmulogo
{
    % do the cmu logo at the currentpoint.
    % The text of the logo will be in a 1 point font.
    % the lower left of the logo will be at the currentpoint
    gsave
	% move the coordinate system to current x y
	currentpoint translate
	
	% First the tilted square
        gsave
	    0.8700 0.0544 moveto
	    14.0 rotate
	    0.0272 setlinewidth
	    0.0 3.4286 rlineto
	    3.4286 0.0 rlineto
	    0.0 -3.4286 rlineto
	    closepath stroke
	grestore

	% now the Carnegie-Mellon
	/Times-Bold findfont setfont
	1.638 2.5573 moveto (Carnegie) show
	1.638 1.5973 moveto (Mellon) show
    grestore
} bind def

%%EndProlog
%%Page: 1 1
%%PageBoundingBox: (atend)
gsave
    18 18 scale
    0 0 moveto
    cmulogo
grestore

showpage
%%PageBoundingBox: 0 0 100 79
%%Trailer
end
%%BoundingBox: 0 0 100 79

%%EndDocument
 @endspecial 6175 4280 9 4754 v 20 4288 6164 9 v eop
%%Page: 10 10
10 9 bop 20 -474 6164 9 v 20 4280 9 4754 v 208 -294 a
 0. 0. 1. setrgbcolor

208 -294 a 181 x Fj(Issue:)85 b(T)-30 b(ypes)l(,)69 b
Fc(OMSuchThat)p Fj(,)e(\002rst-class)h(attr)t(ib)-5 b(uitions)5744
-113 y
 0 setgray
 5744 -113 a 208 8 a
 0. 0. 1. setrgbcolor
 208 8 a 346 204 a Fi(\017)86
b Fp(Bac)m(kg)n(round)1433 204 y
 0 setgray
 1433 204 a Fp(:)58 b(Attr)s(ib)m
(utions)46 b(are)h(second-class)h(citiz)m(ens)g(of)k
Fo(O)8 b Fn(P)g(E)g(N)g Fo(M)g Fn(A)-7 b(T)8 b(H)346
558 y Fi(\017)90 b Fo(O)8 b Fn(P)g(E)g(N)g Fo(M)g Fn(A)-7
b(T)8 b(H)57 b Fp(compliant)48 b(applications)f(need)g(not)g(e)-5
b(v)l(en)47 b(read)g(them!)346 847 y Fi(\017)86 b Fp(types)47
b(are)h(represented)f(using)g Fq(OMATTR)p Fp(,)j(e)m(.g.)518
1077 y Fd(<OMBVAR>)662 1239 y
 0. 0. 1. setrgbcolor
 662 1239 a Fd(<OMATTR>)807
1401 y(<OMATP>)1311 1401 y
 0 setgray
 1311 1401 a 952 1562 a Fd(<OMS)73
b(cd="sts")i(name="type"/>)952 1724 y
 1. 0. 0. setrgbcolor
 952 1724 a Fd(<OMA>)1096
1885 y(<OMS)f(name="mapsto")i(cd="sts"/>)1096 2047 y(<OMV)e
(name="AbelianGroup"/>)1096 2209 y(<OMV)g(name="AbelianGroup"/>)952
2370 y(</OMA>)1384 2370 y
 0 setgray
 1384 2370 a 807 2532 a
 0. 0. 1. setrgbcolor
 807
2532 a Fd(</OMATTR>)1455 2532 y
 0 setgray
 1455 2532 a 807 2693
a Fd(<OMV)g(name="X4"/>)662 2855 y
 0. 0. 1. setrgbcolor
 662 2855 a Fd(</OMATTR>)1310
2855 y
 0 setgray
 1310 2855 a 518 3017 a Fd(</OMBVAR>)346 3371 y
Fi(\017)86 b Fp(types)47 b(are)h(second-class)f(citiz)m(ens)i(of)i
Fo(O)8 b Fn(P)g(E)g(N)g Fo(M)g Fn(A)-7 b(T)8 b(H)3201
3613 y Fp(\()3258 3613 y
 0. 0.7 0. setrgbcolor
 3258 3613 a Fp(Prob)m(lem)48
b(f)-5 b(or)47 b(f)-5 b(or)t(mal)49 b(methods)e(people)5939
3613 y
 0 setgray
 5939 3613 a Fp(\))582 4073 y Fo(10)2411 4069 y
Fn(c)2368 4073 y Fm(\015)q Fn(:)19 b(Michael)35 b(K)-5
b(ohlhase)1615 b @beginspecial 0 @llx 0 @lly 100 @urx
79 @ury 198 @rhi @setspecial
%%BeginDocument: cmulogo.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: CMULogo.PS
%%Creator: Dale Moore CMU-CS/RI 
%%CreationDate: 14-APR-1987
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: (atend)
%%EndComments

%++
% CMULOGO.PS
%
% Description:
%
%	This is the PostScript version of the CMU Logo.  It
%	attempts to follow as closely as possible the standard
%	for the logo as set forth in the "Carnegie Mellon
%	Logo and Graphics Standard".  It is available from
%	campus printing.
%
%	The execeptions to the logo standard as published 
%	are that the font Time-Bold (ITC) is used in place of the
%	standard of Bauer Bodini Bold (Compugraphic).  Both
%	the Bauer Bodini Bold font and Times-Bold font are
%	Serif fonts and very similar in design.  The Bauer font
%	is slightly more condensed than the Times font.  The
%	same text set in the same pt size will use approx 10% less
%	horizontal space in a Bauer font that the same text set in Times.
%
%	This implementation does not enforce the standard that
%	minimum point size of the Carnegie Mellon name is
%	12 points.
%
%	The logo is printed at the origin (0,0), on the current page.
%	Many printers can not print near the border of the page.
%	This will cause the output to be clipped.  .i.e the entire
%	logo will not appear when this document is printed by itself.
%
%	We print the logo at the origin for backward compatability.
%	Scribe files that do not use BoundingBox=File, (.i.e those
%	that use "Height=x, Width=y" expect the lower left x and
%	lower left y to be at the origin.  By printing at the origin
%	we can satisfy both styles of use of @Graphic, at the expense
%	of having the diagram clipped.
%
%	This PostScript program also executes the showpage operator.
%	V5(1500) of Scribe does not disable the showpage operator
%	by temporarily binding it to a noop.  Using this PostScript
%	program inside of V5 of scribe will not produce the expected
%	results.  This problem was fixed in V6(1600) of scribe.
%
%	Also be aware of psrev and included documents.  Many printers
%	produce pages in the "wrong" order.  Due to the way these
%	printers stack paper on output, the first page printed ends
%	up on the bottom, face up.  The last page printed ends up on top,
%	face up.  Because of this, many spoolers pipe their PostScript
%	through the psrev utility.  The psrev utility uses the %%Page:
%	comments to reverse the order of the pages in a PostScript
%	document.  When a PostScript file is included in a another
%	there will be two page ones.  Some versions of the psrev utility
%	do not correctly handle the included PostScript file and fail to
%	reverse the pages.  Causing included PostScript files that
%	include other PostScript files to fail.
%
% Modifications:
%
%	20-OCT-1988	Dale Moore	CMU-CS
%	Removed /inch def.  No Longer needed.  
%	Added %%EndProlog, part of Document Structuring Convention.
%	Changed dict size to 1, no longer need dict of size 2.
%--

1 dict begin

/cmulogo
{
    % do the cmu logo at the currentpoint.
    % The text of the logo will be in a 1 point font.
    % the lower left of the logo will be at the currentpoint
    gsave
	% move the coordinate system to current x y
	currentpoint translate
	
	% First the tilted square
        gsave
	    0.8700 0.0544 moveto
	    14.0 rotate
	    0.0272 setlinewidth
	    0.0 3.4286 rlineto
	    3.4286 0.0 rlineto
	    0.0 -3.4286 rlineto
	    closepath stroke
	grestore

	% now the Carnegie-Mellon
	/Times-Bold findfont setfont
	1.638 2.5573 moveto (Carnegie) show
	1.638 1.5973 moveto (Mellon) show
    grestore
} bind def

%%EndProlog
%%Page: 1 1
%%PageBoundingBox: (atend)
gsave
    18 18 scale
    0 0 moveto
    cmulogo
grestore

showpage
%%PageBoundingBox: 0 0 100 79
%%Trailer
end
%%BoundingBox: 0 0 100 79

%%EndDocument
 @endspecial 6175 4280 9 4754 v 20 4288 6164 9 v eop
%%Page: 11 11
11 10 bop 20 -474 6164 9 v 20 4280 9 4754 v 208 -294
a
 0. 0. 1. setrgbcolor
 208 -294 a 182 x Fj(Solutions?)1366 -112 y
 0 setgray
 1366 -112
a 208 -35 a
 0. 0. 1. setrgbcolor
 208 -35 a 346 164 a Fi(\017)86 b Fp(First-class)49
b Fq(OMATTR)1968 164 y
 0 setgray
 1968 164 a Fp(:)h([+])d(Gener)n(al)g(Solution)g
([\226])h(Dif\002cult)g(to)f(control)208 271 y
 0. 0. 1. setrgbcolor
 208 271
a 346 461 a Fi(\017)86 b Fp(First-class)49 b(types)e(annotation)2615
461 y
 0 setgray
 2615 461 a Fp(:)58 b([+])47 b(solv)l(es)g(T)-21
b(ypes)48 b([\226])g(Special)f(Solution)518 696 y Fd(<OMBVAR>)662
858 y
 0. 0. 1. setrgbcolor
 662 858 a Fd(<OMTYPE)75 b(cd="sts")g(name="type">)2756
858 y
 0 setgray
 2756 858 a 807 1021 a
 1. 0. 0. setrgbcolor
 807 1021 a Fd(<OMV)f(name="AbelianGroup"/>)
2681 1021 y
 0 setgray
 2681 1021 a 807 1183 a Fd(<OMV)g(name="X4"/>)662
1346 y
 0. 0. 1. setrgbcolor
 662 1346 a Fd(</OMATTR>)1310 1346 y
 0 setgray
 1310 1346
a 518 1508 a Fd(</OMBVAR>)208 1590 y
 0. 0. 1. setrgbcolor
 208 1590 a 346 1788
a Fi(\017)86 b Fq(OMBIND)50 b Fp(with)e(restr)s(ictions)2375
1788 y
 0 setgray
 2375 1788 a Fp(:)518 1951 y([+])f(solv)l(es)h(T)-21
b(ypes)48 b(in)f(logic)m(,)i(MathML)e(compatibility)h([\226])g(Special)
f(Solution)518 2185 y Fd(<OMBIND><OMS)76 b(cd="quant2")g
(name="rforall"/>)662 2348 y(<OMBVAR><OMV)h(name="X4"/></OMBVAR>)662
2510 y
 0. 0. 1. setrgbcolor
 662 2510 a Fd(<OMSuchThat)f(cd="sts")f(name="type">)807
2673 y(<OMA><OMS)g(cd="sts")g(name="oftype"/>)3261 2673
y
 0 setgray
 3261 2673 a Fd(<OMV)k(name="X4"/>)4420 2673 y
 1. 0. 0. setrgbcolor
 4420
2673 a Fd(<OMV)e(name="AG"/>)5577 2673 y
 0 setgray
 5577 2673 a
5577 2673 a
 0. 0. 1. setrgbcolor
 5577 2673 a Fd(</OMA>)662 2835 y(</OMSuchThat>)1598
2835 y
 0 setgray
 1598 2835 a 662 2998 a Fd(...)518 3160 y(</OMBIND>)208
3242 y
 1. 0. 0. setrgbcolor
 208 3242 a 346 3521 a Fi(\017)86 b Fp(an)m(y)48
b(other)f(ideas?)1789 3521 y
 0 setgray
 1789 3521 a 582 4073 a Fo(11)2411
4069 y Fn(c)2368 4073 y Fm(\015)q Fn(:)19 b(Michael)35
b(K)-5 b(ohlhase)1615 b @beginspecial 0 @llx 0 @lly 100
@urx 79 @ury 198 @rhi @setspecial
%%BeginDocument: cmulogo.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: CMULogo.PS
%%Creator: Dale Moore CMU-CS/RI 
%%CreationDate: 14-APR-1987
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: (atend)
%%EndComments

%++
% CMULOGO.PS
%
% Description:
%
%	This is the PostScript version of the CMU Logo.  It
%	attempts to follow as closely as possible the standard
%	for the logo as set forth in the "Carnegie Mellon
%	Logo and Graphics Standard".  It is available from
%	campus printing.
%
%	The execeptions to the logo standard as published 
%	are that the font Time-Bold (ITC) is used in place of the
%	standard of Bauer Bodini Bold (Compugraphic).  Both
%	the Bauer Bodini Bold font and Times-Bold font are
%	Serif fonts and very similar in design.  The Bauer font
%	is slightly more condensed than the Times font.  The
%	same text set in the same pt size will use approx 10% less
%	horizontal space in a Bauer font that the same text set in Times.
%
%	This implementation does not enforce the standard that
%	minimum point size of the Carnegie Mellon name is
%	12 points.
%
%	The logo is printed at the origin (0,0), on the current page.
%	Many printers can not print near the border of the page.
%	This will cause the output to be clipped.  .i.e the entire
%	logo will not appear when this document is printed by itself.
%
%	We print the logo at the origin for backward compatability.
%	Scribe files that do not use BoundingBox=File, (.i.e those
%	that use "Height=x, Width=y" expect the lower left x and
%	lower left y to be at the origin.  By printing at the origin
%	we can satisfy both styles of use of @Graphic, at the expense
%	of having the diagram clipped.
%
%	This PostScript program also executes the showpage operator.
%	V5(1500) of Scribe does not disable the showpage operator
%	by temporarily binding it to a noop.  Using this PostScript
%	program inside of V5 of scribe will not produce the expected
%	results.  This problem was fixed in V6(1600) of scribe.
%
%	Also be aware of psrev and included documents.  Many printers
%	produce pages in the "wrong" order.  Due to the way these
%	printers stack paper on output, the first page printed ends
%	up on the bottom, face up.  The last page printed ends up on top,
%	face up.  Because of this, many spoolers pipe their PostScript
%	through the psrev utility.  The psrev utility uses the %%Page:
%	comments to reverse the order of the pages in a PostScript
%	document.  When a PostScript file is included in a another
%	there will be two page ones.  Some versions of the psrev utility
%	do not correctly handle the included PostScript file and fail to
%	reverse the pages.  Causing included PostScript files that
%	include other PostScript files to fail.
%
% Modifications:
%
%	20-OCT-1988	Dale Moore	CMU-CS
%	Removed /inch def.  No Longer needed.  
%	Added %%EndProlog, part of Document Structuring Convention.
%	Changed dict size to 1, no longer need dict of size 2.
%--

1 dict begin

/cmulogo
{
    % do the cmu logo at the currentpoint.
    % The text of the logo will be in a 1 point font.
    % the lower left of the logo will be at the currentpoint
    gsave
	% move the coordinate system to current x y
	currentpoint translate
	
	% First the tilted square
        gsave
	    0.8700 0.0544 moveto
	    14.0 rotate
	    0.0272 setlinewidth
	    0.0 3.4286 rlineto
	    3.4286 0.0 rlineto
	    0.0 -3.4286 rlineto
	    closepath stroke
	grestore

	% now the Carnegie-Mellon
	/Times-Bold findfont setfont
	1.638 2.5573 moveto (Carnegie) show
	1.638 1.5973 moveto (Mellon) show
    grestore
} bind def

%%EndProlog
%%Page: 1 1
%%PageBoundingBox: (atend)
gsave
    18 18 scale
    0 0 moveto
    cmulogo
grestore

showpage
%%PageBoundingBox: 0 0 100 79
%%Trailer
end
%%BoundingBox: 0 0 100 79

%%EndDocument
 @endspecial 6175 4280 9 4754 v 20 4288 6164 9 v eop
%%Page: 12 12
12 11 bop 20 -474 6164 9 v 20 4280 9 4754 v 208 -294
a
 0. 0. 1. setrgbcolor
 208 -294 a 182 x Fj(Issue:)85 b(Extensions)68 b(to)h(the)g(Content)f
(Dictionar)7 b(y)68 b(f)-7 b(or)6 b(mat)5744 -112 y
 0 setgray
 5744
-112 a 208 14 a
 0. 0. 1. setrgbcolor
 208 14 a 346 213 a Fi(\017)86 b Fp(Proposal)1198
213 y
 0 setgray
 1198 213 a Fp(:)58 b(RDF)49 b(encoding)e(of)g(CDs)159
b(\()3194 213 y
 0. 0.7 0. setrgbcolor
 3194 213 a Fp(Bus)-5 b(w)n(ell:)60 b(W)-5
b(or)s(ks)m(,)47 b(b)m(ut)g(what')-9 b(s)48 b(the)f(use?)5938
213 y
 0 setgray
 5938 213 a Fp(\))208 324 y
 0. 0. 1. setrgbcolor
 208 324 a 346 574 a
Fi(\017)86 b Fp(Proposal)1198 574 y
 0 setgray
 1198 574 a Fp(:)58
b(allo)m(wing)49 b(OMDoc)1330 b(\()3942 574 y
 0. 0.7 0. setrgbcolor
 3942 574
a Fp(Ov)l(er)s(kill)48 b(in)g(man)m(y)g(situations)5938
574 y
 0 setgray
 5938 574 a Fp(\))208 685 y
 0. 0. 1. setrgbcolor
 208 685 a 346 935 a
Fi(\017)86 b Fp(T)-21 b(entativ)l(e)47 b(Solution)1872
935 y
 0 setgray
 1872 935 a 47 w Fp(De\002ning)g(a)h(minimal)h(data/functionality)
d(model)587 1238 y Fh(\226)86 b Fp(Model)48 b(after)j
Fo(O)8 b Fn(P)g(E)g(N)g Fo(M)g Fn(A)-7 b(T)8 b(H)57 b
Fp(objects:)i(de\002ne)47 b(data)g(model/encodings)208
1312 y
 1. 0. 0. setrgbcolor
 208 1312 a 587 1540 a Fh(\226)86 b Fp(let)48 b(1000)e(\003o)m(w)
n(ers)j(b)m(loom)2474 1540 y
 0 setgray
 2474 1540 a 346 1901 a Fi(\017)86
b Fp(Conf)-5 b(or)t(mance)47 b(issues)233 b(\()2376 1901
y
 0. 0.7 0. setrgbcolor
 2376 1901 a Fp(When)47 b(is)h(an)f(application)k Fo(O)8
b Fn(P)g(E)g(N)g Fo(M)g Fn(A)-7 b(T)8 b(H)57 b Fp(conf)-5
b(or)t(mant)5938 1901 y
 0 setgray
 5938 1901 a Fp(\))587 2203 y
Fh(\226)86 b Fp(can)47 b(only)h(be)f(solv)l(ed)g(when)h(CD)g(data)f
(model)h(is)g(\002x)-5 b(ed)587 2505 y Fh(\226)86 b Fp(la)-5
b(y)m(ers)47 b(of)h(conf)-5 b(or)t(mance?)58 b(syntactic)m(,)48
b(semantic)m(,)g(v)l(er)s(i\002ed,)f(types)m(,)h(.)29
b(.)g(.)582 4073 y Fo(12)2411 4069 y Fn(c)2368 4073 y
Fm(\015)q Fn(:)19 b(Michael)35 b(K)-5 b(ohlhase)1615
b @beginspecial 0 @llx 0 @lly 100 @urx 79 @ury 198 @rhi
@setspecial
%%BeginDocument: cmulogo.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: CMULogo.PS
%%Creator: Dale Moore CMU-CS/RI 
%%CreationDate: 14-APR-1987
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: (atend)
%%EndComments

%++
% CMULOGO.PS
%
% Description:
%
%	This is the PostScript version of the CMU Logo.  It
%	attempts to follow as closely as possible the standard
%	for the logo as set forth in the "Carnegie Mellon
%	Logo and Graphics Standard".  It is available from
%	campus printing.
%
%	The execeptions to the logo standard as published 
%	are that the font Time-Bold (ITC) is used in place of the
%	standard of Bauer Bodini Bold (Compugraphic).  Both
%	the Bauer Bodini Bold font and Times-Bold font are
%	Serif fonts and very similar in design.  The Bauer font
%	is slightly more condensed than the Times font.  The
%	same text set in the same pt size will use approx 10% less
%	horizontal space in a Bauer font that the same text set in Times.
%
%	This implementation does not enforce the standard that
%	minimum point size of the Carnegie Mellon name is
%	12 points.
%
%	The logo is printed at the origin (0,0), on the current page.
%	Many printers can not print near the border of the page.
%	This will cause the output to be clipped.  .i.e the entire
%	logo will not appear when this document is printed by itself.
%
%	We print the logo at the origin for backward compatability.
%	Scribe files that do not use BoundingBox=File, (.i.e those
%	that use "Height=x, Width=y" expect the lower left x and
%	lower left y to be at the origin.  By printing at the origin
%	we can satisfy both styles of use of @Graphic, at the expense
%	of having the diagram clipped.
%
%	This PostScript program also executes the showpage operator.
%	V5(1500) of Scribe does not disable the showpage operator
%	by temporarily binding it to a noop.  Using this PostScript
%	program inside of V5 of scribe will not produce the expected
%	results.  This problem was fixed in V6(1600) of scribe.
%
%	Also be aware of psrev and included documents.  Many printers
%	produce pages in the "wrong" order.  Due to the way these
%	printers stack paper on output, the first page printed ends
%	up on the bottom, face up.  The last page printed ends up on top,
%	face up.  Because of this, many spoolers pipe their PostScript
%	through the psrev utility.  The psrev utility uses the %%Page:
%	comments to reverse the order of the pages in a PostScript
%	document.  When a PostScript file is included in a another
%	there will be two page ones.  Some versions of the psrev utility
%	do not correctly handle the included PostScript file and fail to
%	reverse the pages.  Causing included PostScript files that
%	include other PostScript files to fail.
%
% Modifications:
%
%	20-OCT-1988	Dale Moore	CMU-CS
%	Removed /inch def.  No Longer needed.  
%	Added %%EndProlog, part of Document Structuring Convention.
%	Changed dict size to 1, no longer need dict of size 2.
%--

1 dict begin

/cmulogo
{
    % do the cmu logo at the currentpoint.
    % The text of the logo will be in a 1 point font.
    % the lower left of the logo will be at the currentpoint
    gsave
	% move the coordinate system to current x y
	currentpoint translate
	
	% First the tilted square
        gsave
	    0.8700 0.0544 moveto
	    14.0 rotate
	    0.0272 setlinewidth
	    0.0 3.4286 rlineto
	    3.4286 0.0 rlineto
	    0.0 -3.4286 rlineto
	    closepath stroke
	grestore

	% now the Carnegie-Mellon
	/Times-Bold findfont setfont
	1.638 2.5573 moveto (Carnegie) show
	1.638 1.5973 moveto (Mellon) show
    grestore
} bind def

%%EndProlog
%%Page: 1 1
%%PageBoundingBox: (atend)
gsave
    18 18 scale
    0 0 moveto
    cmulogo
grestore

showpage
%%PageBoundingBox: 0 0 100 79
%%Trailer
end
%%BoundingBox: 0 0 100 79

%%EndDocument
 @endspecial 6175 4280 9 4754 v 20 4288 6164 9 v eop
%%Page: 13 13
13 12 bop 20 -474 6164 9 v 20 4280 9 4754 v 208 -294
a
 0. 0. 1. setrgbcolor
 208 -294 a 182 x Fj(Conclusions)1559 -112 y
 0 setgray
 1559 -112
a 346 163 a Fi(\017)86 b Fp(Discussion)48 b(ongoing)1972
b(\()4041 163 y
 0. 0.7 0. setrgbcolor
 4041 163 a Fp(please)47 b(giv)l(e)g(us)h(y)m(our)f
(input)5938 163 y
 0 setgray
 5938 163 a Fp(\))346 524 y Fi(\017)86
b Fp(Dr)n(aft)48 b(standard)f(f)-5 b(or)48 b(ne)-5 b(xt)51
b Fo(O)8 b Fn(P)g(E)g(N)g Fo(M)g Fn(A)-7 b(T)8 b(H)57
b Fp(Netw)n(or)s(k)48 b(meeting.)346 885 y Fi(\017)86
b Fp(W)-5 b(or)s(king)46 b(Dr)n(aft)j(at)e Fq(http://www.openmath.o)q
(rg/)q(sta)q(nda)q(rd/)q(om20)582 4073 y Fo(13)2411 4069
y Fn(c)2368 4073 y Fm(\015)q Fn(:)19 b(Michael)35 b(K)-5
b(ohlhase)1615 b @beginspecial 0 @llx 0 @lly 100 @urx
79 @ury 198 @rhi @setspecial
%%BeginDocument: cmulogo.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Title: CMULogo.PS
%%Creator: Dale Moore CMU-CS/RI 
%%CreationDate: 14-APR-1987
%%DocumentFonts: Times-Bold
%%Pages: 1
%%BoundingBox: (atend)
%%EndComments

%++
% CMULOGO.PS
%
% Description:
%
%	This is the PostScript version of the CMU Logo.  It
%	attempts to follow as closely as possible the standard
%	for the logo as set forth in the "Carnegie Mellon
%	Logo and Graphics Standard".  It is available from
%	campus printing.
%
%	The execeptions to the logo standard as published 
%	are that the font Time-Bold (ITC) is used in place of the
%	standard of Bauer Bodini Bold (Compugraphic).  Both
%	the Bauer Bodini Bold font and Times-Bold font are
%	Serif fonts and very similar in design.  The Bauer font
%	is slightly more condensed than the Times font.  The
%	same text set in the same pt size will use approx 10% less
%	horizontal space in a Bauer font that the same text set in Times.
%
%	This implementation does not enforce the standard that
%	minimum point size of the Carnegie Mellon name is
%	12 points.
%
%	The logo is printed at the origin (0,0), on the current page.
%	Many printers can not print near the border of the page.
%	This will cause the output to be clipped.  .i.e the entire
%	logo will not appear when this document is printed by itself.
%
%	We print the logo at the origin for backward compatability.
%	Scribe files that do not use BoundingBox=File, (.i.e those
%	that use "Height=x, Width=y" expect the lower left x and
%	lower left y to be at the origin.  By printing at the origin
%	we can satisfy both styles of use of @Graphic, at the expense
%	of having the diagram clipped.
%
%	This PostScript program also executes the showpage operator.
%	V5(1500) of Scribe does not disable the showpage operator
%	by temporarily binding it to a noop.  Using this PostScript
%	program inside of V5 of scribe will not produce the expected
%	results.  This problem was fixed in V6(1600) of scribe.
%
%	Also be aware of psrev and included documents.  Many printers
%	produce pages in the "wrong" order.  Due to the way these
%	printers stack paper on output, the first page printed ends
%	up on the bottom, face up.  The last page printed ends up on top,
%	face up.  Because of this, many spoolers pipe their PostScript
%	through the psrev utility.  The psrev utility uses the %%Page:
%	comments to reverse the order of the pages in a PostScript
%	document.  When a PostScript file is included in a another
%	there will be two page ones.  Some versions of the psrev utility
%	do not correctly handle the included PostScript file and fail to
%	reverse the pages.  Causing included PostScript files that
%	include other PostScript files to fail.
%
% Modifications:
%
%	20-OCT-1988	Dale Moore	CMU-CS
%	Removed /inch def.  No Longer needed.  
%	Added %%EndProlog, part of Document Structuring Convention.
%	Changed dict size to 1, no longer need dict of size 2.
%--

1 dict begin

/cmulogo
{
    % do the cmu logo at the currentpoint.
    % The text of the logo will be in a 1 point font.
    % the lower left of the logo will be at the currentpoint
    gsave
	% move the coordinate system to current x y
	currentpoint translate
	
	% First the tilted square
        gsave
	    0.8700 0.0544 moveto
	    14.0 rotate
	    0.0272 setlinewidth
	    0.0 3.4286 rlineto
	    3.4286 0.0 rlineto
	    0.0 -3.4286 rlineto
	    closepath stroke
	grestore

	% now the Carnegie-Mellon
	/Times-Bold findfont setfont
	1.638 2.5573 moveto (Carnegie) show
	1.638 1.5973 moveto (Mellon) show
    grestore
} bind def

%%EndProlog
%%Page: 1 1
%%PageBoundingBox: (atend)
gsave
    18 18 scale
    0 0 moveto
    cmulogo
grestore

showpage
%%PageBoundingBox: 0 0 100 79
%%Trailer
end
%%BoundingBox: 0 0 100 79

%%EndDocument
 @endspecial 6175 4280 9 4754 v 20 4288 6164 9 v eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
