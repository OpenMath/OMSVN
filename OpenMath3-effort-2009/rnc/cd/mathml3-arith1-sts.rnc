#     This file contains the type checking rules for the symbols
#     from the STS types for the content dictionary 
#     It is provided "as is" without expressed or implied warranty.
#
#     Revision:   $Id$
#    $HeadURL$ 


namespace m  ="http://www.w3.org/1998/Math/MathML"

       This document is distributed in the hope that it will be useful, 
     but WITHOUT ANY WARRANTY; without even the implied warranty of 
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

     The copyright holder grants you permission to redistribute this 
     document freely as a verbatim copy. Furthermore, the copyright
     holder permits you to develop any derived work from this document
     provided that the following conditions are met.
       a) The derived work acknowledges the fact that it is derived from
          this document, and maintains a prominent reference in the 
          work to the original source.
       b) The fact that the derived work is not the original OpenMath 
          document is stated prominently in the derived work.  Moreover if
          both this document and the derived work are Content Dictionaries
          then the derived work must include a different CDName element,
          chosen so that it cannot be confused with any works adopted by
          the OpenMath Society.  In particular, if there is a Content 
          Dictionary Group whose name is, for example, `math' containing
          Content Dictionaries named `math1', `math2' etc., then you should 
          not name a derived Content Dictionary `mathN' where N is an integer.
          However you are free to name it `private_mathN' or some such.  This
          is because the names `mathN' may be used by the OpenMath Society
          for future extensions.
       c) The derived work is distributed under terms that allow the
          compilation of derived works, but keep paragraphs a) and b)
          intact.  The simplest way to do this is to distribute the derived
          work under the OpenMath license, but this is not a requirement.
     If you have questions about this license please contact the OpenMath
     society at http://www.openmath.org.

  arith1
  http://www.openmath.org/cd
  http://www.openmath.org/cd/arith1.ocd
  2006-03-30
  draft
  2008-09-25
  3
  0
  This CD defines symbols for common arithmetic functions.
  
    lcm
    application
    Least Common Multiple
    This n-ary operator is used to construct an expression which represents the least common multiple of its arguments. If no argument is provided, the lcm is 1. If one argument is provided, the lcm is that argument. The least common multiple of x and 1 is x.
    
      lcm
      
        type
        MathMLType
        integer
      
    

    
       lcm(a,b) = a*b/gcd(a,b) 

      
        
          
            
            
              
              
              
            
            
              
              
                
                 
                 
              
              
                
                
                
              
            
          
        
      
    

    
      
    for all integers a,b |
    There does not exist a c>0 such that c/a is an Integer and c/b is an
    Integer and lcm(a,b) > c.
  

      
        
          
            
            
              
              
            
            
              
              
                
                
                  
                   
                   
                
                
                  
                   
                   
                
              
              
                
                
                  
                  
                    
                  
                  
                    
                    
                      
                      
                      0
                    
                    
                      
                      
                      
                    
                    
                      
                      
                      
                    
                    
                      
                      
                      
                        
                        
                        
                      
                    
                  
                
              
            
          
        
      
    

    
      ForAll(x,lcm(x,1)=x)
      
        
          
      
      
        x
            
      
        
        
    
                x
                1
              
               x
             
          
        
      
    

    
      
        
          
          12
          17
        
      
    

    
      
        
          
          3
          5
          7
        
      
    

    
      
        If the following expression were evaluated at a=2, b=4, and
    c=6 it would yield 12.
      
      
        
          
          a
          b
          c
        
      
    
  
  
    big_lcm 
    binder
    Least Common Multiple over a Set of expressions
    This n-ary operator is used to construct the least common multiple over a set of expressions.
  
  
    gcd
    Greatest Common Divisor
    application
    This is the n-ary operator used to construct an expression which represents the greatest common divisor of its arguments. If no argument is provided, the gcd is 0. If one argument is provided, the gcd is that argument.
    
      gcd
      
        type
        MathMLType
        integer
      
    

    
      
for all integers a,b |
There does not exist a c such that a/c is an Integer and b/c is an
Integer and c > gcd(a,b).

Note that this implies that gcd(a,b) > 0


      
        
          
            
            
              
              
            
            
              
              
                
                
      
      
      
    
                
                  
      
      
    
              
              
                
                
                  
                  
                    
                  
                  
                    
                    
                      
                      
                        
                        
                        
                      
                      
                    
                    
                      
                      
                        
                        
                        
                      
                      
                    
                    
                      
                      
                      
                        
                        
                        
                      
                    
                  
                
              
            
          
        
      
    

    
      
        If this were evaluated at 
    a = 15, 
    b = 21, 
    c = 48, it would yield 3.
      
      
        
          
          a
          b
          c
        
      
    

    
gcd(6,9) = 3

        
          
          
            
             6 
             9 
          
           3 
        
      
    
  
  
    big_gcd
    binder
    Greatest Common Divisor over a Set of expressions
    This n-ary operator is used to construct the greatest common divisor over a set of expressions.
  
  
    plus
    application
    Addition
    The symbol representing an n-ary commutative function plus. If no operands are provided, the expression represents the additive identity. If one operand, a, is provided the expression evaluates to "a". If two or more operands are provided, the expression represents the (semi) group element corresponding to a left associative binary pairing of the operands. The meaning of mixed operand types not covered by the signatures shown here are left up to the target system.
    
      plus
      
        type
        MathMLType
        real
      
    

    
      
        a sum of no terms is 0
      
      
        
          
          
            
          
          0
         
      
    
    
      
        a sum of one term is equal to itself
      
      
        
          forall
          
            a
          
          
            
            
              
              a
            
            a
           
        
      
    

    
      
        Commutativity
      
      
        
          
          
            a
          
          
            b
          
          
            
              
              
                
                a
                
              
              
                
                b
                
              
            
          
          
            
            
              
              a
              b
            
            
              
              b
              a
            
          
        
      
    

    
      
        
          
          3
        
      
    

    
      
        
          
          3
          5
        
      
    

    
      
        If this were evaluated at x=5, y=2, and z=1 it
    would yield 8.
      
      
        
          
          x
          y
          z
        
      
    

    
       for all a,b | a + b = b + a 
      
        
          
            
            
              
              
            
            
              
              
                
                
                
              
              
                
                
                
              
            
          
        
      
    
  
  
    unary_minus
    application
    Additive Inversion
    This symbol denotes unary minus, i.e. the additive inverse for an additive group. It constructs the additive inverse of that group element.
    
      unary_minus
      
        type
        MathMLType
        real
      
    

    
      
        
          
          3
        
      
    

    
       for all a | a + (-a) = 0 
      
        
          
            
            
              
            
            
              
              
                
                
                
                  
                  
                
              
              
            
          
        
      
    
  
  
    minus
    Subtraction
    
      minus
      
        type
        MathMLType
        real
      
    
    application
    The symbol representing a binary minus function, the subtraction operator for an additive group. This is equivalent to adding the additive inverse.

    
      
        ForAll( x, x-x=0 )
      
      
        
          
          
            x
          
          
            
            
              
              x
              x
            
            0
          
        
      
    

    
      
        If this were evaluated at x=5 and 
  y=2 it would yield 3.
      
      
         
          
          x
          y
        
      
    

    
       for all a,b | a - b = a + (-b) 
      
        
          
            
            
              
              
            
            
              
              
                
                
                
              
              
                
                
                
                  
                  
                
              
            
          
        
      
    
  
  
    times
    Multiplication
    
      times
      
        type
        MathMLType
        real
      
    
    application
    The symbol representing an n-ary multiplication function.

    
      
        ForAll( [a,b], condition(in({a,b}, Commutative)), a*b=b*a )
      
    
    
      
        ForAll( [a,b,c], Associative, a*(b*c)=(a*b)*c ), associativity 
      
    
    
      
        multiplicative identity
      
      
        
          
          
            a
          
          
            
            
              
              1
              a
            
            a
           
        
      
    

    
      
         a*0=0 
      
    

    
      
        Commutative property
      
      
        
          
          
            a
          
          
            b
          
          
            
              
              
                
                a
                
              
              
                
                b
                
              
            
          
          
            
            
              
              a
              b
            
            
              
              b
              a
            
          
        
      
    

    
      
        a*0=0
      
      
        
          
          
            a
          
          
            
            
              
              0
              a
            
            0
           
        
      
    

    
      
        If this were evaluated at a = 5.5 and b = 3 it would yield
    16.5.
      
      
        
          
          a
          b
        
      
    

    
      
        
          
          
            
            
              
              
                
                 1 
                 2 
              
              
                
                 3 
                 4 
              
            
            
              
              
                
                 5 
                 6 
              
              
                
                 7 
                 8 
              
            
          
          
            
            
              
               19 
               22 
            
            
              
               43 
               50 
            
          
        
      
    

    
       for all a,b | a * 0 = 0 and a * b = a * (b - 1) + a 

      
        
          
            
            
              
              
            
            
              
              
                
                
                  
                  
                  
                
                
              
              
                
                
                  
                   
                   
                
                
                  
                   
                     
                     
                     
                       
                       
                       
                     
                   
                   
                
              
            
          
        
      
    

    
       for all a,b,c | a*(b+c) = a*b + a*c 
      
        
          
            
            
              
              
              
            
            
              
              
                
                
                
                  
                   
                   
                
              
              
                
                
                  
                   
                   
                
                
                  
                   
                   
                
              
            
          
        
      
    
  
  
    divide
    Division
    application
    
      divide
      
        type
        MathMLType
         real 
      
    
    This symbol represents a (binary) division function denoting the first argument right-divided by the second, i.e. divide(a,b)=a*inverse(b). It is the inverse of the multiplication function defined by the symbol times in this CD.

    
      
        Division by Zero error
      
      
        
          
          
            a
          
          
            
            
              
              a
              0
            
            
          
        
      
    

    
      
        ForAll( a, a!= 0, a/a = 1 )
      
      
        
           
           
            a
          
           
            
              
              a
              0
            
          
           
            
             
              
              a
              a
            
             1
           
        
      
    

    
      
        As a MathML expression, this does not evaluate. However, on receiving such an
      expression, some applications may attempt to evaluate and simplify the value. For
      example, when a=5 and b=2 some mathematical applications may
      evaluate this to 2.5 while others will treat is as a rational number.
      
      
        
          
          a
          b
        
      
    


    
       whenever not(a=0) then a/a = 1 
      
        
          
            
            
              
            
            
              
              
                
                
                
              
              
                
                
                  
                  
                  
                
                
              
            
          
        
      
    
  
  
    power
    Exponentiation
    
      power
      
        type
        MathMLType
        real
      
    
    application
    This symbol represents a power function. The first argument is raised to the power of the second argument. When the second argument is not an integer, powering is defined in terms of exponentials and logarithms for the complex and real numbers. This operator can represent general powering.

    
      
        ForAll( a, a!=0, a^0=1 )
      
      
        
          
          
            a
          
          
            
              
              a
              0
            
          
          
            
            
              
              a
              0
            
            1
          
        
      
    

    
      
        ForAll( a, a^1=a )
      
      
        
          
          
            a
          
          
            
            
              
              a
              1
            
            a
          
        
      
    

    
      
        ForAll( a, 1^a=1 )
      
      
        
          
          
            a
          
          
            
            
              
              1
              a
            
            1
          
        
      
    

    
      
        
          
          2
          x
        
      
    

    
      
        If this were evaluated at x= 5 it would yield 125.
      
      
        
          
          x
          3
        
      
    


    
      
    x\in C implies x^a = exp(a ln x)
  

      
        
          
            
            
              
              
              
            
            
              
              
                
                
                
              
              
                
                
                  
                  
                  
                    
                    
                  
                
              
            
          
        
      
    

    
      
  if n is an integer then
  x^0 = 1,
  x^n = x * x^(n-1)

      
        
          
            
            
              
              
              
            
            
              
              
                
                
                  
                  
                  0
                
                
              
              
                
                
                  
                  
                  
                
                
                  
                  
                  
                    
                    
                    
                      
                      
                      1
                    
                  
                
              
            
          
        
      
    

    
      
        
          
          
            
            
              
              
                
                 1 
                 2 
              
              
                
                 3 
                 4 
              
            
            3
          
          
            
            
              
               37 
               54 
            
            
              
               81 
               118 
            
          
        
      
    

    
      
        
          
          
            
            
            
              
              
              
            
          
          
            
            
          
        
      
    
  
  
    abs
    Absolute Value
    application
    A unary operator which represents the absolute value of its argument. The argument should be numerically valued. In the complex case this is often referred to as the modulus.
    
      abs     
      
        type
        MathMLType
        real
      
    

    
      
        for all x and y, abs(x) + abs(y) >= abs(x+y) 
      
    

    
      
        The following example encodes the absolute value of x.
      
      
        
          
          x
        
      
    

    
       for all x,y | abs(x) + abs(y) >= abs(x+y) 
      
        
          
            
            
              
              
            
            
              
              
                
                
                  
                  
                
                
                  
                  
                
              
              
                
                
                  
                  
                  
                
              
            
          
        
      
    
  
  
    root
    Root
    
      root
      
        type
         "real" | "complex" | "principal_branch" | MathMLType 
        "real"
      
    
    application
    A binary operator which represents its first argument "lowered" to its n'th root where n is the second argument. This is the inverse of the operation represented by the power symbol defined in this CD.

    
      Care should be taken as to the precise meaning of this operator, in particular
      which root is represented, however it is here to represent the general notion of
      taking n'th roots. As inferred by the signature relevant to this symbol, the
      function represented by this symbol is the single valued function, the specific root
      returned is the one indicated by the first CMP. Note also that the converse of the
      second CMP is not valid in general.
    

    
      
        ForAll( bvars(a,n), root(degree(n),a) = a^(1/n) )
      
    

    
      
        The nth root of a is is given by
      
      
        
          
          
            n
          
          a
        
      
    

    
       x\in C implies root(x,n) = exp(ln(x)/n) 
      
        
          
            
            
              
              
              
            
            
              
              
                
                
                          
              
              
                
                
                  
                  
                    
                    
                  
                            
                
              
            
          
        
      
    

    
       for all a,n | power(root(a,n),n) = a (if the root exists!) 
      
        
          
            
            
              
              
            
            
              
              
                
                
                  
                  
                  
                
                
              
              
            
          
        
      
    
  
  
    sum
    Summation
    application
    An operator taking two arguments, the first being the range of summation, e.g. an integral interval, the second being the function to be summed. Note that the sum may be over an infinite interval.
  
    
      sum
    

     
      
        
          
          
             
             
              x
            
             
              a
            
             
              b
            
             
              f
              x
            
          
        
      
    

    
      
        
          
          
             
             
              x
            
             
               
                
                x
                B
              
            
             
               f
              x
            
          
        
      
    

    
      
        
          
          
            B
          
          f
        
      
    

    
  This represents the summation of the reciprocals of all the integers between
  1 and 10 inclusive.

        
          
          
            
             1 
             10 
          
          
            
            
              
            
            
              
               1 
              
            
          
        
      
    
  
  
    product
    Project
    application
    An operator taking two arguments, the first being the range of multiplication e.g. an integral interval, the second being the function to be multiplied. Note that the product may be over an infinite interval.

    
      product
    

    
      
        
          
          
            
            
              x
            
             
              a
            
            
              b
            
            
               f
              x
            
          
        
      
    

    
      
        
          
          
            
            
              x
            
            
               
                
                x
                B
              
            
            
              f
              x
            
          
        
      
    

    
  This represents the statement that the factorial of n is equal to the product of all the
  integers between 1 and n inclusive.

        
          
          
            
            
          
          
            
            
              
               1 
              
            
            
              
              
                
              
              
            
          
        
      
    
  
