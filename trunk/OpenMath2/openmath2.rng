<?xml version="1.0" encoding="UTF-8"?>
<!--
  Schema for OpenMath 2
  $Id: openmath2.rng,v 1.2 2003/10/01 13:15:09 openmath Exp $
-->
<grammar xmlns:xlink="http://www.w3.org/1999/xlink" ns="http://www.openmath.org/OpenMath" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <!-- OM2: allow OMR -->
  <define name="omel">
    <choice>
      <ref name="OMS"/>
      <ref name="OMV"/>
      <ref name="OMI"/>
      <ref name="OMB"/>
      <ref name="OMSTR"/>
      <ref name="OMF"/>
      <ref name="OMA"/>
      <ref name="OMBIND"/>
      <ref name="OME"/>
      <ref name="OMATTR"/>
      <ref name="OMR"/>
    </choice>
  </define>
  <!-- things which can be variables -->
  <define name="omvar">
    <choice>
      <ref name="OMV"/>
      <ref name="attvar"/>
    </choice>
  </define>
  <define name="attvar">
    <element name="OMATTR">
      <ref name="common.attributes"/>
      <group>
        <ref name="OMATP"/>
        <choice>
          <ref name="OMV"/>
          <ref name="attvar"/>
        </choice>
      </group>
    </element>
  </define>
  <!-- OM2: common.attributes attributes -->
  <define name="common.attributes">
    <optional>
      <attribute name="id">
        <data type="ID"/>
      </attribute>
    </optional>
  </define>
  <!-- symbol -->
  <define name="OMS">
    <element name="OMS">
      <ref name="common.attributes"/>
      <ref name="attlist.OMS"/>
    </element>
  </define>
  <define name="attlist.OMS">
    <attribute name="name">
      <data type="NCName"/>
    </attribute>
    <attribute name="cd">
      <data type="NCName"/>
    </attribute>
  </define>
  <!-- variable -->
  <define name="OMV">
    <element name="OMV">
      <ref name="common.attributes"/>
      <ref name="attlist.OMV"/>
    </element>
  </define>
  <define name="attlist.OMV">
    <attribute name="name">
      <data type="NCName"/>
    </attribute>
  </define>
  <!-- integer -->
  <define name="OMI">
    <element name="OMI">
      <ref name="common.attributes"/>
      <data type="string">
        <param name="pattern">\s*(-\s?)?[0-9]+(\s[0-9]+)*\s*</param>
      </data>
    </element>
  </define>
  <!-- byte array -->
  <define name="OMB">
    <element name="OMB">
      <ref name="common.attributes"/>
      <data type="base64Binary"/>
    </element>
  </define>
  <!-- string -->
  <define name="OMSTR">
    <element name="OMSTR">
      <ref name="common.attributes"/>
      <text/>
    </element>
  </define>
  <!-- floating point -->
  <define name="OMF">
    <element name="OMF">
      <ref name="common.attributes"/>
      <ref name="attlist.OMF"/>
    </element>
  </define>
  <define name="attlist.OMF">
    <choice>
      <attribute name="dec">
        <data type="string">
          <param name="pattern">(-?)([0-9]+)?(\.[0-9]+)?(e([+\-]?)[0-9]+)?</param>
        </data>
      </attribute>
      <attribute name="hex">
        <data type="string">
          <param name="pattern">[0-9A-F]+</param>
        </data>
      </attribute>
    </choice>
  </define>
  <!-- apply constructor -->
  <define name="OMA">
    <element name="OMA">
      <ref name="common.attributes"/>
      <oneOrMore>
        <ref name="omel"/>
      </oneOrMore>
    </element>
  </define>
  <!-- binding constructor & variable -->
  <define name="OMBIND">
    <element name="OMBIND">
      <ref name="common.attributes"/>
      <ref name="omel"/>
      <ref name="OMBVAR"/>
      <ref name="omel"/>
    </element>
  </define>
  <define name="OMBVAR">
    <element name="OMBVAR">
      <ref name="common.attributes"/>
      <oneOrMore>
        <ref name="omvar"/>
      </oneOrMore>
    </element>
  </define>
  <!-- error -->
  <define name="OME">
    <element name="OME">
      <ref name="common.attributes"/>
      <ref name="OMS"/>
      <zeroOrMore>
        <ref name="omel"/>
      </zeroOrMore>
    </element>
  </define>
  <!-- attribution constructor & attribute pair constructor -->
  <define name="OMATTR">
    <element name="OMATTR">
      <ref name="common.attributes"/>
      <ref name="OMATP"/>
      <ref name="omel"/>
    </element>
  </define>
  <!-- OM2: allow OMBOX -->
  <define name="OMATP">
    <element name="OMATP">
      <ref name="common.attributes"/>
      <oneOrMore>
        <ref name="OMS"/>
        <choice>
          <ref name="omel"/>
          <ref name="OMBOX"/>
        </choice>
      </oneOrMore>
    </element>
  </define>
  <!-- OM2: OMBOX -->
  <define name="OMBOX">
    <element name="OMBOX">
      <ref name="common.attributes"/>
      <zeroOrMore>
        <choice>
          <ref name="omel"/>
          <ref name="notom"/>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <!-- Any elements not in the om namespace (valid om is allowed as a descendant) -->
  <define name="notom">
    <choice>
      <element>
        <anyName>
          <except>
            <nsName/>
          </except>
        </anyName>
        <zeroOrMore>
          <attribute>
            <anyName/>
          </attribute>
        </zeroOrMore>
        <zeroOrMore>
          <choice>
            <ref name="omel"/>
            <ref name="notom"/>
          </choice>
        </zeroOrMore>
      </element>
      <text/>
    </choice>
  </define>
  <!-- OM object constructor -->
  <define name="OMOBJ">
    <element name="OMOBJ">
      <ref name="common.attributes"/>
      <ref name="omel"/>
    </element>
  </define>
  <start>
    <ref name="OMOBJ"/>
  </start>
  <!-- OM2: OMR -->
  <define name="OMR">
    <element name="OMR">
      <ref name="common.attributes"/>
      <ref name="attlist.OMR"/>
    </element>
  </define>
  <define name="attlist.OMR">
    <attribute name="xlink:href"/>
    <attribute name="xlink:type">
      <value>simple</value>
    </attribute>
    <attribute name="xlink:show">
      <value>embed</value>
    </attribute>
  </define>
</grammar>
