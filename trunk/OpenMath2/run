#!/usr/local/bin/bash


echo RNC/xml
for i in omcd2.rnc omcdsig2.rnc openmath2.rnc omcdgroup2.rnc
do
echo $i
perl rnc2dbk $i > ${i%%.rnc}rnc.xml
done


# openmath2.rnc has to be last
echo RNG
for i in omcd2.rnc omcdsig2.rnc  omcdgroup2.rnc openmath2.rnc
do
echo $i
java -jar trang.jar  $i ${i%%rnc}rng
done

# openmath2.rnc has to be last
echo XSD
for i in omcd2.rnc omcdsig2.rnc omcdgroup2.rnc  openmath2.rnc
do
echo $i
java -jar trang.jar  $i ${i%%rnc}xsd
done

>trang.txt
echo DTD
for i in openmath2.rnc
do
echo $i
sed -e "s/attvar =[^}]*}/attvar = OMATTR/" \
    -e "s/notom =.*$//" \
    -e "s/^.*element \*.*$//" \
    -e "s/ (omel|notom)\*/omel/" \
    -e "s/^.* text.$//" \
    -e "s/{pattern.*}}/}/" \
    -e "s/include .openmath2.rnc. {.*}/# OMDTD/" \
        $i >tmp.rnc

 java -jar trang.jar  tmp.rnc tmp.dtd 2>> trang.txt
 
 sed -e "s/OMFOREIGN .*>/OMFOREIGN ANY>/" \
     -e "s/:*ns1:*//g" \
     -e "s/\# OMDTD/<!ENTITY % omdtd SYSTEM \"openmath2.dtd\"> %omdtd;/"\
        tmp.dtd > ${i%%rnc}dtd
 sed -e "s/</\&lt;/g" ${i%%rnc}dtd > ${i%%.rnc}dtd.xml
done

for i in omcd2.rnc 
do
echo DTD
echo $i
sed -e  "s/| OMOBJ//" \
    -e "s/OMOBJ/text/" \
    -e "s/include .openmath2.rnc. {.*}/# OMDTD/" \
    -e "s/\(CDRevision[^,]*\)[)],/\\1)+,/" \
    -e "s/\(Description\)[)],/\\1)+,/" \
    -e "s/\(Role\)[?]/\\1/" \
    -e "s/ &/ |/g" \
        $i >tmp.rnc

 java -jar trang.jar  tmp.rnc tmp.dtd  2>> trang.txt
 

 sed -e "s/text-or-om \"(#PCDATA/text-or-om \"(#PCDATA|OMOBJ/" \
     -e "s/FMP (#PCDATA)/FMP (OMOBJ)/" \
     -e "s/:ns1//g" \
     -e "s/ns1://g" \
     -e "s/<!-- OMDTD -->/<!ENTITY % omdtd SYSTEM \"openmath2.dtd\"> %omdtd;/"\
        tmp.dtd > ${i%%rnc}dtd
 sed -e "s/</\&lt;/g" ${i%%rnc}dtd > ${i%%.rnc}dtd.xml


done

echo DTD
echo omcdgroup2.rnc
 java -jar trang.jar  omcdgroup2.rnc omcdgroup2.dtd 2>> trang.txt


for i in  omcdsig2.rnc
do
echo DTD
echo $i
sed -e  "s/| OMOBJ//" \
    -e "s/OMOBJ/text/" \
    -e "s/include .openmath2.rnc. {.*}/# OMDTD/" \
    -e "s/ &/ |/g" \
        $i >tmp.rnc

 java -jar trang.jar  tmp.rnc tmp.dtd  2>> trang.txt
 

 sed -e "s/Signature ..#PCDATA..../Signature (OMOBJ)/" \
     -e "s/CDSignatures .CDSComment./CDSignatures (CDSComment/" \
     -e "s/:ns1//g" \
     -e "s/ns1://g" \
     -e "s/<!-- OMDTD -->/<!ENTITY % omdtd SYSTEM \"openmath2.dtd\"> %omdtd;/"\
        tmp.dtd > ${i%%rnc}dtd
 sed -e "s/</\&lt;/g" ${i%%rnc}dtd > ${i%%.rnc}dtd.xml


done


echo validate
rxp -sxV omstd20.xml


echo html
saxon  -o omstd20html.xml omstd20.xml omstd20.xsl
echo chunked html
saxon   omstd20.xml omstd20.xsl chunk="true"
echo html-diff
saxon  -o omstd20html-diff.xml omstd20.xml omstd20.xsl showdiffs=true

echo tex
saxon  -o omstd20.tex omstd20.xml omstd20tex.xsl 
echo tex-diff
saxon  -o omstd20-diff.tex omstd20.xml omstd20tex.xsl showdiffs=true

echo pdf
pdflatex \\batchmode \\input omstd20.tex
if (grep -i rerun omstd20.log)
  then
  pdflatex \\batchmode \\input omstd20.tex
  if (grep -i rerun omstd20.log)
    then 
    pdflatex \\batchmode \\input omstd20.tex
    if (grep -i rerun omstd20.log)
      then
      pdflatex \\batchmode \\input omstd20.tex
    fi
  fi
fi

echo pdf-diff
pdflatex \\batchmode \\input omstd20-diff.tex
if (grep -i rerun omstd20-diff.log)
  then
  pdflatex \\batchmode \\input omstd20-diff.tex
  if (grep -i rerun omstd20-diff.log)
    then 
    pdflatex \\batchmode \\input omstd20-diff.tex
    if (grep -i rerun omstd20-diff.log)
      then
      pdflatex \\batchmode \\input omstd20-diff.tex
    fi
  fi
fi


echo zip
rm tmp.*
zip -q om20.zip o*.xml *.dtd [opv][me]*.xsl *.rnc *.rng *.xsd o*.pdf *.png *.ocd run docbook